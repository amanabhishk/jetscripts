//
// File generated by /home/hannu/Cern/root/bin/rootcint at Tue Jan 13 14:12:44 2015

// Do NOT change. Changes will be lost next time file is generated
//

#define R__DICTIONARY_FILENAME main92Dct
#include "RConfig.h" //rootcint 4834
#if !defined(R__ACCESS_IN_SYMBOL)
//Break the privacy of classes -- Disabled for the moment
#define private public
#define protected public
#endif

// Since CINT ignores the std namespace, we need to do so in this file.
namespace std {} using namespace std;
#include "main92Dct.h"

#include "TCollectionProxyInfo.h"
#include "TClass.h"
#include "TBuffer.h"
#include "TMemberInspector.h"
#include "TInterpreter.h"
#include "TVirtualMutex.h"
#include "TError.h"

#ifndef G__ROOT
#define G__ROOT
#endif

#include "RtypesImp.h"
#include "TIsAProxy.h"
#include "TFileMergeInfo.h"

// Direct notice to TROOT of the dictionary's loading.
namespace {
   static struct DictInit {
      DictInit() {
         ROOT::RegisterModule();
      }
   } __TheDictionaryInitializer;
}

// START OF SHADOWS

namespace ROOTShadow {
   namespace Shadow {
      namespace Pythia8 {

      #if !(defined(R__ACCESS_IN_SYMBOL) || defined(R__USE_SHADOW_CLASS))
      typedef ::Pythia8::RndmEngine RndmEngine;
      #else
      class RndmEngine  {
         public:
         //friend XX;
         // To force the creation of a virtual table, throw just in case.
         virtual ~RndmEngine() throw() {};
      };
      #endif
      } 
      namespace Pythia8 {

      #if !(defined(R__ACCESS_IN_SYMBOL) || defined(R__USE_SHADOW_CLASS))
      typedef ::Pythia8::Rndm Rndm;
      #else
      class Rndm  {
         public:
         //friend XX;
         bool initRndm; //
         int i97; //
         int j97; //
         int seedSave; //
         long sequence; //
         double u[97]; //
         double c; //
         double cd; //
         double cm; //
         bool useExternalRndm; //
         ::Pythia8::RndmEngine* rndmEngPtr; //
      };
      #endif
      } 
      namespace Pythia8 {

      #if !(defined(R__ACCESS_IN_SYMBOL) || defined(R__USE_SHADOW_CLASS))
      typedef ::Pythia8::Vec4 Vec4;
      #else
      class Vec4  {
         public:
         //friend XX;
         double xx; //
         double yy; //
         double zz; //
         double tt; //
      };
      #endif
      } 
      namespace Pythia8 {

      #if !(defined(R__ACCESS_IN_SYMBOL) || defined(R__USE_SHADOW_CLASS))
      typedef ::Pythia8::Info Info;
      #else
      class Info  {
         public:
         //friend XX;
         #if !(defined(R__ACCESS_IN_SYMBOL) || defined(R__USE_SHADOW_CLASS))
         typedef ::Pythia8::Info::Pythia Pythia;
         #else
         class Pythia  {
            public:
            //friend XX;
         };
         #endif

         #if !(defined(R__ACCESS_IN_SYMBOL) || defined(R__USE_SHADOW_CLASS))
         typedef ::Pythia8::Info::ProcessLevel ProcessLevel;
         #else
         class ProcessLevel  {
            public:
            //friend XX;
         };
         #endif

         #if !(defined(R__ACCESS_IN_SYMBOL) || defined(R__USE_SHADOW_CLASS))
         typedef ::Pythia8::Info::ProcessContainer ProcessContainer;
         #else
         class ProcessContainer  {
            public:
            //friend XX;
         };
         #endif

         #if !(defined(R__ACCESS_IN_SYMBOL) || defined(R__USE_SHADOW_CLASS))
         typedef ::Pythia8::Info::PartonLevel PartonLevel;
         #else
         class PartonLevel  {
            public:
            //friend XX;
         };
         #endif

         #if !(defined(R__ACCESS_IN_SYMBOL) || defined(R__USE_SHADOW_CLASS))
         typedef ::Pythia8::Info::MultipartonInteractions MultipartonInteractions;
         #else
         class MultipartonInteractions  {
            public:
            //friend XX;
         };
         #endif

         #if !(defined(R__ACCESS_IN_SYMBOL) || defined(R__USE_SHADOW_CLASS))
         typedef ::Pythia8::Info::LHAup LHAup;
         #else
         class LHAup  {
            public:
            //friend XX;
         };
         #endif

         #if !(defined(R__ACCESS_IN_SYMBOL) || defined(R__USE_SHADOW_CLASS))
         typedef ::Pythia8::Info::LHAPDF LHAPDF;
         #else
         class LHAPDF  {
            public:
            //friend XX;
         };
         #endif

         int LHEFversionSave; //
         vector< double > sigmaLHEFSave; //
         ::Pythia8::LHAinitrwgt* initrwgt; //
         vector< ::Pythia8::LHAgenerator >* generators; //
         map< ::string, ::Pythia8::LHAweightgroup >* weightgroups; //
         map< ::string, ::Pythia8::LHAweight >* init_weights; //
         map< ::string, ::string >* eventAttributes; //
         map< ::string, double >* weights_detailed; //
         vector< double >* weights_compressed; //
         ::Pythia8::LHAscales* scales; //
         ::Pythia8::LHAweights* weights; //
         ::Pythia8::LHArwgt* rwgt; //
         int idASave; //
         int idBSave; //
         double pzASave; //
         double eASave; //
         double mASave; //
         double pzBSave; //
         double eBSave; //
         double mBSave; //
         double eCMSave; //
         double sSave; //
         bool lowPTmin; //
         long nTry; //
         long nSel; //
         long nAcc; //
         double sigGen; //
         double sigErr; //
         double wtAccSum; //
         map< int, ::string > procNameM; //
         map< int, long > nTryM; //
         map< int, long > nSelM; //
         map< int, long > nAccM; //
         map< int, double > sigGenM; //
         map< int, double > sigErrM; //
         int lhaStrategySave; //
         double a0MPISave; //
         bool isRes; //
         bool isDiffA; //
         bool isDiffB; //
         bool isDiffC; //
         bool isND; //
         bool isLH; //
         bool hasSubSave[4]; //
         bool bIsSet; //
         bool evolIsSet; //
         bool atEOF; //
         bool isVal1; //
         bool isVal2; //
         bool hasHistorySave; //
         int codeSave; //
         int codeSubSave[4]; //
         int nFinalSave; //
         int nFinalSubSave[4]; //
         int nTotal; //
         int id1Save[4]; //
         int id2Save[4]; //
         int id1pdfSave[4]; //
         int id2pdfSave[4]; //
         int nMPISave; //
         int nISRSave; //
         int nFSRinProcSave; //
         int nFSRinResSave; //
         double x1Save[4]; //
         double x2Save[4]; //
         double x1pdfSave[4]; //
         double x2pdfSave[4]; //
         double pdf1Save[4]; //
         double pdf2Save[4]; //
         double Q2FacSave[4]; //
         double alphaEMSave[4]; //
         double alphaSSave[4]; //
         double Q2RenSave[4]; //
         double scalupSave[4]; //
         double sH[4]; //
         double tH[4]; //
         double uH[4]; //
         double pTH[4]; //
         double m3H[4]; //
         double m4H[4]; //
         double thetaH[4]; //
         double phiH[4]; //
         double weightSave; //
         double bMPISave; //
         double enhanceMPISave; //
         double pTmaxMPISave; //
         double pTmaxISRSave; //
         double pTmaxFSRSave; //
         double pTnowSave; //
         double zNowISRSave; //
         double pT2NowISRSave; //
         string nameSave; //
         string nameSubSave[4]; //
         vector< int > codeMPISave; //
         vector< int > iAMPISave; //
         vector< int > iBMPISave; //
         vector< double > pTMPISave; //
         vector< double > eMPISave; //
         int counters[50]; //
         map< ::string, int > messages; //
         map< ::string, ::string > headers; //
         map< ::string, pair< void*, int >  > plugins; //
         double weightCKKWLSave; //
         double weightFIRSTSave; //
      };
      #endif
      } 
      namespace Pythia8 {

      #if !(defined(R__ACCESS_IN_SYMBOL) || defined(R__USE_SHADOW_CLASS))
      typedef ::Pythia8::Settings Settings;
      #else
      class Settings  {
         public:
         //friend XX;
         ::Pythia8::Info* infoPtr; //
         map< ::string, ::Pythia8::Flag > flags; //
         map< ::string, ::Pythia8::Mode > modes; //
         map< ::string, ::Pythia8::Parm > parms; //
         map< ::string, ::Pythia8::Word > words; //
         map< ::string, ::Pythia8::FVec > fvecs; //
         map< ::string, ::Pythia8::MVec > mvecs; //
         map< ::string, ::Pythia8::PVec > pvecs; //
         bool isInit; //
         bool readingFailedSave; //
      };
      #endif
      } 
      namespace Pythia8 {

      #if !(defined(R__ACCESS_IN_SYMBOL) || defined(R__USE_SHADOW_CLASS))
      typedef ::Pythia8::AlphaStrong AlphaStrong;
      #else
      class AlphaStrong  {
         public:
         //friend XX;
         // To force the creation of a virtual table, throw just in case.
         virtual ~AlphaStrong() throw() {};
         bool isInit; //
         int order; //
         int nfmax; //
         double Lambda3Save; //
         double Lambda4Save; //
         double Lambda5Save; //
         double Lambda6Save; //
         double Lambda3Save2; //
         double Lambda4Save2; //
         double Lambda5Save2; //
         double Lambda6Save2; //
         double scale2Min; //
         double mc2; //
         double mb2; //
         double mt2; //
         bool useCMW; //
         bool lastCallToFull; //
         double valueRef; //
         double valueNow; //
         double scale2Now; //
      };
      #endif
      } 
      namespace Pythia8 {

      #if !(defined(R__ACCESS_IN_SYMBOL) || defined(R__USE_SHADOW_CLASS))
      typedef ::Pythia8::AlphaEM AlphaEM;
      #else
      class AlphaEM  {
         public:
         //friend XX;
         int order; //
         double alpEM0; //
         double alpEMmZ; //
         double mZ2; //
         double bRun[5]; //
         double alpEMstep[5]; //
      };
      #endif
      } 
      namespace Pythia8 {

      #if !(defined(R__ACCESS_IN_SYMBOL) || defined(R__USE_SHADOW_CLASS))
      typedef ::Pythia8::CoupSM CoupSM;
      #else
      class CoupSM  {
         public:
         //friend XX;
         double s2tW; //
         double c2tW; //
         double s2tWbar; //
         double GFermi; //
         double vfSave[20]; //
         double lfSave[20]; //
         double rfSave[20]; //
         double ef2Save[20]; //
         double vf2Save[20]; //
         double af2Save[20]; //
         double efvfSave[20]; //
         double vf2af2Save[20]; //
         double VCKMsave[5][5]; //
         double V2CKMsave[5][5]; //
         double V2CKMout[20]; //
         ::Pythia8::Rndm* rndmPtr; //
         ::Pythia8::AlphaStrong alphaSlocal; //
         ::Pythia8::AlphaEM alphaEMlocal; //
      };
      #endif
      } 
      namespace Pythia8 {

      #if !(defined(R__ACCESS_IN_SYMBOL) || defined(R__USE_SHADOW_CLASS))
      typedef ::Pythia8::Couplings Couplings;
      #else
      class Couplings  :  public ::Pythia8::CoupSM {
         public:
         //friend XX;
         bool isSUSY; //
      };
      #endif
      } 
      namespace Pythia8 {

      #if !(defined(R__ACCESS_IN_SYMBOL) || defined(R__USE_SHADOW_CLASS))
      typedef ::Pythia8::ParticleData ParticleData;
      #else
      class ParticleData  {
         public:
         //friend XX;
         int modeBreitWigner; //
         double maxEnhanceBW; //
         double mQRun[7]; //
         double Lambda5Run; //
         ::Pythia8::Info* infoPtr; //
         ::Pythia8::Settings* settingsPtr; //
         ::Pythia8::Rndm* rndmPtr; //
         ::Pythia8::Couplings* couplingsPtr; //
         map< int, ::Pythia8::ParticleDataEntry > pdt; //
         ::Pythia8::ParticleDataEntry* particlePtr; //
         bool isInit; //
         bool readingFailedSave; //
      };
      #endif
      } 
      namespace Pythia8 {

      #if !(defined(R__ACCESS_IN_SYMBOL) || defined(R__USE_SHADOW_CLASS))
      typedef ::Pythia8::ResonanceWidths ResonanceWidths;
      #else
      class ResonanceWidths  {
         public:
         //friend XX;
         // To force the creation of a virtual table, throw just in case.
         virtual ~ResonanceWidths() throw() {};
         int idRes; //
         int hasAntiRes; //
         bool doForceWidth; //
         bool isGeneric; //
         bool allowCalcWidth; //
         double minWidth; //
         double minThreshold; //
         double mRes; //
         double GammaRes; //
         double m2Res; //
         double GamMRat; //
         double openPos; //
         double openNeg; //
         double forceFactor; //
         int iChannel; //
         int onMode; //
         int meMode; //
         int mult; //
         int id1; //
         int id2; //
         int id3; //
         int id1Abs; //
         int id2Abs; //
         int id3Abs; //
         int idInFlav; //
         double widNow; //
         double mHat; //
         double mf1; //
         double mf2; //
         double mf3; //
         double mr1; //
         double mr2; //
         double mr3; //
         double ps; //
         double kinFac; //
         double alpEM; //
         double alpS; //
         double colQ; //
         double preFac; //
         ::Pythia8::ParticleDataEntry* particlePtr; //
         ::Pythia8::Info* infoPtr; //
         ::Pythia8::Settings* settingsPtr; //
         ::Pythia8::ParticleData* particleDataPtr; //
         ::Pythia8::Couplings* couplingsPtr; //
      };
      #endif
      } 
      namespace Pythia8 {

      #if !(defined(R__ACCESS_IN_SYMBOL) || defined(R__USE_SHADOW_CLASS))
      typedef ::Pythia8::DecayChannel DecayChannel;
      #else
      class DecayChannel  {
         public:
         //friend XX;
         int onModeSave; //
         double bRatioSave; //
         double currentBRSave; //
         double onShellWidthSave; //
         double openSecPos; //
         double openSecNeg; //
         int meModeSave; //
         int nProd; //
         int prod[8]; //
         bool hasChangedSave; //
      };
      #endif
      } 
      namespace Pythia8 {

      #if !(defined(R__ACCESS_IN_SYMBOL) || defined(R__USE_SHADOW_CLASS))
      typedef ::Pythia8::ParticleDataEntry ParticleDataEntry;
      #else
      class ParticleDataEntry  {
         public:
         //friend XX;
         int idSave; //
         string nameSave; //
         string antiNameSave; //
         int spinTypeSave; //
         int chargeTypeSave; //
         int colTypeSave; //
         double m0Save; //
         double mWidthSave; //
         double mMinSave; //
         double mMaxSave; //
         double tau0Save; //
         double constituentMassSave; //
         bool hasAntiSave; //
         bool isResonanceSave; //
         bool mayDecaySave; //
         bool doExternalDecaySave; //
         bool isVisibleSave; //
         bool doForceWidthSave; //
         bool hasChangedSave; //
         int modeBWnow; //
         double atanLow; //
         double atanDif; //
         double mThr; //
         vector< ::Pythia8::DecayChannel > channels; //
         double currentBRSum; //
         ::Pythia8::ResonanceWidths* resonancePtr; //
         ::Pythia8::ParticleData* particleDataPtr; //
      };
      #endif
      } 
      #if !(defined(R__ACCESS_IN_SYMBOL) || defined(R__USE_SHADOW_CLASS))
      typedef pair< int, ::Pythia8::ParticleDataEntry > pairlEintcOPythia8cLcLParticleDataEntrygR;
      #else
      class pairlEintcOPythia8cLcLParticleDataEntrygR  {
         public:
         //friend XX;
         int first; //
         ::Pythia8::ParticleDataEntry second; //
      };
      #endif

      namespace Pythia8 {

      #if !(defined(R__ACCESS_IN_SYMBOL) || defined(R__USE_SHADOW_CLASS))
      typedef ::Pythia8::Event Event;
      #else
      class Event  {
         public:
         //friend XX;
         int startColTag; //
         vector< ::Pythia8::Particle > entry; //
         vector< ::Pythia8::Junction > junction; //
         int maxColTag; //
         int savedSize; //
         int savedJunctionSize; //
         double scaleSave; //
         double scaleSecondSave; //
         string headerList; //
         ::Pythia8::ParticleData* particleDataPtr; //!
      };
      #endif
      } 
      namespace Pythia8 {

      #if !(defined(R__ACCESS_IN_SYMBOL) || defined(R__USE_SHADOW_CLASS))
      typedef ::Pythia8::Particle Particle;
      #else
      class Particle  {
         public:
         //friend XX;
         // To force the creation of a virtual table, throw just in case.
         virtual ~Particle() throw() {};
         int idSave; //
         int statusSave; //
         int mother1Save; //
         int mother2Save; //
         int daughter1Save; //
         int daughter2Save; //
         int colSave; //
         int acolSave; //
         ::Pythia8::Vec4 pSave; //
         double mSave; //
         double scaleSave; //
         double polSave; //
         bool hasVertexSave; //
         ::Pythia8::Vec4 vProdSave; //
         double tauSave; //
         ::Pythia8::ParticleDataEntry* pdePtr; //!
         ::Pythia8::Event* evtPtr; //!
      };
      #endif
      } 
      namespace Pythia8 {

      #if !(defined(R__ACCESS_IN_SYMBOL) || defined(R__USE_SHADOW_CLASS))
      typedef ::Pythia8::Junction Junction;
      #else
      class Junction  {
         public:
         //friend XX;
         bool remainsSave; //
         int kindSave; //
         int colSave[3]; //
         int endColSave[3]; //
         int statusSave[3]; //
      };
      #endif
      } 
      namespace Pythia8 {

      #if !(defined(R__ACCESS_IN_SYMBOL) || defined(R__USE_SHADOW_CLASS))
      typedef ::Pythia8::ResonanceGeneric ResonanceGeneric;
      #else
      class ResonanceGeneric  :  public ::Pythia8::ResonanceWidths {
         public:
         //friend XX;
         // To force the creation of a virtual table, throw just in case.
         virtual ~ResonanceGeneric() throw() {};
      };
      #endif
      } 
      namespace Pythia8 {

      #if !(defined(R__ACCESS_IN_SYMBOL) || defined(R__USE_SHADOW_CLASS))
      typedef ::Pythia8::ResonanceGmZ ResonanceGmZ;
      #else
      class ResonanceGmZ  :  public ::Pythia8::ResonanceWidths {
         public:
         //friend XX;
         // To force the creation of a virtual table, throw just in case.
         virtual ~ResonanceGmZ() throw() {};
         int gmZmode; //
         double thetaWRat; //
         double ei2; //
         double eivi; //
         double vi2ai2; //
         double gamNorm; //
         double intNorm; //
         double resNorm; //
      };
      #endif
      } 
      namespace Pythia8 {

      #if !(defined(R__ACCESS_IN_SYMBOL) || defined(R__USE_SHADOW_CLASS))
      typedef ::Pythia8::ResonanceW ResonanceW;
      #else
      class ResonanceW  :  public ::Pythia8::ResonanceWidths {
         public:
         //friend XX;
         // To force the creation of a virtual table, throw just in case.
         virtual ~ResonanceW() throw() {};
         double thetaWRat; //
         double alpEM; //
      };
      #endif
      } 
      namespace Pythia8 {

      #if !(defined(R__ACCESS_IN_SYMBOL) || defined(R__USE_SHADOW_CLASS))
      typedef ::Pythia8::ResonanceTop ResonanceTop;
      #else
      class ResonanceTop  :  public ::Pythia8::ResonanceWidths {
         public:
         //friend XX;
         // To force the creation of a virtual table, throw just in case.
         virtual ~ResonanceTop() throw() {};
         double thetaWRat; //
         double m2W; //
         double tanBeta; //
         double tan2Beta; //
         double mbRun; //
      };
      #endif
      } 
      namespace Pythia8 {

      #if !(defined(R__ACCESS_IN_SYMBOL) || defined(R__USE_SHADOW_CLASS))
      typedef ::Pythia8::ResonanceFour ResonanceFour;
      #else
      class ResonanceFour  :  public ::Pythia8::ResonanceWidths {
         public:
         //friend XX;
         // To force the creation of a virtual table, throw just in case.
         virtual ~ResonanceFour() throw() {};
         double thetaWRat; //
         double m2W; //
      };
      #endif
      } 
      namespace Pythia8 {

      #if !(defined(R__ACCESS_IN_SYMBOL) || defined(R__USE_SHADOW_CLASS))
      typedef ::Pythia8::ResonanceH ResonanceH;
      #else
      class ResonanceH  :  public ::Pythia8::ResonanceWidths {
         public:
         //friend XX;
         // To force the creation of a virtual table, throw just in case.
         virtual ~ResonanceH() throw() {};
         int higgsType; //
         bool useCubicWidth; //
         bool useRunLoopMass; //
         bool useNLOWidths; //
         double sin2tW; //
         double cos2tW; //
         double mT; //
         double mZ; //
         double mW; //
         double mHchg; //
         double GammaT; //
         double GammaZ; //
         double GammaW; //
         double rescAlpS; //
         double rescColQ; //
         double coup2d; //
         double coup2u; //
         double coup2l; //
         double coup2Z; //
         double coup2W; //
         double coup2Hchg; //
         double coup2H1H1; //
         double coup2A3A3; //
         double coup2H1Z; //
         double coup2A3Z; //
         double coup2A3H1; //
         double coup2HchgW; //
         double mLowT; //
         double mStepT; //
         double mLowZ; //
         double mStepZ; //
         double mLowW; //
         double mStepW; //
         double kinFacT[101]; //
         double kinFacZ[101]; //
         double kinFacW[101]; //
      };
      #endif
      } 
      namespace Pythia8 {

      #if !(defined(R__ACCESS_IN_SYMBOL) || defined(R__USE_SHADOW_CLASS))
      typedef ::Pythia8::ResonanceHchg ResonanceHchg;
      #else
      class ResonanceHchg  :  public ::Pythia8::ResonanceWidths {
         public:
         //friend XX;
         // To force the creation of a virtual table, throw just in case.
         virtual ~ResonanceHchg() throw() {};
         bool useCubicWidth; //
         double thetaWRat; //
         double mW; //
         double tanBeta; //
         double tan2Beta; //
         double coup2H1W; //
      };
      #endif
      } 
      namespace Pythia8 {

      #if !(defined(R__ACCESS_IN_SYMBOL) || defined(R__USE_SHADOW_CLASS))
      typedef ::Pythia8::ResonanceZprime ResonanceZprime;
      #else
      class ResonanceZprime  :  public ::Pythia8::ResonanceWidths {
         public:
         //friend XX;
         // To force the creation of a virtual table, throw just in case.
         virtual ~ResonanceZprime() throw() {};
         int gmZmode; //
         int maxZpGen; //
         double sin2tW; //
         double cos2tW; //
         double thetaWRat; //
         double mZ; //
         double GammaZ; //
         double m2Z; //
         double GamMRatZ; //
         double afZp[20]; //
         double vfZp[20]; //
         double coupZpWW; //
         double ei2; //
         double eivi; //
         double vai2; //
         double eivpi; //
         double vaivapi; //
         double vapi2; //
         double gamNorm; //
         double gamZNorm; //
         double ZNorm; //
         double gamZpNorm; //
         double ZZpNorm; //
         double ZpNorm; //
      };
      #endif
      } 
      namespace Pythia8 {

      #if !(defined(R__ACCESS_IN_SYMBOL) || defined(R__USE_SHADOW_CLASS))
      typedef ::Pythia8::ResonanceWprime ResonanceWprime;
      #else
      class ResonanceWprime  :  public ::Pythia8::ResonanceWidths {
         public:
         //friend XX;
         // To force the creation of a virtual table, throw just in case.
         virtual ~ResonanceWprime() throw() {};
         double thetaWRat; //
         double cos2tW; //
         double alpEM; //
         double aqWp; //
         double vqWp; //
         double alWp; //
         double vlWp; //
         double coupWpWZ; //
      };
      #endif
      } 
      namespace Pythia8 {

      #if !(defined(R__ACCESS_IN_SYMBOL) || defined(R__USE_SHADOW_CLASS))
      typedef ::Pythia8::ResonanceRhorizontal ResonanceRhorizontal;
      #else
      class ResonanceRhorizontal  :  public ::Pythia8::ResonanceWidths {
         public:
         //friend XX;
         // To force the creation of a virtual table, throw just in case.
         virtual ~ResonanceRhorizontal() throw() {};
         double thetaWRat; //
      };
      #endif
      } 
      namespace Pythia8 {

      #if !(defined(R__ACCESS_IN_SYMBOL) || defined(R__USE_SHADOW_CLASS))
      typedef ::Pythia8::ResonanceExcited ResonanceExcited;
      #else
      class ResonanceExcited  :  public ::Pythia8::ResonanceWidths {
         public:
         //friend XX;
         // To force the creation of a virtual table, throw just in case.
         virtual ~ResonanceExcited() throw() {};
         double Lambda; //
         double coupF; //
         double coupFprime; //
         double coupFcol; //
         double sin2tW; //
         double cos2tW; //
      };
      #endif
      } 
      namespace Pythia8 {

      #if !(defined(R__ACCESS_IN_SYMBOL) || defined(R__USE_SHADOW_CLASS))
      typedef ::Pythia8::ResonanceGraviton ResonanceGraviton;
      #else
      class ResonanceGraviton  :  public ::Pythia8::ResonanceWidths {
         public:
         //friend XX;
         // To force the creation of a virtual table, throw just in case.
         virtual ~ResonanceGraviton() throw() {};
         bool eDsmbulk; //
         bool eDvlvl; //
         double kappaMG; //
         double eDcoupling[27]; //
      };
      #endif
      } 
      namespace Pythia8 {

      #if !(defined(R__ACCESS_IN_SYMBOL) || defined(R__USE_SHADOW_CLASS))
      typedef ::Pythia8::ResonanceLeptoquark ResonanceLeptoquark;
      #else
      class ResonanceLeptoquark  :  public ::Pythia8::ResonanceWidths {
         public:
         //friend XX;
         // To force the creation of a virtual table, throw just in case.
         virtual ~ResonanceLeptoquark() throw() {};
         double kCoup; //
      };
      #endif
      } 
      namespace Pythia8 {

      #if !(defined(R__ACCESS_IN_SYMBOL) || defined(R__USE_SHADOW_CLASS))
      typedef ::Pythia8::ResonanceNuRight ResonanceNuRight;
      #else
      class ResonanceNuRight  :  public ::Pythia8::ResonanceWidths {
         public:
         //friend XX;
         // To force the creation of a virtual table, throw just in case.
         virtual ~ResonanceNuRight() throw() {};
         double thetaWRat; //
         double mWR; //
      };
      #endif
      } 
      namespace Pythia8 {

      #if !(defined(R__ACCESS_IN_SYMBOL) || defined(R__USE_SHADOW_CLASS))
      typedef ::Pythia8::ResonanceZRight ResonanceZRight;
      #else
      class ResonanceZRight  :  public ::Pythia8::ResonanceWidths {
         public:
         //friend XX;
         // To force the creation of a virtual table, throw just in case.
         virtual ~ResonanceZRight() throw() {};
         double sin2tW; //
         double thetaWRat; //
      };
      #endif
      } 
      namespace Pythia8 {

      #if !(defined(R__ACCESS_IN_SYMBOL) || defined(R__USE_SHADOW_CLASS))
      typedef ::Pythia8::ResonanceWRight ResonanceWRight;
      #else
      class ResonanceWRight  :  public ::Pythia8::ResonanceWidths {
         public:
         //friend XX;
         // To force the creation of a virtual table, throw just in case.
         virtual ~ResonanceWRight() throw() {};
         double thetaWRat; //
      };
      #endif
      } 
      namespace Pythia8 {

      #if !(defined(R__ACCESS_IN_SYMBOL) || defined(R__USE_SHADOW_CLASS))
      typedef ::Pythia8::ResonanceHchgchgLeft ResonanceHchgchgLeft;
      #else
      class ResonanceHchgchgLeft  :  public ::Pythia8::ResonanceWidths {
         public:
         //friend XX;
         // To force the creation of a virtual table, throw just in case.
         virtual ~ResonanceHchgchgLeft() throw() {};
         double yukawa[4][4]; //
         double gL; //
         double vL; //
         double mW; //
      };
      #endif
      } 
      namespace Pythia8 {

      #if !(defined(R__ACCESS_IN_SYMBOL) || defined(R__USE_SHADOW_CLASS))
      typedef ::Pythia8::ResonanceHchgchgRight ResonanceHchgchgRight;
      #else
      class ResonanceHchgchgRight  :  public ::Pythia8::ResonanceWidths {
         public:
         //friend XX;
         // To force the creation of a virtual table, throw just in case.
         virtual ~ResonanceHchgchgRight() throw() {};
         int idWR; //
         double yukawa[4][4]; //
         double gR; //
      };
      #endif
      } 
      namespace Pythia8 {

      #if !(defined(R__ACCESS_IN_SYMBOL) || defined(R__USE_SHADOW_CLASS))
      typedef ::Pythia8::InBeam InBeam;
      #else
      class InBeam  {
         public:
         //friend XX;
         int id; //
         double pdf; //
      };
      #endif
      } 
      namespace Pythia8 {

      #if !(defined(R__ACCESS_IN_SYMBOL) || defined(R__USE_SHADOW_CLASS))
      typedef ::Pythia8::InPair InPair;
      #else
      class InPair  {
         public:
         //friend XX;
         int idA; //
         int idB; //
         double pdfA; //
         double pdfB; //
         double pdfSigma; //
      };
      #endif
      } 
      namespace Pythia8 {

      #if !(defined(R__ACCESS_IN_SYMBOL) || defined(R__USE_SHADOW_CLASS))
      typedef ::Pythia8::SigmaProcess SigmaProcess;
      #else
      class SigmaProcess  {
         public:
         //friend XX;
         // To force the creation of a virtual table, throw just in case.
         virtual ~SigmaProcess() throw() {};
         ::Pythia8::Info* infoPtr; //
         ::Pythia8::Settings* settingsPtr; //
         ::Pythia8::ParticleData* particleDataPtr; //
         ::Pythia8::Rndm* rndmPtr; //
         ::Pythia8::BeamParticle* beamAPtr; //
         ::Pythia8::BeamParticle* beamBPtr; //
         ::Pythia8::Couplings* couplingsPtr; //
         ::Pythia8::SigmaTotal* sigmaTotPtr; //
         ::Pythia8::SusyLesHouches* slhaPtr; //
         ::Pythia8::LHAup* lhaUpPtr; //
         int nQuarkIn; //
         int renormScale1; //
         int renormScale2; //
         int renormScale3; //
         int renormScale3VV; //
         int factorScale1; //
         int factorScale2; //
         int factorScale3; //
         int factorScale3VV; //
         double Kfactor; //
         double mcME; //
         double mbME; //
         double mmuME; //
         double mtauME; //
         double renormMultFac; //
         double renormFixScale; //
         double factorMultFac; //
         double factorFixScale; //
         int higgsH1parity; //
         int higgsH2parity; //
         int higgsA3parity; //
         double higgsH1eta; //
         double higgsH2eta; //
         double higgsA3eta; //
         double higgsH1phi; //
         double higgsH2phi; //
         double higgsA3phi; //
         int idA; //
         int idB; //
         double mA; //
         double mB; //
         bool isLeptonA; //
         bool isLeptonB; //
         bool hasLeptonBeams; //
         vector< ::Pythia8::InBeam > inBeamA; //
         vector< ::Pythia8::InBeam > inBeamB; //
         vector< ::Pythia8::InPair > inPair; //
         double mH; //
         double sH; //
         double sH2; //
         double Q2RenSave; //
         double alpEM; //
         double alpS; //
         double Q2FacSave; //
         double x1Save; //
         double x2Save; //
         double pdf1Save; //
         double pdf2Save; //
         double sigmaSumSave; //
         int id1; //
         int id2; //
         int id3; //
         int id4; //
         int id5; //
         int idSave[6]; //
         int colSave[6]; //
         int acolSave[6]; //
         double mSave[6]; //
         double cosTheta; //
         double sinTheta; //
         double phi; //
         double sHMass; //
         double sHBeta; //
         double pT2Mass; //
         double pTFin; //
         ::Pythia8::Particle parton[6]; //
         ::Pythia8::Particle partonT[6]; //
         double mSaveT[6]; //
         double pTFinT; //
         double cosThetaT; //
         double sinThetaT; //
         double phiT; //
         double mME[5]; //
         ::Pythia8::Vec4 pME[5]; //
         bool swapTU; //
      };
      #endif
      } 
      namespace Pythia8 {

      #if !(defined(R__ACCESS_IN_SYMBOL) || defined(R__USE_SHADOW_CLASS))
      typedef ::Pythia8::Pythia Pythia;
      #else
      class Pythia  {
         public:
         //friend XX;
         ::Pythia8::Event process; //
         ::Pythia8::Event event; //
         ::Pythia8::Info info; //
         ::Pythia8::Settings settings; //
         ::Pythia8::ParticleData particleData; //
         ::Pythia8::Rndm rndm; //
         ::Pythia8::Couplings couplings; //
         ::Pythia8::Couplings* couplingsPtr; //
         ::Pythia8::SLHAinterface slhaInterface; //
         ::Pythia8::PartonSystems partonSystems; //
         ::Pythia8::Merging merging; //
         ::Pythia8::MergingHooks* mergingHooksPtr; //
         string xmlPath; //
         bool doProcessLevel; //
         bool doPartonLevel; //
         bool doHadronLevel; //
         bool doDiffraction; //
         bool doResDec; //
         bool doFSRinRes; //
         bool decayRHadrons; //
         bool abortIfVeto; //
         bool checkEvent; //
         bool checkHistory; //
         int nErrList; //
         double epTolErr; //
         double epTolWarn; //
         double mTolErr; //
         double mTolWarn; //
         bool isConstructed; //
         bool isInit; //
         bool isUnresolvedA; //
         bool isUnresolvedB; //
         bool showSaV; //
         bool showMaD; //
         int idA; //
         int idB; //
         int frameType; //
         int boostType; //
         int nCount; //
         int nShowLHA; //
         int nShowInfo; //
         int nShowProc; //
         int nShowEvt; //
         double mA; //
         double mB; //
         double pxA; //
         double pxB; //
         double pyA; //
         double pyB; //
         double pzA; //
         double pzB; //
         double eA; //
         double eB; //
         double pzAcm; //
         double pzBcm; //
         double eCM; //
         double betaZ; //
         double gammaZ; //
         ::Pythia8::Vec4 pAinit; //
         ::Pythia8::Vec4 pBinit; //
         ::Pythia8::Vec4 pAnow; //
         ::Pythia8::Vec4 pBnow; //
         ::Pythia8::RotBstMatrix MfromCM; //
         ::Pythia8::RotBstMatrix MtoCM; //
         int nErrEvent; //
         vector< int > iErrId; //
         vector< int > iErrCol; //
         vector< int > iErrEpm; //
         vector< int > iErrNan; //
         vector< int > iErrNanVtx; //
         ::Pythia8::PDF* pdfAPtr; //
         ::Pythia8::PDF* pdfBPtr; //
         ::Pythia8::PDF* pdfHardAPtr; //
         ::Pythia8::PDF* pdfHardBPtr; //
         ::Pythia8::PDF* pdfPomAPtr; //
         ::Pythia8::PDF* pdfPomBPtr; //
         bool useNewPdfA; //
         bool useNewPdfB; //
         bool useNewPdfHard; //
         bool useNewPdfPomA; //
         bool useNewPdfPomB; //
         ::Pythia8::BeamParticle beamA; //
         ::Pythia8::BeamParticle beamB; //
         ::Pythia8::BeamParticle beamPomA; //
         ::Pythia8::BeamParticle beamPomB; //
         bool doLHA; //
         bool useNewLHA; //
         ::Pythia8::LHAup* lhaUpPtr; //
         ::Pythia8::DecayHandler* decayHandlePtr; //
         vector< int > handledParticles; //
         ::Pythia8::UserHooks* userHooksPtr; //
         bool hasUserHooks; //
         bool doVetoProcess; //
         bool doVetoPartons; //
         bool retryPartonLevel; //
         ::Pythia8::BeamShape* beamShapePtr; //
         bool useNewBeamShape; //
         bool doMomentumSpread; //
         bool doVertexSpread; //
         vector< ::Pythia8::SigmaProcess* > sigmaPtrs; //
         vector< ::Pythia8::ResonanceWidths* > resonancePtrs; //
         ::Pythia8::TimeShower* timesDecPtr; //
         ::Pythia8::TimeShower* timesPtr; //
         ::Pythia8::SpaceShower* spacePtr; //
         bool useNewTimes; //
         bool useNewSpace; //
         ::Pythia8::ProcessLevel processLevel; //
         ::Pythia8::PartonLevel partonLevel; //
         ::Pythia8::PartonLevel trialPartonLevel; //
         bool hasMergingHooks; //
         bool hasOwnMergingHooks; //
         bool doMerging; //
         ::Pythia8::HadronLevel hadronLevel; //
         ::Pythia8::SigmaTotal sigmaTot; //
         ::Pythia8::RHadrons rHadrons; //
      };
      #endif
      } 
   } // of namespace Shadow
} // of namespace ROOTShadow
// END OF SHADOWS

namespace Pythia8 {
   namespace ROOTDict {
      inline ::ROOT::TGenericClassInfo *GenerateInitInstance();
      static void Pythia8_Dictionary();

      // Function generating the singleton type initializer
      inline ::ROOT::TGenericClassInfo *GenerateInitInstance()
      {
         static ::ROOT::TGenericClassInfo 
            instance("Pythia8", 0 /*version*/, "/usr/local/include/Pythia8/Pythia.h", 40,
                     ::ROOT::DefineBehavior((void*)0,(void*)0),
                     &Pythia8_Dictionary, 0);
         return &instance;
      }
      // Insure that the inline function is _not_ optimized away by the compiler
      ::ROOT::TGenericClassInfo *(*_R__UNIQUE_(InitFunctionKeeper))() = &GenerateInitInstance;  
      // Static variable to force the class initialization
      static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstance(); R__UseDummy(_R__UNIQUE_(Init));

      // Dictionary for non-ClassDef classes
      static void Pythia8_Dictionary() {
         GenerateInitInstance()->GetClass();
      }

   }
}

namespace ROOTDict {
   void Pythia8cLcLRndmEngine_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void Pythia8cLcLRndmEngine_Dictionary();
   static void delete_Pythia8cLcLRndmEngine(void *p);
   static void deleteArray_Pythia8cLcLRndmEngine(void *p);
   static void destruct_Pythia8cLcLRndmEngine(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::Pythia8::RndmEngine*)
   {
      // Make sure the shadow class has the right sizeof
      R__ASSERT(sizeof(::Pythia8::RndmEngine) == sizeof( ::ROOTShadow::Shadow::Pythia8::RndmEngine));
      ::Pythia8::RndmEngine *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(::Pythia8::RndmEngine),0);
      static ::ROOT::TGenericClassInfo 
         instance("Pythia8::RndmEngine", "/usr/local/include/Pythia8/Basics.h", 25,
                  typeid(::Pythia8::RndmEngine), ::ROOT::DefineBehavior(ptr, ptr),
                  &Pythia8cLcLRndmEngine_ShowMembers, &Pythia8cLcLRndmEngine_Dictionary, isa_proxy, 4,
                  sizeof(::Pythia8::RndmEngine) );
      instance.SetDelete(&delete_Pythia8cLcLRndmEngine);
      instance.SetDeleteArray(&deleteArray_Pythia8cLcLRndmEngine);
      instance.SetDestructor(&destruct_Pythia8cLcLRndmEngine);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::Pythia8::RndmEngine*)
   {
      return GenerateInitInstanceLocal((::Pythia8::RndmEngine*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::Pythia8::RndmEngine*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void Pythia8cLcLRndmEngine_Dictionary() {
      ::ROOTDict::GenerateInitInstanceLocal((const ::Pythia8::RndmEngine*)0x0)->GetClass();
   }

} // end of namespace ROOTDict

namespace ROOTDict {
   void Pythia8cLcLRndm_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void Pythia8cLcLRndm_Dictionary();
   static void *new_Pythia8cLcLRndm(void *p = 0);
   static void *newArray_Pythia8cLcLRndm(Long_t size, void *p);
   static void delete_Pythia8cLcLRndm(void *p);
   static void deleteArray_Pythia8cLcLRndm(void *p);
   static void destruct_Pythia8cLcLRndm(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::Pythia8::Rndm*)
   {
      // Make sure the shadow class has the right sizeof
      R__ASSERT(sizeof(::Pythia8::Rndm) == sizeof( ::ROOTShadow::Shadow::Pythia8::Rndm));
      ::Pythia8::Rndm *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(::Pythia8::Rndm),0);
      static ::ROOT::TGenericClassInfo 
         instance("Pythia8::Rndm", "/usr/local/include/Pythia8/Basics.h", 44,
                  typeid(::Pythia8::Rndm), ::ROOT::DefineBehavior(ptr, ptr),
                  &Pythia8cLcLRndm_ShowMembers, &Pythia8cLcLRndm_Dictionary, isa_proxy, 4,
                  sizeof(::Pythia8::Rndm) );
      instance.SetNew(&new_Pythia8cLcLRndm);
      instance.SetNewArray(&newArray_Pythia8cLcLRndm);
      instance.SetDelete(&delete_Pythia8cLcLRndm);
      instance.SetDeleteArray(&deleteArray_Pythia8cLcLRndm);
      instance.SetDestructor(&destruct_Pythia8cLcLRndm);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::Pythia8::Rndm*)
   {
      return GenerateInitInstanceLocal((::Pythia8::Rndm*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::Pythia8::Rndm*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void Pythia8cLcLRndm_Dictionary() {
      ::ROOTDict::GenerateInitInstanceLocal((const ::Pythia8::Rndm*)0x0)->GetClass();
   }

} // end of namespace ROOTDict

namespace ROOTDict {
   void Pythia8cLcLVec4_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void Pythia8cLcLVec4_Dictionary();
   static void *new_Pythia8cLcLVec4(void *p = 0);
   static void *newArray_Pythia8cLcLVec4(Long_t size, void *p);
   static void delete_Pythia8cLcLVec4(void *p);
   static void deleteArray_Pythia8cLcLVec4(void *p);
   static void destruct_Pythia8cLcLVec4(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::Pythia8::Vec4*)
   {
      // Make sure the shadow class has the right sizeof
      R__ASSERT(sizeof(::Pythia8::Vec4) == sizeof( ::ROOTShadow::Shadow::Pythia8::Vec4));
      ::Pythia8::Vec4 *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(::Pythia8::Vec4),0);
      static ::ROOT::TGenericClassInfo 
         instance("Pythia8::Vec4", "/usr/local/include/Pythia8/Basics.h", 112,
                  typeid(::Pythia8::Vec4), ::ROOT::DefineBehavior(ptr, ptr),
                  &Pythia8cLcLVec4_ShowMembers, &Pythia8cLcLVec4_Dictionary, isa_proxy, 4,
                  sizeof(::Pythia8::Vec4) );
      instance.SetNew(&new_Pythia8cLcLVec4);
      instance.SetNewArray(&newArray_Pythia8cLcLVec4);
      instance.SetDelete(&delete_Pythia8cLcLVec4);
      instance.SetDeleteArray(&deleteArray_Pythia8cLcLVec4);
      instance.SetDestructor(&destruct_Pythia8cLcLVec4);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::Pythia8::Vec4*)
   {
      return GenerateInitInstanceLocal((::Pythia8::Vec4*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::Pythia8::Vec4*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void Pythia8cLcLVec4_Dictionary() {
      ::ROOTDict::GenerateInitInstanceLocal((const ::Pythia8::Vec4*)0x0)->GetClass();
   }

} // end of namespace ROOTDict

namespace ROOTDict {
   void Pythia8cLcLInfo_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void Pythia8cLcLInfo_Dictionary();
   static void *new_Pythia8cLcLInfo(void *p = 0);
   static void *newArray_Pythia8cLcLInfo(Long_t size, void *p);
   static void delete_Pythia8cLcLInfo(void *p);
   static void deleteArray_Pythia8cLcLInfo(void *p);
   static void destruct_Pythia8cLcLInfo(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::Pythia8::Info*)
   {
      // Make sure the shadow class has the right sizeof
      R__ASSERT(sizeof(::Pythia8::Info) == sizeof( ::ROOTShadow::Shadow::Pythia8::Info));
      ::Pythia8::Info *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(::Pythia8::Info),0);
      static ::ROOT::TGenericClassInfo 
         instance("Pythia8::Info", "/usr/local/include/Pythia8/Info.h", 26,
                  typeid(::Pythia8::Info), ::ROOT::DefineBehavior(ptr, ptr),
                  &Pythia8cLcLInfo_ShowMembers, &Pythia8cLcLInfo_Dictionary, isa_proxy, 4,
                  sizeof(::Pythia8::Info) );
      instance.SetNew(&new_Pythia8cLcLInfo);
      instance.SetNewArray(&newArray_Pythia8cLcLInfo);
      instance.SetDelete(&delete_Pythia8cLcLInfo);
      instance.SetDeleteArray(&deleteArray_Pythia8cLcLInfo);
      instance.SetDestructor(&destruct_Pythia8cLcLInfo);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::Pythia8::Info*)
   {
      return GenerateInitInstanceLocal((::Pythia8::Info*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::Pythia8::Info*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void Pythia8cLcLInfo_Dictionary() {
      ::ROOTDict::GenerateInitInstanceLocal((const ::Pythia8::Info*)0x0)->GetClass();
   }

} // end of namespace ROOTDict

namespace ROOTDict {
   void Pythia8cLcLSettings_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void Pythia8cLcLSettings_Dictionary();
   static void *new_Pythia8cLcLSettings(void *p = 0);
   static void *newArray_Pythia8cLcLSettings(Long_t size, void *p);
   static void delete_Pythia8cLcLSettings(void *p);
   static void deleteArray_Pythia8cLcLSettings(void *p);
   static void destruct_Pythia8cLcLSettings(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::Pythia8::Settings*)
   {
      // Make sure the shadow class has the right sizeof
      R__ASSERT(sizeof(::Pythia8::Settings) == sizeof( ::ROOTShadow::Shadow::Pythia8::Settings));
      ::Pythia8::Settings *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(::Pythia8::Settings),0);
      static ::ROOT::TGenericClassInfo 
         instance("Pythia8::Settings", "/usr/local/include/Pythia8/Settings.h", 173,
                  typeid(::Pythia8::Settings), ::ROOT::DefineBehavior(ptr, ptr),
                  &Pythia8cLcLSettings_ShowMembers, &Pythia8cLcLSettings_Dictionary, isa_proxy, 4,
                  sizeof(::Pythia8::Settings) );
      instance.SetNew(&new_Pythia8cLcLSettings);
      instance.SetNewArray(&newArray_Pythia8cLcLSettings);
      instance.SetDelete(&delete_Pythia8cLcLSettings);
      instance.SetDeleteArray(&deleteArray_Pythia8cLcLSettings);
      instance.SetDestructor(&destruct_Pythia8cLcLSettings);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::Pythia8::Settings*)
   {
      return GenerateInitInstanceLocal((::Pythia8::Settings*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::Pythia8::Settings*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void Pythia8cLcLSettings_Dictionary() {
      ::ROOTDict::GenerateInitInstanceLocal((const ::Pythia8::Settings*)0x0)->GetClass();
   }

} // end of namespace ROOTDict

namespace ROOTDict {
   void Pythia8cLcLAlphaStrong_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void Pythia8cLcLAlphaStrong_Dictionary();
   static void *new_Pythia8cLcLAlphaStrong(void *p = 0);
   static void *newArray_Pythia8cLcLAlphaStrong(Long_t size, void *p);
   static void delete_Pythia8cLcLAlphaStrong(void *p);
   static void deleteArray_Pythia8cLcLAlphaStrong(void *p);
   static void destruct_Pythia8cLcLAlphaStrong(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::Pythia8::AlphaStrong*)
   {
      // Make sure the shadow class has the right sizeof
      R__ASSERT(sizeof(::Pythia8::AlphaStrong) == sizeof( ::ROOTShadow::Shadow::Pythia8::AlphaStrong));
      ::Pythia8::AlphaStrong *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(::Pythia8::AlphaStrong),0);
      static ::ROOT::TGenericClassInfo 
         instance("Pythia8::AlphaStrong", "/usr/local/include/Pythia8/StandardModel.h", 23,
                  typeid(::Pythia8::AlphaStrong), ::ROOT::DefineBehavior(ptr, ptr),
                  &Pythia8cLcLAlphaStrong_ShowMembers, &Pythia8cLcLAlphaStrong_Dictionary, isa_proxy, 4,
                  sizeof(::Pythia8::AlphaStrong) );
      instance.SetNew(&new_Pythia8cLcLAlphaStrong);
      instance.SetNewArray(&newArray_Pythia8cLcLAlphaStrong);
      instance.SetDelete(&delete_Pythia8cLcLAlphaStrong);
      instance.SetDeleteArray(&deleteArray_Pythia8cLcLAlphaStrong);
      instance.SetDestructor(&destruct_Pythia8cLcLAlphaStrong);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::Pythia8::AlphaStrong*)
   {
      return GenerateInitInstanceLocal((::Pythia8::AlphaStrong*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::Pythia8::AlphaStrong*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void Pythia8cLcLAlphaStrong_Dictionary() {
      ::ROOTDict::GenerateInitInstanceLocal((const ::Pythia8::AlphaStrong*)0x0)->GetClass();
   }

} // end of namespace ROOTDict

namespace ROOTDict {
   void Pythia8cLcLAlphaEM_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void Pythia8cLcLAlphaEM_Dictionary();
   static void *new_Pythia8cLcLAlphaEM(void *p = 0);
   static void *newArray_Pythia8cLcLAlphaEM(Long_t size, void *p);
   static void delete_Pythia8cLcLAlphaEM(void *p);
   static void deleteArray_Pythia8cLcLAlphaEM(void *p);
   static void destruct_Pythia8cLcLAlphaEM(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::Pythia8::AlphaEM*)
   {
      // Make sure the shadow class has the right sizeof
      R__ASSERT(sizeof(::Pythia8::AlphaEM) == sizeof( ::ROOTShadow::Shadow::Pythia8::AlphaEM));
      ::Pythia8::AlphaEM *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(::Pythia8::AlphaEM),0);
      static ::ROOT::TGenericClassInfo 
         instance("Pythia8::AlphaEM", "/usr/local/include/Pythia8/StandardModel.h", 103,
                  typeid(::Pythia8::AlphaEM), ::ROOT::DefineBehavior(ptr, ptr),
                  &Pythia8cLcLAlphaEM_ShowMembers, &Pythia8cLcLAlphaEM_Dictionary, isa_proxy, 4,
                  sizeof(::Pythia8::AlphaEM) );
      instance.SetNew(&new_Pythia8cLcLAlphaEM);
      instance.SetNewArray(&newArray_Pythia8cLcLAlphaEM);
      instance.SetDelete(&delete_Pythia8cLcLAlphaEM);
      instance.SetDeleteArray(&deleteArray_Pythia8cLcLAlphaEM);
      instance.SetDestructor(&destruct_Pythia8cLcLAlphaEM);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::Pythia8::AlphaEM*)
   {
      return GenerateInitInstanceLocal((::Pythia8::AlphaEM*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::Pythia8::AlphaEM*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void Pythia8cLcLAlphaEM_Dictionary() {
      ::ROOTDict::GenerateInitInstanceLocal((const ::Pythia8::AlphaEM*)0x0)->GetClass();
   }

} // end of namespace ROOTDict

namespace ROOTDict {
   void Pythia8cLcLCoupSM_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void Pythia8cLcLCoupSM_Dictionary();
   static void *new_Pythia8cLcLCoupSM(void *p = 0);
   static void *newArray_Pythia8cLcLCoupSM(Long_t size, void *p);
   static void delete_Pythia8cLcLCoupSM(void *p);
   static void deleteArray_Pythia8cLcLCoupSM(void *p);
   static void destruct_Pythia8cLcLCoupSM(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::Pythia8::CoupSM*)
   {
      // Make sure the shadow class has the right sizeof
      R__ASSERT(sizeof(::Pythia8::CoupSM) == sizeof( ::ROOTShadow::Shadow::Pythia8::CoupSM));
      ::Pythia8::CoupSM *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(::Pythia8::CoupSM),0);
      static ::ROOT::TGenericClassInfo 
         instance("Pythia8::CoupSM", "/usr/local/include/Pythia8/StandardModel.h", 132,
                  typeid(::Pythia8::CoupSM), ::ROOT::DefineBehavior(ptr, ptr),
                  &Pythia8cLcLCoupSM_ShowMembers, &Pythia8cLcLCoupSM_Dictionary, isa_proxy, 4,
                  sizeof(::Pythia8::CoupSM) );
      instance.SetNew(&new_Pythia8cLcLCoupSM);
      instance.SetNewArray(&newArray_Pythia8cLcLCoupSM);
      instance.SetDelete(&delete_Pythia8cLcLCoupSM);
      instance.SetDeleteArray(&deleteArray_Pythia8cLcLCoupSM);
      instance.SetDestructor(&destruct_Pythia8cLcLCoupSM);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::Pythia8::CoupSM*)
   {
      return GenerateInitInstanceLocal((::Pythia8::CoupSM*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::Pythia8::CoupSM*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void Pythia8cLcLCoupSM_Dictionary() {
      ::ROOTDict::GenerateInitInstanceLocal((const ::Pythia8::CoupSM*)0x0)->GetClass();
   }

} // end of namespace ROOTDict

namespace ROOTDict {
   void Pythia8cLcLCouplings_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void Pythia8cLcLCouplings_Dictionary();
   static void *new_Pythia8cLcLCouplings(void *p = 0);
   static void *newArray_Pythia8cLcLCouplings(Long_t size, void *p);
   static void delete_Pythia8cLcLCouplings(void *p);
   static void deleteArray_Pythia8cLcLCouplings(void *p);
   static void destruct_Pythia8cLcLCouplings(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::Pythia8::Couplings*)
   {
      // Make sure the shadow class has the right sizeof
      R__ASSERT(sizeof(::Pythia8::Couplings) == sizeof( ::ROOTShadow::Shadow::Pythia8::Couplings));
      ::Pythia8::Couplings *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(::Pythia8::Couplings),0);
      static ::ROOT::TGenericClassInfo 
         instance("Pythia8::Couplings", "/usr/local/include/Pythia8/StandardModel.h", 213,
                  typeid(::Pythia8::Couplings), ::ROOT::DefineBehavior(ptr, ptr),
                  &Pythia8cLcLCouplings_ShowMembers, &Pythia8cLcLCouplings_Dictionary, isa_proxy, 4,
                  sizeof(::Pythia8::Couplings) );
      instance.SetNew(&new_Pythia8cLcLCouplings);
      instance.SetNewArray(&newArray_Pythia8cLcLCouplings);
      instance.SetDelete(&delete_Pythia8cLcLCouplings);
      instance.SetDeleteArray(&deleteArray_Pythia8cLcLCouplings);
      instance.SetDestructor(&destruct_Pythia8cLcLCouplings);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::Pythia8::Couplings*)
   {
      return GenerateInitInstanceLocal((::Pythia8::Couplings*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::Pythia8::Couplings*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void Pythia8cLcLCouplings_Dictionary() {
      ::ROOTDict::GenerateInitInstanceLocal((const ::Pythia8::Couplings*)0x0)->GetClass();
   }

} // end of namespace ROOTDict

namespace ROOTDict {
   void Pythia8cLcLParticleData_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void Pythia8cLcLParticleData_Dictionary();
   static void *new_Pythia8cLcLParticleData(void *p = 0);
   static void *newArray_Pythia8cLcLParticleData(Long_t size, void *p);
   static void delete_Pythia8cLcLParticleData(void *p);
   static void deleteArray_Pythia8cLcLParticleData(void *p);
   static void destruct_Pythia8cLcLParticleData(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::Pythia8::ParticleData*)
   {
      // Make sure the shadow class has the right sizeof
      R__ASSERT(sizeof(::Pythia8::ParticleData) == sizeof( ::ROOTShadow::Shadow::Pythia8::ParticleData));
      ::Pythia8::ParticleData *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(::Pythia8::ParticleData),0);
      static ::ROOT::TGenericClassInfo 
         instance("Pythia8::ParticleData", "/usr/local/include/Pythia8/ParticleData.h", 332,
                  typeid(::Pythia8::ParticleData), ::ROOT::DefineBehavior(ptr, ptr),
                  &Pythia8cLcLParticleData_ShowMembers, &Pythia8cLcLParticleData_Dictionary, isa_proxy, 4,
                  sizeof(::Pythia8::ParticleData) );
      instance.SetNew(&new_Pythia8cLcLParticleData);
      instance.SetNewArray(&newArray_Pythia8cLcLParticleData);
      instance.SetDelete(&delete_Pythia8cLcLParticleData);
      instance.SetDeleteArray(&deleteArray_Pythia8cLcLParticleData);
      instance.SetDestructor(&destruct_Pythia8cLcLParticleData);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::Pythia8::ParticleData*)
   {
      return GenerateInitInstanceLocal((::Pythia8::ParticleData*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::Pythia8::ParticleData*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void Pythia8cLcLParticleData_Dictionary() {
      ::ROOTDict::GenerateInitInstanceLocal((const ::Pythia8::ParticleData*)0x0)->GetClass();
   }

} // end of namespace ROOTDict

namespace ROOTDict {
   void Pythia8cLcLResonanceWidths_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void Pythia8cLcLResonanceWidths_Dictionary();
   static void delete_Pythia8cLcLResonanceWidths(void *p);
   static void deleteArray_Pythia8cLcLResonanceWidths(void *p);
   static void destruct_Pythia8cLcLResonanceWidths(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::Pythia8::ResonanceWidths*)
   {
      // Make sure the shadow class has the right sizeof
      R__ASSERT(sizeof(::Pythia8::ResonanceWidths) == sizeof( ::ROOTShadow::Shadow::Pythia8::ResonanceWidths));
      ::Pythia8::ResonanceWidths *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(::Pythia8::ResonanceWidths),0);
      static ::ROOT::TGenericClassInfo 
         instance("Pythia8::ResonanceWidths", "/usr/local/include/Pythia8/ResonanceWidths.h", 33,
                  typeid(::Pythia8::ResonanceWidths), ::ROOT::DefineBehavior(ptr, ptr),
                  &Pythia8cLcLResonanceWidths_ShowMembers, &Pythia8cLcLResonanceWidths_Dictionary, isa_proxy, 4,
                  sizeof(::Pythia8::ResonanceWidths) );
      instance.SetDelete(&delete_Pythia8cLcLResonanceWidths);
      instance.SetDeleteArray(&deleteArray_Pythia8cLcLResonanceWidths);
      instance.SetDestructor(&destruct_Pythia8cLcLResonanceWidths);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::Pythia8::ResonanceWidths*)
   {
      return GenerateInitInstanceLocal((::Pythia8::ResonanceWidths*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::Pythia8::ResonanceWidths*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void Pythia8cLcLResonanceWidths_Dictionary() {
      ::ROOTDict::GenerateInitInstanceLocal((const ::Pythia8::ResonanceWidths*)0x0)->GetClass();
   }

} // end of namespace ROOTDict

namespace ROOTDict {
   void Pythia8cLcLDecayChannel_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void Pythia8cLcLDecayChannel_Dictionary();
   static void *new_Pythia8cLcLDecayChannel(void *p = 0);
   static void *newArray_Pythia8cLcLDecayChannel(Long_t size, void *p);
   static void delete_Pythia8cLcLDecayChannel(void *p);
   static void deleteArray_Pythia8cLcLDecayChannel(void *p);
   static void destruct_Pythia8cLcLDecayChannel(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::Pythia8::DecayChannel*)
   {
      // Make sure the shadow class has the right sizeof
      R__ASSERT(sizeof(::Pythia8::DecayChannel) == sizeof( ::ROOTShadow::Shadow::Pythia8::DecayChannel));
      ::Pythia8::DecayChannel *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(::Pythia8::DecayChannel),0);
      static ::ROOT::TGenericClassInfo 
         instance("Pythia8::DecayChannel", "/usr/local/include/Pythia8/ParticleData.h", 35,
                  typeid(::Pythia8::DecayChannel), ::ROOT::DefineBehavior(ptr, ptr),
                  &Pythia8cLcLDecayChannel_ShowMembers, &Pythia8cLcLDecayChannel_Dictionary, isa_proxy, 4,
                  sizeof(::Pythia8::DecayChannel) );
      instance.SetNew(&new_Pythia8cLcLDecayChannel);
      instance.SetNewArray(&newArray_Pythia8cLcLDecayChannel);
      instance.SetDelete(&delete_Pythia8cLcLDecayChannel);
      instance.SetDeleteArray(&deleteArray_Pythia8cLcLDecayChannel);
      instance.SetDestructor(&destruct_Pythia8cLcLDecayChannel);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::Pythia8::DecayChannel*)
   {
      return GenerateInitInstanceLocal((::Pythia8::DecayChannel*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::Pythia8::DecayChannel*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void Pythia8cLcLDecayChannel_Dictionary() {
      ::ROOTDict::GenerateInitInstanceLocal((const ::Pythia8::DecayChannel*)0x0)->GetClass();
   }

} // end of namespace ROOTDict

namespace ROOTDict {
   void Pythia8cLcLParticleDataEntry_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void Pythia8cLcLParticleDataEntry_Dictionary();
   static void *new_Pythia8cLcLParticleDataEntry(void *p = 0);
   static void *newArray_Pythia8cLcLParticleDataEntry(Long_t size, void *p);
   static void delete_Pythia8cLcLParticleDataEntry(void *p);
   static void deleteArray_Pythia8cLcLParticleDataEntry(void *p);
   static void destruct_Pythia8cLcLParticleDataEntry(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::Pythia8::ParticleDataEntry*)
   {
      // Make sure the shadow class has the right sizeof
      R__ASSERT(sizeof(::Pythia8::ParticleDataEntry) == sizeof( ::ROOTShadow::Shadow::Pythia8::ParticleDataEntry));
      ::Pythia8::ParticleDataEntry *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(::Pythia8::ParticleDataEntry),0);
      static ::ROOT::TGenericClassInfo 
         instance("Pythia8::ParticleDataEntry", "/usr/local/include/Pythia8/ParticleData.h", 106,
                  typeid(::Pythia8::ParticleDataEntry), ::ROOT::DefineBehavior(ptr, ptr),
                  &Pythia8cLcLParticleDataEntry_ShowMembers, &Pythia8cLcLParticleDataEntry_Dictionary, isa_proxy, 4,
                  sizeof(::Pythia8::ParticleDataEntry) );
      instance.SetNew(&new_Pythia8cLcLParticleDataEntry);
      instance.SetNewArray(&newArray_Pythia8cLcLParticleDataEntry);
      instance.SetDelete(&delete_Pythia8cLcLParticleDataEntry);
      instance.SetDeleteArray(&deleteArray_Pythia8cLcLParticleDataEntry);
      instance.SetDestructor(&destruct_Pythia8cLcLParticleDataEntry);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::Pythia8::ParticleDataEntry*)
   {
      return GenerateInitInstanceLocal((::Pythia8::ParticleDataEntry*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::Pythia8::ParticleDataEntry*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void Pythia8cLcLParticleDataEntry_Dictionary() {
      ::ROOTDict::GenerateInitInstanceLocal((const ::Pythia8::ParticleDataEntry*)0x0)->GetClass();
   }

} // end of namespace ROOTDict

namespace ROOTDict {
   void pairlEintcOPythia8cLcLParticleDataEntrygR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void pairlEintcOPythia8cLcLParticleDataEntrygR_Dictionary();
   static void *new_pairlEintcOPythia8cLcLParticleDataEntrygR(void *p = 0);
   static void *newArray_pairlEintcOPythia8cLcLParticleDataEntrygR(Long_t size, void *p);
   static void delete_pairlEintcOPythia8cLcLParticleDataEntrygR(void *p);
   static void deleteArray_pairlEintcOPythia8cLcLParticleDataEntrygR(void *p);
   static void destruct_pairlEintcOPythia8cLcLParticleDataEntrygR(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const pair<int,Pythia8::ParticleDataEntry>*)
   {
      // Make sure the shadow class has the right sizeof
      pair<int,Pythia8::ParticleDataEntry> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(pair<int,Pythia8::ParticleDataEntry>),0);
      static ::ROOT::TGenericClassInfo 
         instance("pair<int,Pythia8::ParticleDataEntry>", "prec_stl/utility", 17,
                  typeid(pair<int,Pythia8::ParticleDataEntry>), ::ROOT::DefineBehavior(ptr, ptr),
                  &pairlEintcOPythia8cLcLParticleDataEntrygR_ShowMembers, &pairlEintcOPythia8cLcLParticleDataEntrygR_Dictionary, isa_proxy, 4,
                  sizeof(pair<int,Pythia8::ParticleDataEntry>) );
      instance.SetNew(&new_pairlEintcOPythia8cLcLParticleDataEntrygR);
      instance.SetNewArray(&newArray_pairlEintcOPythia8cLcLParticleDataEntrygR);
      instance.SetDelete(&delete_pairlEintcOPythia8cLcLParticleDataEntrygR);
      instance.SetDeleteArray(&deleteArray_pairlEintcOPythia8cLcLParticleDataEntrygR);
      instance.SetDestructor(&destruct_pairlEintcOPythia8cLcLParticleDataEntrygR);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const pair<int,Pythia8::ParticleDataEntry>*)
   {
      return GenerateInitInstanceLocal((pair<int,Pythia8::ParticleDataEntry>*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const pair<int,Pythia8::ParticleDataEntry>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void pairlEintcOPythia8cLcLParticleDataEntrygR_Dictionary() {
      ::ROOTDict::GenerateInitInstanceLocal((const pair<int,Pythia8::ParticleDataEntry>*)0x0)->GetClass();
   }

} // end of namespace ROOTDict

namespace ROOTDict {
   void Pythia8cLcLEvent_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void Pythia8cLcLEvent_Dictionary();
   static void *new_Pythia8cLcLEvent(void *p = 0);
   static void *newArray_Pythia8cLcLEvent(Long_t size, void *p);
   static void delete_Pythia8cLcLEvent(void *p);
   static void deleteArray_Pythia8cLcLEvent(void *p);
   static void destruct_Pythia8cLcLEvent(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::Pythia8::Event*)
   {
      // Make sure the shadow class has the right sizeof
      R__ASSERT(sizeof(::Pythia8::Event) == sizeof( ::ROOTShadow::Shadow::Pythia8::Event));
      ::Pythia8::Event *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(::Pythia8::Event),0);
      static ::ROOT::TGenericClassInfo 
         instance("Pythia8::Event", "/usr/local/include/Pythia8/Event.h", 368,
                  typeid(::Pythia8::Event), ::ROOT::DefineBehavior(ptr, ptr),
                  &Pythia8cLcLEvent_ShowMembers, &Pythia8cLcLEvent_Dictionary, isa_proxy, 4,
                  sizeof(::Pythia8::Event) );
      instance.SetNew(&new_Pythia8cLcLEvent);
      instance.SetNewArray(&newArray_Pythia8cLcLEvent);
      instance.SetDelete(&delete_Pythia8cLcLEvent);
      instance.SetDeleteArray(&deleteArray_Pythia8cLcLEvent);
      instance.SetDestructor(&destruct_Pythia8cLcLEvent);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::Pythia8::Event*)
   {
      return GenerateInitInstanceLocal((::Pythia8::Event*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::Pythia8::Event*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void Pythia8cLcLEvent_Dictionary() {
      ::ROOTDict::GenerateInitInstanceLocal((const ::Pythia8::Event*)0x0)->GetClass();
   }

} // end of namespace ROOTDict

namespace ROOTDict {
   void Pythia8cLcLParticle_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void Pythia8cLcLParticle_Dictionary();
   static void *new_Pythia8cLcLParticle(void *p = 0);
   static void *newArray_Pythia8cLcLParticle(Long_t size, void *p);
   static void delete_Pythia8cLcLParticle(void *p);
   static void deleteArray_Pythia8cLcLParticle(void *p);
   static void destruct_Pythia8cLcLParticle(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::Pythia8::Particle*)
   {
      // Make sure the shadow class has the right sizeof
      R__ASSERT(sizeof(::Pythia8::Particle) == sizeof( ::ROOTShadow::Shadow::Pythia8::Particle));
      ::Pythia8::Particle *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(::Pythia8::Particle),0);
      static ::ROOT::TGenericClassInfo 
         instance("Pythia8::Particle", "/usr/local/include/Pythia8/Event.h", 32,
                  typeid(::Pythia8::Particle), ::ROOT::DefineBehavior(ptr, ptr),
                  &Pythia8cLcLParticle_ShowMembers, &Pythia8cLcLParticle_Dictionary, isa_proxy, 4,
                  sizeof(::Pythia8::Particle) );
      instance.SetNew(&new_Pythia8cLcLParticle);
      instance.SetNewArray(&newArray_Pythia8cLcLParticle);
      instance.SetDelete(&delete_Pythia8cLcLParticle);
      instance.SetDeleteArray(&deleteArray_Pythia8cLcLParticle);
      instance.SetDestructor(&destruct_Pythia8cLcLParticle);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::Pythia8::Particle*)
   {
      return GenerateInitInstanceLocal((::Pythia8::Particle*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::Pythia8::Particle*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void Pythia8cLcLParticle_Dictionary() {
      ::ROOTDict::GenerateInitInstanceLocal((const ::Pythia8::Particle*)0x0)->GetClass();
   }

} // end of namespace ROOTDict

namespace ROOTDict {
   void Pythia8cLcLJunction_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void Pythia8cLcLJunction_Dictionary();
   static void *new_Pythia8cLcLJunction(void *p = 0);
   static void *newArray_Pythia8cLcLJunction(Long_t size, void *p);
   static void delete_Pythia8cLcLJunction(void *p);
   static void deleteArray_Pythia8cLcLJunction(void *p);
   static void destruct_Pythia8cLcLJunction(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::Pythia8::Junction*)
   {
      // Make sure the shadow class has the right sizeof
      R__ASSERT(sizeof(::Pythia8::Junction) == sizeof( ::ROOTShadow::Shadow::Pythia8::Junction));
      ::Pythia8::Junction *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(::Pythia8::Junction),0);
      static ::ROOT::TGenericClassInfo 
         instance("Pythia8::Junction", "/usr/local/include/Pythia8/Event.h", 318,
                  typeid(::Pythia8::Junction), ::ROOT::DefineBehavior(ptr, ptr),
                  &Pythia8cLcLJunction_ShowMembers, &Pythia8cLcLJunction_Dictionary, isa_proxy, 4,
                  sizeof(::Pythia8::Junction) );
      instance.SetNew(&new_Pythia8cLcLJunction);
      instance.SetNewArray(&newArray_Pythia8cLcLJunction);
      instance.SetDelete(&delete_Pythia8cLcLJunction);
      instance.SetDeleteArray(&deleteArray_Pythia8cLcLJunction);
      instance.SetDestructor(&destruct_Pythia8cLcLJunction);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::Pythia8::Junction*)
   {
      return GenerateInitInstanceLocal((::Pythia8::Junction*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::Pythia8::Junction*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void Pythia8cLcLJunction_Dictionary() {
      ::ROOTDict::GenerateInitInstanceLocal((const ::Pythia8::Junction*)0x0)->GetClass();
   }

} // end of namespace ROOTDict

namespace ROOTDict {
   void Pythia8cLcLResonanceGeneric_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void Pythia8cLcLResonanceGeneric_Dictionary();
   static void delete_Pythia8cLcLResonanceGeneric(void *p);
   static void deleteArray_Pythia8cLcLResonanceGeneric(void *p);
   static void destruct_Pythia8cLcLResonanceGeneric(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::Pythia8::ResonanceGeneric*)
   {
      // Make sure the shadow class has the right sizeof
      R__ASSERT(sizeof(::Pythia8::ResonanceGeneric) == sizeof( ::ROOTShadow::Shadow::Pythia8::ResonanceGeneric));
      ::Pythia8::ResonanceGeneric *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(::Pythia8::ResonanceGeneric),0);
      static ::ROOT::TGenericClassInfo 
         instance("Pythia8::ResonanceGeneric", "/usr/local/include/Pythia8/ResonanceWidths.h", 141,
                  typeid(::Pythia8::ResonanceGeneric), ::ROOT::DefineBehavior(ptr, ptr),
                  &Pythia8cLcLResonanceGeneric_ShowMembers, &Pythia8cLcLResonanceGeneric_Dictionary, isa_proxy, 4,
                  sizeof(::Pythia8::ResonanceGeneric) );
      instance.SetDelete(&delete_Pythia8cLcLResonanceGeneric);
      instance.SetDeleteArray(&deleteArray_Pythia8cLcLResonanceGeneric);
      instance.SetDestructor(&destruct_Pythia8cLcLResonanceGeneric);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::Pythia8::ResonanceGeneric*)
   {
      return GenerateInitInstanceLocal((::Pythia8::ResonanceGeneric*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::Pythia8::ResonanceGeneric*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void Pythia8cLcLResonanceGeneric_Dictionary() {
      ::ROOTDict::GenerateInitInstanceLocal((const ::Pythia8::ResonanceGeneric*)0x0)->GetClass();
   }

} // end of namespace ROOTDict

namespace ROOTDict {
   void Pythia8cLcLResonanceGmZ_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void Pythia8cLcLResonanceGmZ_Dictionary();
   static void delete_Pythia8cLcLResonanceGmZ(void *p);
   static void deleteArray_Pythia8cLcLResonanceGmZ(void *p);
   static void destruct_Pythia8cLcLResonanceGmZ(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::Pythia8::ResonanceGmZ*)
   {
      // Make sure the shadow class has the right sizeof
      R__ASSERT(sizeof(::Pythia8::ResonanceGmZ) == sizeof( ::ROOTShadow::Shadow::Pythia8::ResonanceGmZ));
      ::Pythia8::ResonanceGmZ *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(::Pythia8::ResonanceGmZ),0);
      static ::ROOT::TGenericClassInfo 
         instance("Pythia8::ResonanceGmZ", "/usr/local/include/Pythia8/ResonanceWidths.h", 157,
                  typeid(::Pythia8::ResonanceGmZ), ::ROOT::DefineBehavior(ptr, ptr),
                  &Pythia8cLcLResonanceGmZ_ShowMembers, &Pythia8cLcLResonanceGmZ_Dictionary, isa_proxy, 4,
                  sizeof(::Pythia8::ResonanceGmZ) );
      instance.SetDelete(&delete_Pythia8cLcLResonanceGmZ);
      instance.SetDeleteArray(&deleteArray_Pythia8cLcLResonanceGmZ);
      instance.SetDestructor(&destruct_Pythia8cLcLResonanceGmZ);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::Pythia8::ResonanceGmZ*)
   {
      return GenerateInitInstanceLocal((::Pythia8::ResonanceGmZ*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::Pythia8::ResonanceGmZ*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void Pythia8cLcLResonanceGmZ_Dictionary() {
      ::ROOTDict::GenerateInitInstanceLocal((const ::Pythia8::ResonanceGmZ*)0x0)->GetClass();
   }

} // end of namespace ROOTDict

namespace ROOTDict {
   void Pythia8cLcLResonanceW_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void Pythia8cLcLResonanceW_Dictionary();
   static void delete_Pythia8cLcLResonanceW(void *p);
   static void deleteArray_Pythia8cLcLResonanceW(void *p);
   static void destruct_Pythia8cLcLResonanceW(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::Pythia8::ResonanceW*)
   {
      // Make sure the shadow class has the right sizeof
      R__ASSERT(sizeof(::Pythia8::ResonanceW) == sizeof( ::ROOTShadow::Shadow::Pythia8::ResonanceW));
      ::Pythia8::ResonanceW *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(::Pythia8::ResonanceW),0);
      static ::ROOT::TGenericClassInfo 
         instance("Pythia8::ResonanceW", "/usr/local/include/Pythia8/ResonanceWidths.h", 185,
                  typeid(::Pythia8::ResonanceW), ::ROOT::DefineBehavior(ptr, ptr),
                  &Pythia8cLcLResonanceW_ShowMembers, &Pythia8cLcLResonanceW_Dictionary, isa_proxy, 4,
                  sizeof(::Pythia8::ResonanceW) );
      instance.SetDelete(&delete_Pythia8cLcLResonanceW);
      instance.SetDeleteArray(&deleteArray_Pythia8cLcLResonanceW);
      instance.SetDestructor(&destruct_Pythia8cLcLResonanceW);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::Pythia8::ResonanceW*)
   {
      return GenerateInitInstanceLocal((::Pythia8::ResonanceW*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::Pythia8::ResonanceW*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void Pythia8cLcLResonanceW_Dictionary() {
      ::ROOTDict::GenerateInitInstanceLocal((const ::Pythia8::ResonanceW*)0x0)->GetClass();
   }

} // end of namespace ROOTDict

namespace ROOTDict {
   void Pythia8cLcLResonanceTop_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void Pythia8cLcLResonanceTop_Dictionary();
   static void delete_Pythia8cLcLResonanceTop(void *p);
   static void deleteArray_Pythia8cLcLResonanceTop(void *p);
   static void destruct_Pythia8cLcLResonanceTop(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::Pythia8::ResonanceTop*)
   {
      // Make sure the shadow class has the right sizeof
      R__ASSERT(sizeof(::Pythia8::ResonanceTop) == sizeof( ::ROOTShadow::Shadow::Pythia8::ResonanceTop));
      ::Pythia8::ResonanceTop *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(::Pythia8::ResonanceTop),0);
      static ::ROOT::TGenericClassInfo 
         instance("Pythia8::ResonanceTop", "/usr/local/include/Pythia8/ResonanceWidths.h", 212,
                  typeid(::Pythia8::ResonanceTop), ::ROOT::DefineBehavior(ptr, ptr),
                  &Pythia8cLcLResonanceTop_ShowMembers, &Pythia8cLcLResonanceTop_Dictionary, isa_proxy, 4,
                  sizeof(::Pythia8::ResonanceTop) );
      instance.SetDelete(&delete_Pythia8cLcLResonanceTop);
      instance.SetDeleteArray(&deleteArray_Pythia8cLcLResonanceTop);
      instance.SetDestructor(&destruct_Pythia8cLcLResonanceTop);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::Pythia8::ResonanceTop*)
   {
      return GenerateInitInstanceLocal((::Pythia8::ResonanceTop*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::Pythia8::ResonanceTop*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void Pythia8cLcLResonanceTop_Dictionary() {
      ::ROOTDict::GenerateInitInstanceLocal((const ::Pythia8::ResonanceTop*)0x0)->GetClass();
   }

} // end of namespace ROOTDict

namespace ROOTDict {
   void Pythia8cLcLResonanceFour_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void Pythia8cLcLResonanceFour_Dictionary();
   static void delete_Pythia8cLcLResonanceFour(void *p);
   static void deleteArray_Pythia8cLcLResonanceFour(void *p);
   static void destruct_Pythia8cLcLResonanceFour(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::Pythia8::ResonanceFour*)
   {
      // Make sure the shadow class has the right sizeof
      R__ASSERT(sizeof(::Pythia8::ResonanceFour) == sizeof( ::ROOTShadow::Shadow::Pythia8::ResonanceFour));
      ::Pythia8::ResonanceFour *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(::Pythia8::ResonanceFour),0);
      static ::ROOT::TGenericClassInfo 
         instance("Pythia8::ResonanceFour", "/usr/local/include/Pythia8/ResonanceWidths.h", 239,
                  typeid(::Pythia8::ResonanceFour), ::ROOT::DefineBehavior(ptr, ptr),
                  &Pythia8cLcLResonanceFour_ShowMembers, &Pythia8cLcLResonanceFour_Dictionary, isa_proxy, 4,
                  sizeof(::Pythia8::ResonanceFour) );
      instance.SetDelete(&delete_Pythia8cLcLResonanceFour);
      instance.SetDeleteArray(&deleteArray_Pythia8cLcLResonanceFour);
      instance.SetDestructor(&destruct_Pythia8cLcLResonanceFour);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::Pythia8::ResonanceFour*)
   {
      return GenerateInitInstanceLocal((::Pythia8::ResonanceFour*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::Pythia8::ResonanceFour*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void Pythia8cLcLResonanceFour_Dictionary() {
      ::ROOTDict::GenerateInitInstanceLocal((const ::Pythia8::ResonanceFour*)0x0)->GetClass();
   }

} // end of namespace ROOTDict

namespace ROOTDict {
   void Pythia8cLcLResonanceH_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void Pythia8cLcLResonanceH_Dictionary();
   static void delete_Pythia8cLcLResonanceH(void *p);
   static void deleteArray_Pythia8cLcLResonanceH(void *p);
   static void destruct_Pythia8cLcLResonanceH(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::Pythia8::ResonanceH*)
   {
      // Make sure the shadow class has the right sizeof
      R__ASSERT(sizeof(::Pythia8::ResonanceH) == sizeof( ::ROOTShadow::Shadow::Pythia8::ResonanceH));
      ::Pythia8::ResonanceH *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(::Pythia8::ResonanceH),0);
      static ::ROOT::TGenericClassInfo 
         instance("Pythia8::ResonanceH", "/usr/local/include/Pythia8/ResonanceWidths.h", 267,
                  typeid(::Pythia8::ResonanceH), ::ROOT::DefineBehavior(ptr, ptr),
                  &Pythia8cLcLResonanceH_ShowMembers, &Pythia8cLcLResonanceH_Dictionary, isa_proxy, 4,
                  sizeof(::Pythia8::ResonanceH) );
      instance.SetDelete(&delete_Pythia8cLcLResonanceH);
      instance.SetDeleteArray(&deleteArray_Pythia8cLcLResonanceH);
      instance.SetDestructor(&destruct_Pythia8cLcLResonanceH);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::Pythia8::ResonanceH*)
   {
      return GenerateInitInstanceLocal((::Pythia8::ResonanceH*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::Pythia8::ResonanceH*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void Pythia8cLcLResonanceH_Dictionary() {
      ::ROOTDict::GenerateInitInstanceLocal((const ::Pythia8::ResonanceH*)0x0)->GetClass();
   }

} // end of namespace ROOTDict

namespace ROOTDict {
   void Pythia8cLcLResonanceHchg_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void Pythia8cLcLResonanceHchg_Dictionary();
   static void delete_Pythia8cLcLResonanceHchg(void *p);
   static void deleteArray_Pythia8cLcLResonanceHchg(void *p);
   static void destruct_Pythia8cLcLResonanceHchg(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::Pythia8::ResonanceHchg*)
   {
      // Make sure the shadow class has the right sizeof
      R__ASSERT(sizeof(::Pythia8::ResonanceHchg) == sizeof( ::ROOTShadow::Shadow::Pythia8::ResonanceHchg));
      ::Pythia8::ResonanceHchg *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(::Pythia8::ResonanceHchg),0);
      static ::ROOT::TGenericClassInfo 
         instance("Pythia8::ResonanceHchg", "/usr/local/include/Pythia8/ResonanceWidths.h", 315,
                  typeid(::Pythia8::ResonanceHchg), ::ROOT::DefineBehavior(ptr, ptr),
                  &Pythia8cLcLResonanceHchg_ShowMembers, &Pythia8cLcLResonanceHchg_Dictionary, isa_proxy, 4,
                  sizeof(::Pythia8::ResonanceHchg) );
      instance.SetDelete(&delete_Pythia8cLcLResonanceHchg);
      instance.SetDeleteArray(&deleteArray_Pythia8cLcLResonanceHchg);
      instance.SetDestructor(&destruct_Pythia8cLcLResonanceHchg);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::Pythia8::ResonanceHchg*)
   {
      return GenerateInitInstanceLocal((::Pythia8::ResonanceHchg*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::Pythia8::ResonanceHchg*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void Pythia8cLcLResonanceHchg_Dictionary() {
      ::ROOTDict::GenerateInitInstanceLocal((const ::Pythia8::ResonanceHchg*)0x0)->GetClass();
   }

} // end of namespace ROOTDict

namespace ROOTDict {
   void Pythia8cLcLResonanceZprime_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void Pythia8cLcLResonanceZprime_Dictionary();
   static void delete_Pythia8cLcLResonanceZprime(void *p);
   static void deleteArray_Pythia8cLcLResonanceZprime(void *p);
   static void destruct_Pythia8cLcLResonanceZprime(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::Pythia8::ResonanceZprime*)
   {
      // Make sure the shadow class has the right sizeof
      R__ASSERT(sizeof(::Pythia8::ResonanceZprime) == sizeof( ::ROOTShadow::Shadow::Pythia8::ResonanceZprime));
      ::Pythia8::ResonanceZprime *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(::Pythia8::ResonanceZprime),0);
      static ::ROOT::TGenericClassInfo 
         instance("Pythia8::ResonanceZprime", "/usr/local/include/Pythia8/ResonanceWidths.h", 343,
                  typeid(::Pythia8::ResonanceZprime), ::ROOT::DefineBehavior(ptr, ptr),
                  &Pythia8cLcLResonanceZprime_ShowMembers, &Pythia8cLcLResonanceZprime_Dictionary, isa_proxy, 4,
                  sizeof(::Pythia8::ResonanceZprime) );
      instance.SetDelete(&delete_Pythia8cLcLResonanceZprime);
      instance.SetDeleteArray(&deleteArray_Pythia8cLcLResonanceZprime);
      instance.SetDestructor(&destruct_Pythia8cLcLResonanceZprime);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::Pythia8::ResonanceZprime*)
   {
      return GenerateInitInstanceLocal((::Pythia8::ResonanceZprime*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::Pythia8::ResonanceZprime*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void Pythia8cLcLResonanceZprime_Dictionary() {
      ::ROOTDict::GenerateInitInstanceLocal((const ::Pythia8::ResonanceZprime*)0x0)->GetClass();
   }

} // end of namespace ROOTDict

namespace ROOTDict {
   void Pythia8cLcLResonanceWprime_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void Pythia8cLcLResonanceWprime_Dictionary();
   static void delete_Pythia8cLcLResonanceWprime(void *p);
   static void deleteArray_Pythia8cLcLResonanceWprime(void *p);
   static void destruct_Pythia8cLcLResonanceWprime(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::Pythia8::ResonanceWprime*)
   {
      // Make sure the shadow class has the right sizeof
      R__ASSERT(sizeof(::Pythia8::ResonanceWprime) == sizeof( ::ROOTShadow::Shadow::Pythia8::ResonanceWprime));
      ::Pythia8::ResonanceWprime *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(::Pythia8::ResonanceWprime),0);
      static ::ROOT::TGenericClassInfo 
         instance("Pythia8::ResonanceWprime", "/usr/local/include/Pythia8/ResonanceWidths.h", 373,
                  typeid(::Pythia8::ResonanceWprime), ::ROOT::DefineBehavior(ptr, ptr),
                  &Pythia8cLcLResonanceWprime_ShowMembers, &Pythia8cLcLResonanceWprime_Dictionary, isa_proxy, 4,
                  sizeof(::Pythia8::ResonanceWprime) );
      instance.SetDelete(&delete_Pythia8cLcLResonanceWprime);
      instance.SetDeleteArray(&deleteArray_Pythia8cLcLResonanceWprime);
      instance.SetDestructor(&destruct_Pythia8cLcLResonanceWprime);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::Pythia8::ResonanceWprime*)
   {
      return GenerateInitInstanceLocal((::Pythia8::ResonanceWprime*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::Pythia8::ResonanceWprime*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void Pythia8cLcLResonanceWprime_Dictionary() {
      ::ROOTDict::GenerateInitInstanceLocal((const ::Pythia8::ResonanceWprime*)0x0)->GetClass();
   }

} // end of namespace ROOTDict

namespace ROOTDict {
   void Pythia8cLcLResonanceRhorizontal_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void Pythia8cLcLResonanceRhorizontal_Dictionary();
   static void delete_Pythia8cLcLResonanceRhorizontal(void *p);
   static void deleteArray_Pythia8cLcLResonanceRhorizontal(void *p);
   static void destruct_Pythia8cLcLResonanceRhorizontal(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::Pythia8::ResonanceRhorizontal*)
   {
      // Make sure the shadow class has the right sizeof
      R__ASSERT(sizeof(::Pythia8::ResonanceRhorizontal) == sizeof( ::ROOTShadow::Shadow::Pythia8::ResonanceRhorizontal));
      ::Pythia8::ResonanceRhorizontal *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(::Pythia8::ResonanceRhorizontal),0);
      static ::ROOT::TGenericClassInfo 
         instance("Pythia8::ResonanceRhorizontal", "/usr/local/include/Pythia8/ResonanceWidths.h", 400,
                  typeid(::Pythia8::ResonanceRhorizontal), ::ROOT::DefineBehavior(ptr, ptr),
                  &Pythia8cLcLResonanceRhorizontal_ShowMembers, &Pythia8cLcLResonanceRhorizontal_Dictionary, isa_proxy, 4,
                  sizeof(::Pythia8::ResonanceRhorizontal) );
      instance.SetDelete(&delete_Pythia8cLcLResonanceRhorizontal);
      instance.SetDeleteArray(&deleteArray_Pythia8cLcLResonanceRhorizontal);
      instance.SetDestructor(&destruct_Pythia8cLcLResonanceRhorizontal);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::Pythia8::ResonanceRhorizontal*)
   {
      return GenerateInitInstanceLocal((::Pythia8::ResonanceRhorizontal*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::Pythia8::ResonanceRhorizontal*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void Pythia8cLcLResonanceRhorizontal_Dictionary() {
      ::ROOTDict::GenerateInitInstanceLocal((const ::Pythia8::ResonanceRhorizontal*)0x0)->GetClass();
   }

} // end of namespace ROOTDict

namespace ROOTDict {
   void Pythia8cLcLResonanceExcited_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void Pythia8cLcLResonanceExcited_Dictionary();
   static void delete_Pythia8cLcLResonanceExcited(void *p);
   static void deleteArray_Pythia8cLcLResonanceExcited(void *p);
   static void destruct_Pythia8cLcLResonanceExcited(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::Pythia8::ResonanceExcited*)
   {
      // Make sure the shadow class has the right sizeof
      R__ASSERT(sizeof(::Pythia8::ResonanceExcited) == sizeof( ::ROOTShadow::Shadow::Pythia8::ResonanceExcited));
      ::Pythia8::ResonanceExcited *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(::Pythia8::ResonanceExcited),0);
      static ::ROOT::TGenericClassInfo 
         instance("Pythia8::ResonanceExcited", "/usr/local/include/Pythia8/ResonanceWidths.h", 427,
                  typeid(::Pythia8::ResonanceExcited), ::ROOT::DefineBehavior(ptr, ptr),
                  &Pythia8cLcLResonanceExcited_ShowMembers, &Pythia8cLcLResonanceExcited_Dictionary, isa_proxy, 4,
                  sizeof(::Pythia8::ResonanceExcited) );
      instance.SetDelete(&delete_Pythia8cLcLResonanceExcited);
      instance.SetDeleteArray(&deleteArray_Pythia8cLcLResonanceExcited);
      instance.SetDestructor(&destruct_Pythia8cLcLResonanceExcited);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::Pythia8::ResonanceExcited*)
   {
      return GenerateInitInstanceLocal((::Pythia8::ResonanceExcited*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::Pythia8::ResonanceExcited*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void Pythia8cLcLResonanceExcited_Dictionary() {
      ::ROOTDict::GenerateInitInstanceLocal((const ::Pythia8::ResonanceExcited*)0x0)->GetClass();
   }

} // end of namespace ROOTDict

namespace ROOTDict {
   void Pythia8cLcLResonanceGraviton_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void Pythia8cLcLResonanceGraviton_Dictionary();
   static void delete_Pythia8cLcLResonanceGraviton(void *p);
   static void deleteArray_Pythia8cLcLResonanceGraviton(void *p);
   static void destruct_Pythia8cLcLResonanceGraviton(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::Pythia8::ResonanceGraviton*)
   {
      // Make sure the shadow class has the right sizeof
      R__ASSERT(sizeof(::Pythia8::ResonanceGraviton) == sizeof( ::ROOTShadow::Shadow::Pythia8::ResonanceGraviton));
      ::Pythia8::ResonanceGraviton *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(::Pythia8::ResonanceGraviton),0);
      static ::ROOT::TGenericClassInfo 
         instance("Pythia8::ResonanceGraviton", "/usr/local/include/Pythia8/ResonanceWidths.h", 454,
                  typeid(::Pythia8::ResonanceGraviton), ::ROOT::DefineBehavior(ptr, ptr),
                  &Pythia8cLcLResonanceGraviton_ShowMembers, &Pythia8cLcLResonanceGraviton_Dictionary, isa_proxy, 4,
                  sizeof(::Pythia8::ResonanceGraviton) );
      instance.SetDelete(&delete_Pythia8cLcLResonanceGraviton);
      instance.SetDeleteArray(&deleteArray_Pythia8cLcLResonanceGraviton);
      instance.SetDestructor(&destruct_Pythia8cLcLResonanceGraviton);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::Pythia8::ResonanceGraviton*)
   {
      return GenerateInitInstanceLocal((::Pythia8::ResonanceGraviton*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::Pythia8::ResonanceGraviton*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void Pythia8cLcLResonanceGraviton_Dictionary() {
      ::ROOTDict::GenerateInitInstanceLocal((const ::Pythia8::ResonanceGraviton*)0x0)->GetClass();
   }

} // end of namespace ROOTDict

namespace ROOTDict {
   void Pythia8cLcLResonanceLeptoquark_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void Pythia8cLcLResonanceLeptoquark_Dictionary();
   static void delete_Pythia8cLcLResonanceLeptoquark(void *p);
   static void deleteArray_Pythia8cLcLResonanceLeptoquark(void *p);
   static void destruct_Pythia8cLcLResonanceLeptoquark(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::Pythia8::ResonanceLeptoquark*)
   {
      // Make sure the shadow class has the right sizeof
      R__ASSERT(sizeof(::Pythia8::ResonanceLeptoquark) == sizeof( ::ROOTShadow::Shadow::Pythia8::ResonanceLeptoquark));
      ::Pythia8::ResonanceLeptoquark *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(::Pythia8::ResonanceLeptoquark),0);
      static ::ROOT::TGenericClassInfo 
         instance("Pythia8::ResonanceLeptoquark", "/usr/local/include/Pythia8/ResonanceWidths.h", 520,
                  typeid(::Pythia8::ResonanceLeptoquark), ::ROOT::DefineBehavior(ptr, ptr),
                  &Pythia8cLcLResonanceLeptoquark_ShowMembers, &Pythia8cLcLResonanceLeptoquark_Dictionary, isa_proxy, 4,
                  sizeof(::Pythia8::ResonanceLeptoquark) );
      instance.SetDelete(&delete_Pythia8cLcLResonanceLeptoquark);
      instance.SetDeleteArray(&deleteArray_Pythia8cLcLResonanceLeptoquark);
      instance.SetDestructor(&destruct_Pythia8cLcLResonanceLeptoquark);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::Pythia8::ResonanceLeptoquark*)
   {
      return GenerateInitInstanceLocal((::Pythia8::ResonanceLeptoquark*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::Pythia8::ResonanceLeptoquark*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void Pythia8cLcLResonanceLeptoquark_Dictionary() {
      ::ROOTDict::GenerateInitInstanceLocal((const ::Pythia8::ResonanceLeptoquark*)0x0)->GetClass();
   }

} // end of namespace ROOTDict

namespace ROOTDict {
   void Pythia8cLcLResonanceNuRight_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void Pythia8cLcLResonanceNuRight_Dictionary();
   static void delete_Pythia8cLcLResonanceNuRight(void *p);
   static void deleteArray_Pythia8cLcLResonanceNuRight(void *p);
   static void destruct_Pythia8cLcLResonanceNuRight(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::Pythia8::ResonanceNuRight*)
   {
      // Make sure the shadow class has the right sizeof
      R__ASSERT(sizeof(::Pythia8::ResonanceNuRight) == sizeof( ::ROOTShadow::Shadow::Pythia8::ResonanceNuRight));
      ::Pythia8::ResonanceNuRight *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(::Pythia8::ResonanceNuRight),0);
      static ::ROOT::TGenericClassInfo 
         instance("Pythia8::ResonanceNuRight", "/usr/local/include/Pythia8/ResonanceWidths.h", 547,
                  typeid(::Pythia8::ResonanceNuRight), ::ROOT::DefineBehavior(ptr, ptr),
                  &Pythia8cLcLResonanceNuRight_ShowMembers, &Pythia8cLcLResonanceNuRight_Dictionary, isa_proxy, 4,
                  sizeof(::Pythia8::ResonanceNuRight) );
      instance.SetDelete(&delete_Pythia8cLcLResonanceNuRight);
      instance.SetDeleteArray(&deleteArray_Pythia8cLcLResonanceNuRight);
      instance.SetDestructor(&destruct_Pythia8cLcLResonanceNuRight);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::Pythia8::ResonanceNuRight*)
   {
      return GenerateInitInstanceLocal((::Pythia8::ResonanceNuRight*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::Pythia8::ResonanceNuRight*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void Pythia8cLcLResonanceNuRight_Dictionary() {
      ::ROOTDict::GenerateInitInstanceLocal((const ::Pythia8::ResonanceNuRight*)0x0)->GetClass();
   }

} // end of namespace ROOTDict

namespace ROOTDict {
   void Pythia8cLcLResonanceZRight_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void Pythia8cLcLResonanceZRight_Dictionary();
   static void delete_Pythia8cLcLResonanceZRight(void *p);
   static void deleteArray_Pythia8cLcLResonanceZRight(void *p);
   static void destruct_Pythia8cLcLResonanceZRight(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::Pythia8::ResonanceZRight*)
   {
      // Make sure the shadow class has the right sizeof
      R__ASSERT(sizeof(::Pythia8::ResonanceZRight) == sizeof( ::ROOTShadow::Shadow::Pythia8::ResonanceZRight));
      ::Pythia8::ResonanceZRight *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(::Pythia8::ResonanceZRight),0);
      static ::ROOT::TGenericClassInfo 
         instance("Pythia8::ResonanceZRight", "/usr/local/include/Pythia8/ResonanceWidths.h", 574,
                  typeid(::Pythia8::ResonanceZRight), ::ROOT::DefineBehavior(ptr, ptr),
                  &Pythia8cLcLResonanceZRight_ShowMembers, &Pythia8cLcLResonanceZRight_Dictionary, isa_proxy, 4,
                  sizeof(::Pythia8::ResonanceZRight) );
      instance.SetDelete(&delete_Pythia8cLcLResonanceZRight);
      instance.SetDeleteArray(&deleteArray_Pythia8cLcLResonanceZRight);
      instance.SetDestructor(&destruct_Pythia8cLcLResonanceZRight);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::Pythia8::ResonanceZRight*)
   {
      return GenerateInitInstanceLocal((::Pythia8::ResonanceZRight*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::Pythia8::ResonanceZRight*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void Pythia8cLcLResonanceZRight_Dictionary() {
      ::ROOTDict::GenerateInitInstanceLocal((const ::Pythia8::ResonanceZRight*)0x0)->GetClass();
   }

} // end of namespace ROOTDict

namespace ROOTDict {
   void Pythia8cLcLResonanceWRight_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void Pythia8cLcLResonanceWRight_Dictionary();
   static void delete_Pythia8cLcLResonanceWRight(void *p);
   static void deleteArray_Pythia8cLcLResonanceWRight(void *p);
   static void destruct_Pythia8cLcLResonanceWRight(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::Pythia8::ResonanceWRight*)
   {
      // Make sure the shadow class has the right sizeof
      R__ASSERT(sizeof(::Pythia8::ResonanceWRight) == sizeof( ::ROOTShadow::Shadow::Pythia8::ResonanceWRight));
      ::Pythia8::ResonanceWRight *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(::Pythia8::ResonanceWRight),0);
      static ::ROOT::TGenericClassInfo 
         instance("Pythia8::ResonanceWRight", "/usr/local/include/Pythia8/ResonanceWidths.h", 601,
                  typeid(::Pythia8::ResonanceWRight), ::ROOT::DefineBehavior(ptr, ptr),
                  &Pythia8cLcLResonanceWRight_ShowMembers, &Pythia8cLcLResonanceWRight_Dictionary, isa_proxy, 4,
                  sizeof(::Pythia8::ResonanceWRight) );
      instance.SetDelete(&delete_Pythia8cLcLResonanceWRight);
      instance.SetDeleteArray(&deleteArray_Pythia8cLcLResonanceWRight);
      instance.SetDestructor(&destruct_Pythia8cLcLResonanceWRight);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::Pythia8::ResonanceWRight*)
   {
      return GenerateInitInstanceLocal((::Pythia8::ResonanceWRight*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::Pythia8::ResonanceWRight*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void Pythia8cLcLResonanceWRight_Dictionary() {
      ::ROOTDict::GenerateInitInstanceLocal((const ::Pythia8::ResonanceWRight*)0x0)->GetClass();
   }

} // end of namespace ROOTDict

namespace ROOTDict {
   void Pythia8cLcLResonanceHchgchgLeft_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void Pythia8cLcLResonanceHchgchgLeft_Dictionary();
   static void delete_Pythia8cLcLResonanceHchgchgLeft(void *p);
   static void deleteArray_Pythia8cLcLResonanceHchgchgLeft(void *p);
   static void destruct_Pythia8cLcLResonanceHchgchgLeft(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::Pythia8::ResonanceHchgchgLeft*)
   {
      // Make sure the shadow class has the right sizeof
      R__ASSERT(sizeof(::Pythia8::ResonanceHchgchgLeft) == sizeof( ::ROOTShadow::Shadow::Pythia8::ResonanceHchgchgLeft));
      ::Pythia8::ResonanceHchgchgLeft *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(::Pythia8::ResonanceHchgchgLeft),0);
      static ::ROOT::TGenericClassInfo 
         instance("Pythia8::ResonanceHchgchgLeft", "/usr/local/include/Pythia8/ResonanceWidths.h", 628,
                  typeid(::Pythia8::ResonanceHchgchgLeft), ::ROOT::DefineBehavior(ptr, ptr),
                  &Pythia8cLcLResonanceHchgchgLeft_ShowMembers, &Pythia8cLcLResonanceHchgchgLeft_Dictionary, isa_proxy, 4,
                  sizeof(::Pythia8::ResonanceHchgchgLeft) );
      instance.SetDelete(&delete_Pythia8cLcLResonanceHchgchgLeft);
      instance.SetDeleteArray(&deleteArray_Pythia8cLcLResonanceHchgchgLeft);
      instance.SetDestructor(&destruct_Pythia8cLcLResonanceHchgchgLeft);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::Pythia8::ResonanceHchgchgLeft*)
   {
      return GenerateInitInstanceLocal((::Pythia8::ResonanceHchgchgLeft*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::Pythia8::ResonanceHchgchgLeft*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void Pythia8cLcLResonanceHchgchgLeft_Dictionary() {
      ::ROOTDict::GenerateInitInstanceLocal((const ::Pythia8::ResonanceHchgchgLeft*)0x0)->GetClass();
   }

} // end of namespace ROOTDict

namespace ROOTDict {
   void Pythia8cLcLResonanceHchgchgRight_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void Pythia8cLcLResonanceHchgchgRight_Dictionary();
   static void delete_Pythia8cLcLResonanceHchgchgRight(void *p);
   static void deleteArray_Pythia8cLcLResonanceHchgchgRight(void *p);
   static void destruct_Pythia8cLcLResonanceHchgchgRight(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::Pythia8::ResonanceHchgchgRight*)
   {
      // Make sure the shadow class has the right sizeof
      R__ASSERT(sizeof(::Pythia8::ResonanceHchgchgRight) == sizeof( ::ROOTShadow::Shadow::Pythia8::ResonanceHchgchgRight));
      ::Pythia8::ResonanceHchgchgRight *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(::Pythia8::ResonanceHchgchgRight),0);
      static ::ROOT::TGenericClassInfo 
         instance("Pythia8::ResonanceHchgchgRight", "/usr/local/include/Pythia8/ResonanceWidths.h", 655,
                  typeid(::Pythia8::ResonanceHchgchgRight), ::ROOT::DefineBehavior(ptr, ptr),
                  &Pythia8cLcLResonanceHchgchgRight_ShowMembers, &Pythia8cLcLResonanceHchgchgRight_Dictionary, isa_proxy, 4,
                  sizeof(::Pythia8::ResonanceHchgchgRight) );
      instance.SetDelete(&delete_Pythia8cLcLResonanceHchgchgRight);
      instance.SetDeleteArray(&deleteArray_Pythia8cLcLResonanceHchgchgRight);
      instance.SetDestructor(&destruct_Pythia8cLcLResonanceHchgchgRight);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::Pythia8::ResonanceHchgchgRight*)
   {
      return GenerateInitInstanceLocal((::Pythia8::ResonanceHchgchgRight*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::Pythia8::ResonanceHchgchgRight*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void Pythia8cLcLResonanceHchgchgRight_Dictionary() {
      ::ROOTDict::GenerateInitInstanceLocal((const ::Pythia8::ResonanceHchgchgRight*)0x0)->GetClass();
   }

} // end of namespace ROOTDict

namespace ROOTDict {
   void Pythia8cLcLInBeam_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void Pythia8cLcLInBeam_Dictionary();
   static void *new_Pythia8cLcLInBeam(void *p = 0);
   static void *newArray_Pythia8cLcLInBeam(Long_t size, void *p);
   static void delete_Pythia8cLcLInBeam(void *p);
   static void deleteArray_Pythia8cLcLInBeam(void *p);
   static void destruct_Pythia8cLcLInBeam(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::Pythia8::InBeam*)
   {
      // Make sure the shadow class has the right sizeof
      R__ASSERT(sizeof(::Pythia8::InBeam) == sizeof( ::ROOTShadow::Shadow::Pythia8::InBeam));
      ::Pythia8::InBeam *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(::Pythia8::InBeam),0);
      static ::ROOT::TGenericClassInfo 
         instance("Pythia8::InBeam", "/usr/local/include/Pythia8/SigmaProcess.h", 49,
                  typeid(::Pythia8::InBeam), ::ROOT::DefineBehavior(ptr, ptr),
                  &Pythia8cLcLInBeam_ShowMembers, &Pythia8cLcLInBeam_Dictionary, isa_proxy, 4,
                  sizeof(::Pythia8::InBeam) );
      instance.SetNew(&new_Pythia8cLcLInBeam);
      instance.SetNewArray(&newArray_Pythia8cLcLInBeam);
      instance.SetDelete(&delete_Pythia8cLcLInBeam);
      instance.SetDeleteArray(&deleteArray_Pythia8cLcLInBeam);
      instance.SetDestructor(&destruct_Pythia8cLcLInBeam);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::Pythia8::InBeam*)
   {
      return GenerateInitInstanceLocal((::Pythia8::InBeam*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::Pythia8::InBeam*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void Pythia8cLcLInBeam_Dictionary() {
      ::ROOTDict::GenerateInitInstanceLocal((const ::Pythia8::InBeam*)0x0)->GetClass();
   }

} // end of namespace ROOTDict

namespace ROOTDict {
   void Pythia8cLcLInPair_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void Pythia8cLcLInPair_Dictionary();
   static void *new_Pythia8cLcLInPair(void *p = 0);
   static void *newArray_Pythia8cLcLInPair(Long_t size, void *p);
   static void delete_Pythia8cLcLInPair(void *p);
   static void deleteArray_Pythia8cLcLInPair(void *p);
   static void destruct_Pythia8cLcLInPair(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::Pythia8::InPair*)
   {
      // Make sure the shadow class has the right sizeof
      R__ASSERT(sizeof(::Pythia8::InPair) == sizeof( ::ROOTShadow::Shadow::Pythia8::InPair));
      ::Pythia8::InPair *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(::Pythia8::InPair),0);
      static ::ROOT::TGenericClassInfo 
         instance("Pythia8::InPair", "/usr/local/include/Pythia8/SigmaProcess.h", 66,
                  typeid(::Pythia8::InPair), ::ROOT::DefineBehavior(ptr, ptr),
                  &Pythia8cLcLInPair_ShowMembers, &Pythia8cLcLInPair_Dictionary, isa_proxy, 4,
                  sizeof(::Pythia8::InPair) );
      instance.SetNew(&new_Pythia8cLcLInPair);
      instance.SetNewArray(&newArray_Pythia8cLcLInPair);
      instance.SetDelete(&delete_Pythia8cLcLInPair);
      instance.SetDeleteArray(&deleteArray_Pythia8cLcLInPair);
      instance.SetDestructor(&destruct_Pythia8cLcLInPair);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::Pythia8::InPair*)
   {
      return GenerateInitInstanceLocal((::Pythia8::InPair*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::Pythia8::InPair*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void Pythia8cLcLInPair_Dictionary() {
      ::ROOTDict::GenerateInitInstanceLocal((const ::Pythia8::InPair*)0x0)->GetClass();
   }

} // end of namespace ROOTDict

namespace ROOTDict {
   void Pythia8cLcLSigmaProcess_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void Pythia8cLcLSigmaProcess_Dictionary();
   static void delete_Pythia8cLcLSigmaProcess(void *p);
   static void deleteArray_Pythia8cLcLSigmaProcess(void *p);
   static void destruct_Pythia8cLcLSigmaProcess(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::Pythia8::SigmaProcess*)
   {
      // Make sure the shadow class has the right sizeof
      R__ASSERT(sizeof(::Pythia8::SigmaProcess) == sizeof( ::ROOTShadow::Shadow::Pythia8::SigmaProcess));
      ::Pythia8::SigmaProcess *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(::Pythia8::SigmaProcess),0);
      static ::ROOT::TGenericClassInfo 
         instance("Pythia8::SigmaProcess", "/usr/local/include/Pythia8/SigmaProcess.h", 84,
                  typeid(::Pythia8::SigmaProcess), ::ROOT::DefineBehavior(ptr, ptr),
                  &Pythia8cLcLSigmaProcess_ShowMembers, &Pythia8cLcLSigmaProcess_Dictionary, isa_proxy, 4,
                  sizeof(::Pythia8::SigmaProcess) );
      instance.SetDelete(&delete_Pythia8cLcLSigmaProcess);
      instance.SetDeleteArray(&deleteArray_Pythia8cLcLSigmaProcess);
      instance.SetDestructor(&destruct_Pythia8cLcLSigmaProcess);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::Pythia8::SigmaProcess*)
   {
      return GenerateInitInstanceLocal((::Pythia8::SigmaProcess*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::Pythia8::SigmaProcess*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void Pythia8cLcLSigmaProcess_Dictionary() {
      ::ROOTDict::GenerateInitInstanceLocal((const ::Pythia8::SigmaProcess*)0x0)->GetClass();
   }

} // end of namespace ROOTDict

namespace ROOTDict {
   void Pythia8cLcLPythia_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void Pythia8cLcLPythia_Dictionary();
   static void *new_Pythia8cLcLPythia(void *p = 0);
   static void *newArray_Pythia8cLcLPythia(Long_t size, void *p);
   static void delete_Pythia8cLcLPythia(void *p);
   static void deleteArray_Pythia8cLcLPythia(void *p);
   static void destruct_Pythia8cLcLPythia(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::Pythia8::Pythia*)
   {
      // Make sure the shadow class has the right sizeof
      R__ASSERT(sizeof(::Pythia8::Pythia) == sizeof( ::ROOTShadow::Shadow::Pythia8::Pythia));
      ::Pythia8::Pythia *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(::Pythia8::Pythia),0);
      static ::ROOT::TGenericClassInfo 
         instance("Pythia8::Pythia", "/usr/local/include/Pythia8/Pythia.h", 46,
                  typeid(::Pythia8::Pythia), ::ROOT::DefineBehavior(ptr, ptr),
                  &Pythia8cLcLPythia_ShowMembers, &Pythia8cLcLPythia_Dictionary, isa_proxy, 4,
                  sizeof(::Pythia8::Pythia) );
      instance.SetNew(&new_Pythia8cLcLPythia);
      instance.SetNewArray(&newArray_Pythia8cLcLPythia);
      instance.SetDelete(&delete_Pythia8cLcLPythia);
      instance.SetDeleteArray(&deleteArray_Pythia8cLcLPythia);
      instance.SetDestructor(&destruct_Pythia8cLcLPythia);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::Pythia8::Pythia*)
   {
      return GenerateInitInstanceLocal((::Pythia8::Pythia*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::Pythia8::Pythia*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void Pythia8cLcLPythia_Dictionary() {
      ::ROOTDict::GenerateInitInstanceLocal((const ::Pythia8::Pythia*)0x0)->GetClass();
   }

} // end of namespace ROOTDict

//______________________________________________________________________________
namespace ROOTDict {
   void Pythia8cLcLEvent_ShowMembers(void *obj, TMemberInspector &R__insp)
   {
      // Inspect the data members of an object of class Pythia8::Event.
      typedef ::ROOTShadow::Shadow::Pythia8::Event ShadowClass;
      ShadowClass *sobj = (ShadowClass*)obj;
      if (sobj) { } // Dummy usage just in case there is no datamember.

      TClass *R__cl  = ::ROOTDict::GenerateInitInstanceLocal((const ::Pythia8::Event*)0x0)->GetClass();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "startColTag", &sobj->startColTag);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "entry", (void*)&sobj->entry);
      R__insp.InspectMember("vector<Pythia8::Particle>", (void*)&sobj->entry, "entry.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "junction", (void*)&sobj->junction);
      R__insp.InspectMember("vector<Pythia8::Junction>", (void*)&sobj->junction, "junction.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "maxColTag", &sobj->maxColTag);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "savedSize", &sobj->savedSize);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "savedJunctionSize", &sobj->savedJunctionSize);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "scaleSave", &sobj->scaleSave);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "scaleSecondSave", &sobj->scaleSecondSave);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "headerList", (void*)&sobj->headerList);
      R__insp.InspectMember("string", (void*)&sobj->headerList, "headerList.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*particleDataPtr", &sobj->particleDataPtr);
   }

}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_Pythia8cLcLEvent(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::Pythia8::Event : new ::Pythia8::Event;
   }
   static void *newArray_Pythia8cLcLEvent(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) ::Pythia8::Event[nElements] : new ::Pythia8::Event[nElements];
   }
   // Wrapper around operator delete
   static void delete_Pythia8cLcLEvent(void *p) {
      delete ((::Pythia8::Event*)p);
   }
   static void deleteArray_Pythia8cLcLEvent(void *p) {
      delete [] ((::Pythia8::Event*)p);
   }
   static void destruct_Pythia8cLcLEvent(void *p) {
      typedef ::Pythia8::Event current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::Pythia8::Event

//______________________________________________________________________________
namespace ROOTDict {
   void Pythia8cLcLParticle_ShowMembers(void *obj, TMemberInspector &R__insp)
   {
      // Inspect the data members of an object of class Pythia8::Particle.
      typedef ::ROOTShadow::Shadow::Pythia8::Particle ShadowClass;
      ShadowClass *sobj = (ShadowClass*)obj;
      if (sobj) { } // Dummy usage just in case there is no datamember.

      TClass *R__cl  = ::ROOTDict::GenerateInitInstanceLocal((const ::Pythia8::Particle*)0x0)->GetClass();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "idSave", &sobj->idSave);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "statusSave", &sobj->statusSave);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mother1Save", &sobj->mother1Save);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mother2Save", &sobj->mother2Save);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "daughter1Save", &sobj->daughter1Save);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "daughter2Save", &sobj->daughter2Save);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "colSave", &sobj->colSave);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "acolSave", &sobj->acolSave);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "pSave", (void*)&sobj->pSave);
      R__insp.InspectMember("Pythia8::Vec4", (void*)&sobj->pSave, "pSave.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mSave", &sobj->mSave);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "scaleSave", &sobj->scaleSave);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "polSave", &sobj->polSave);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "hasVertexSave", &sobj->hasVertexSave);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "vProdSave", (void*)&sobj->vProdSave);
      R__insp.InspectMember("Pythia8::Vec4", (void*)&sobj->vProdSave, "vProdSave.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "tauSave", &sobj->tauSave);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*pdePtr", &sobj->pdePtr);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*evtPtr", &sobj->evtPtr);
   }

}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_Pythia8cLcLParticle(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::Pythia8::Particle : new ::Pythia8::Particle;
   }
   static void *newArray_Pythia8cLcLParticle(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) ::Pythia8::Particle[nElements] : new ::Pythia8::Particle[nElements];
   }
   // Wrapper around operator delete
   static void delete_Pythia8cLcLParticle(void *p) {
      delete ((::Pythia8::Particle*)p);
   }
   static void deleteArray_Pythia8cLcLParticle(void *p) {
      delete [] ((::Pythia8::Particle*)p);
   }
   static void destruct_Pythia8cLcLParticle(void *p) {
      typedef ::Pythia8::Particle current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::Pythia8::Particle

//______________________________________________________________________________
namespace ROOTDict {
   void Pythia8cLcLJunction_ShowMembers(void *obj, TMemberInspector &R__insp)
   {
      // Inspect the data members of an object of class Pythia8::Junction.
      typedef ::ROOTShadow::Shadow::Pythia8::Junction ShadowClass;
      ShadowClass *sobj = (ShadowClass*)obj;
      if (sobj) { } // Dummy usage just in case there is no datamember.

      TClass *R__cl  = ::ROOTDict::GenerateInitInstanceLocal((const ::Pythia8::Junction*)0x0)->GetClass();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "remainsSave", &sobj->remainsSave);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "kindSave", &sobj->kindSave);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "colSave[3]", sobj->colSave);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "endColSave[3]", sobj->endColSave);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "statusSave[3]", sobj->statusSave);
   }

}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_Pythia8cLcLJunction(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::Pythia8::Junction : new ::Pythia8::Junction;
   }
   static void *newArray_Pythia8cLcLJunction(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) ::Pythia8::Junction[nElements] : new ::Pythia8::Junction[nElements];
   }
   // Wrapper around operator delete
   static void delete_Pythia8cLcLJunction(void *p) {
      delete ((::Pythia8::Junction*)p);
   }
   static void deleteArray_Pythia8cLcLJunction(void *p) {
      delete [] ((::Pythia8::Junction*)p);
   }
   static void destruct_Pythia8cLcLJunction(void *p) {
      typedef ::Pythia8::Junction current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::Pythia8::Junction

//______________________________________________________________________________
namespace ROOTDict {
   void Pythia8cLcLVec4_ShowMembers(void *obj, TMemberInspector &R__insp)
   {
      // Inspect the data members of an object of class Pythia8::Vec4.
      typedef ::ROOTShadow::Shadow::Pythia8::Vec4 ShadowClass;
      ShadowClass *sobj = (ShadowClass*)obj;
      if (sobj) { } // Dummy usage just in case there is no datamember.

      TClass *R__cl  = ::ROOTDict::GenerateInitInstanceLocal((const ::Pythia8::Vec4*)0x0)->GetClass();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "xx", &sobj->xx);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "yy", &sobj->yy);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "zz", &sobj->zz);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "tt", &sobj->tt);
   }

}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_Pythia8cLcLVec4(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::Pythia8::Vec4 : new ::Pythia8::Vec4;
   }
   static void *newArray_Pythia8cLcLVec4(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) ::Pythia8::Vec4[nElements] : new ::Pythia8::Vec4[nElements];
   }
   // Wrapper around operator delete
   static void delete_Pythia8cLcLVec4(void *p) {
      delete ((::Pythia8::Vec4*)p);
   }
   static void deleteArray_Pythia8cLcLVec4(void *p) {
      delete [] ((::Pythia8::Vec4*)p);
   }
   static void destruct_Pythia8cLcLVec4(void *p) {
      typedef ::Pythia8::Vec4 current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::Pythia8::Vec4

//______________________________________________________________________________
namespace ROOTDict {
   void Pythia8cLcLParticleData_ShowMembers(void *obj, TMemberInspector &R__insp)
   {
      // Inspect the data members of an object of class Pythia8::ParticleData.
      typedef ::ROOTShadow::Shadow::Pythia8::ParticleData ShadowClass;
      ShadowClass *sobj = (ShadowClass*)obj;
      if (sobj) { } // Dummy usage just in case there is no datamember.

      TClass *R__cl  = ::ROOTDict::GenerateInitInstanceLocal((const ::Pythia8::ParticleData*)0x0)->GetClass();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "modeBreitWigner", &sobj->modeBreitWigner);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "maxEnhanceBW", &sobj->maxEnhanceBW);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mQRun[7]", sobj->mQRun);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Lambda5Run", &sobj->Lambda5Run);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*infoPtr", &sobj->infoPtr);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*settingsPtr", &sobj->settingsPtr);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*rndmPtr", &sobj->rndmPtr);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*couplingsPtr", &sobj->couplingsPtr);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "pdt", (void*)&sobj->pdt);
      R__insp.InspectMember("map<int,ParticleDataEntry>", (void*)&sobj->pdt, "pdt.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*particlePtr", &sobj->particlePtr);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "isInit", &sobj->isInit);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "readingFailedSave", &sobj->readingFailedSave);
   }

}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_Pythia8cLcLParticleData(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::Pythia8::ParticleData : new ::Pythia8::ParticleData;
   }
   static void *newArray_Pythia8cLcLParticleData(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) ::Pythia8::ParticleData[nElements] : new ::Pythia8::ParticleData[nElements];
   }
   // Wrapper around operator delete
   static void delete_Pythia8cLcLParticleData(void *p) {
      delete ((::Pythia8::ParticleData*)p);
   }
   static void deleteArray_Pythia8cLcLParticleData(void *p) {
      delete [] ((::Pythia8::ParticleData*)p);
   }
   static void destruct_Pythia8cLcLParticleData(void *p) {
      typedef ::Pythia8::ParticleData current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::Pythia8::ParticleData

//______________________________________________________________________________
namespace ROOTDict {
   void Pythia8cLcLParticleDataEntry_ShowMembers(void *obj, TMemberInspector &R__insp)
   {
      // Inspect the data members of an object of class Pythia8::ParticleDataEntry.
      typedef ::ROOTShadow::Shadow::Pythia8::ParticleDataEntry ShadowClass;
      ShadowClass *sobj = (ShadowClass*)obj;
      if (sobj) { } // Dummy usage just in case there is no datamember.

      TClass *R__cl  = ::ROOTDict::GenerateInitInstanceLocal((const ::Pythia8::ParticleDataEntry*)0x0)->GetClass();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "idSave", &sobj->idSave);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "nameSave", (void*)&sobj->nameSave);
      R__insp.InspectMember("string", (void*)&sobj->nameSave, "nameSave.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "antiNameSave", (void*)&sobj->antiNameSave);
      R__insp.InspectMember("string", (void*)&sobj->antiNameSave, "antiNameSave.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "spinTypeSave", &sobj->spinTypeSave);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "chargeTypeSave", &sobj->chargeTypeSave);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "colTypeSave", &sobj->colTypeSave);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "m0Save", &sobj->m0Save);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mWidthSave", &sobj->mWidthSave);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mMinSave", &sobj->mMinSave);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mMaxSave", &sobj->mMaxSave);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "tau0Save", &sobj->tau0Save);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "constituentMassSave", &sobj->constituentMassSave);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "hasAntiSave", &sobj->hasAntiSave);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "isResonanceSave", &sobj->isResonanceSave);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mayDecaySave", &sobj->mayDecaySave);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "doExternalDecaySave", &sobj->doExternalDecaySave);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "isVisibleSave", &sobj->isVisibleSave);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "doForceWidthSave", &sobj->doForceWidthSave);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "hasChangedSave", &sobj->hasChangedSave);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "modeBWnow", &sobj->modeBWnow);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "atanLow", &sobj->atanLow);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "atanDif", &sobj->atanDif);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mThr", &sobj->mThr);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "channels", (void*)&sobj->channels);
      R__insp.InspectMember("vector<DecayChannel>", (void*)&sobj->channels, "channels.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "currentBRSum", &sobj->currentBRSum);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*resonancePtr", &sobj->resonancePtr);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*particleDataPtr", &sobj->particleDataPtr);
   }

}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_Pythia8cLcLParticleDataEntry(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::Pythia8::ParticleDataEntry : new ::Pythia8::ParticleDataEntry;
   }
   static void *newArray_Pythia8cLcLParticleDataEntry(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) ::Pythia8::ParticleDataEntry[nElements] : new ::Pythia8::ParticleDataEntry[nElements];
   }
   // Wrapper around operator delete
   static void delete_Pythia8cLcLParticleDataEntry(void *p) {
      delete ((::Pythia8::ParticleDataEntry*)p);
   }
   static void deleteArray_Pythia8cLcLParticleDataEntry(void *p) {
      delete [] ((::Pythia8::ParticleDataEntry*)p);
   }
   static void destruct_Pythia8cLcLParticleDataEntry(void *p) {
      typedef ::Pythia8::ParticleDataEntry current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::Pythia8::ParticleDataEntry

//______________________________________________________________________________
namespace ROOTDict {
   void Pythia8cLcLDecayChannel_ShowMembers(void *obj, TMemberInspector &R__insp)
   {
      // Inspect the data members of an object of class Pythia8::DecayChannel.
      typedef ::ROOTShadow::Shadow::Pythia8::DecayChannel ShadowClass;
      ShadowClass *sobj = (ShadowClass*)obj;
      if (sobj) { } // Dummy usage just in case there is no datamember.

      TClass *R__cl  = ::ROOTDict::GenerateInitInstanceLocal((const ::Pythia8::DecayChannel*)0x0)->GetClass();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "onModeSave", &sobj->onModeSave);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "bRatioSave", &sobj->bRatioSave);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "currentBRSave", &sobj->currentBRSave);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "onShellWidthSave", &sobj->onShellWidthSave);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "openSecPos", &sobj->openSecPos);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "openSecNeg", &sobj->openSecNeg);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "meModeSave", &sobj->meModeSave);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "nProd", &sobj->nProd);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "prod[8]", sobj->prod);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "hasChangedSave", &sobj->hasChangedSave);
   }

}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_Pythia8cLcLDecayChannel(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::Pythia8::DecayChannel : new ::Pythia8::DecayChannel;
   }
   static void *newArray_Pythia8cLcLDecayChannel(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) ::Pythia8::DecayChannel[nElements] : new ::Pythia8::DecayChannel[nElements];
   }
   // Wrapper around operator delete
   static void delete_Pythia8cLcLDecayChannel(void *p) {
      delete ((::Pythia8::DecayChannel*)p);
   }
   static void deleteArray_Pythia8cLcLDecayChannel(void *p) {
      delete [] ((::Pythia8::DecayChannel*)p);
   }
   static void destruct_Pythia8cLcLDecayChannel(void *p) {
      typedef ::Pythia8::DecayChannel current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::Pythia8::DecayChannel

//______________________________________________________________________________
namespace ROOTDict {
   void Pythia8cLcLPythia_ShowMembers(void *obj, TMemberInspector &R__insp)
   {
      // Inspect the data members of an object of class Pythia8::Pythia.
      typedef ::ROOTShadow::Shadow::Pythia8::Pythia ShadowClass;
      ShadowClass *sobj = (ShadowClass*)obj;
      if (sobj) { } // Dummy usage just in case there is no datamember.

      TClass *R__cl  = ::ROOTDict::GenerateInitInstanceLocal((const ::Pythia8::Pythia*)0x0)->GetClass();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "process", (void*)&sobj->process);
      R__insp.InspectMember("Pythia8::Event", (void*)&sobj->process, "process.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "event", (void*)&sobj->event);
      R__insp.InspectMember("Pythia8::Event", (void*)&sobj->event, "event.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "info", (void*)&sobj->info);
      R__insp.InspectMember("Pythia8::Info", (void*)&sobj->info, "info.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "settings", (void*)&sobj->settings);
      R__insp.InspectMember("Pythia8::Settings", (void*)&sobj->settings, "settings.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "particleData", (void*)&sobj->particleData);
      R__insp.InspectMember("Pythia8::ParticleData", (void*)&sobj->particleData, "particleData.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "rndm", (void*)&sobj->rndm);
      R__insp.InspectMember("Pythia8::Rndm", (void*)&sobj->rndm, "rndm.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "couplings", (void*)&sobj->couplings);
      R__insp.InspectMember("Pythia8::Couplings", (void*)&sobj->couplings, "couplings.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*couplingsPtr", &sobj->couplingsPtr);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "slhaInterface", (void*)&sobj->slhaInterface);
      R__insp.InspectMember("Pythia8::SLHAinterface", (void*)&sobj->slhaInterface, "slhaInterface.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "partonSystems", (void*)&sobj->partonSystems);
      R__insp.InspectMember("Pythia8::PartonSystems", (void*)&sobj->partonSystems, "partonSystems.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "merging", (void*)&sobj->merging);
      R__insp.InspectMember("Pythia8::Merging", (void*)&sobj->merging, "merging.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*mergingHooksPtr", &sobj->mergingHooksPtr);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "xmlPath", (void*)&sobj->xmlPath);
      R__insp.InspectMember("string", (void*)&sobj->xmlPath, "xmlPath.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "doProcessLevel", &sobj->doProcessLevel);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "doPartonLevel", &sobj->doPartonLevel);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "doHadronLevel", &sobj->doHadronLevel);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "doDiffraction", &sobj->doDiffraction);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "doResDec", &sobj->doResDec);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "doFSRinRes", &sobj->doFSRinRes);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "decayRHadrons", &sobj->decayRHadrons);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "abortIfVeto", &sobj->abortIfVeto);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "checkEvent", &sobj->checkEvent);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "checkHistory", &sobj->checkHistory);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "nErrList", &sobj->nErrList);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "epTolErr", &sobj->epTolErr);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "epTolWarn", &sobj->epTolWarn);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mTolErr", &sobj->mTolErr);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mTolWarn", &sobj->mTolWarn);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "isConstructed", &sobj->isConstructed);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "isInit", &sobj->isInit);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "isUnresolvedA", &sobj->isUnresolvedA);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "isUnresolvedB", &sobj->isUnresolvedB);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "showSaV", &sobj->showSaV);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "showMaD", &sobj->showMaD);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "idA", &sobj->idA);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "idB", &sobj->idB);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "frameType", &sobj->frameType);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "boostType", &sobj->boostType);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "nCount", &sobj->nCount);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "nShowLHA", &sobj->nShowLHA);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "nShowInfo", &sobj->nShowInfo);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "nShowProc", &sobj->nShowProc);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "nShowEvt", &sobj->nShowEvt);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mA", &sobj->mA);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mB", &sobj->mB);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "pxA", &sobj->pxA);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "pxB", &sobj->pxB);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "pyA", &sobj->pyA);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "pyB", &sobj->pyB);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "pzA", &sobj->pzA);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "pzB", &sobj->pzB);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "eA", &sobj->eA);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "eB", &sobj->eB);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "pzAcm", &sobj->pzAcm);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "pzBcm", &sobj->pzBcm);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "eCM", &sobj->eCM);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "betaZ", &sobj->betaZ);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "gammaZ", &sobj->gammaZ);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "pAinit", (void*)&sobj->pAinit);
      R__insp.InspectMember("Pythia8::Vec4", (void*)&sobj->pAinit, "pAinit.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "pBinit", (void*)&sobj->pBinit);
      R__insp.InspectMember("Pythia8::Vec4", (void*)&sobj->pBinit, "pBinit.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "pAnow", (void*)&sobj->pAnow);
      R__insp.InspectMember("Pythia8::Vec4", (void*)&sobj->pAnow, "pAnow.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "pBnow", (void*)&sobj->pBnow);
      R__insp.InspectMember("Pythia8::Vec4", (void*)&sobj->pBnow, "pBnow.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "MfromCM", (void*)&sobj->MfromCM);
      R__insp.InspectMember("Pythia8::RotBstMatrix", (void*)&sobj->MfromCM, "MfromCM.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "MtoCM", (void*)&sobj->MtoCM);
      R__insp.InspectMember("Pythia8::RotBstMatrix", (void*)&sobj->MtoCM, "MtoCM.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "nErrEvent", &sobj->nErrEvent);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "iErrId", (void*)&sobj->iErrId);
      R__insp.InspectMember("vector<int>", (void*)&sobj->iErrId, "iErrId.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "iErrCol", (void*)&sobj->iErrCol);
      R__insp.InspectMember("vector<int>", (void*)&sobj->iErrCol, "iErrCol.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "iErrEpm", (void*)&sobj->iErrEpm);
      R__insp.InspectMember("vector<int>", (void*)&sobj->iErrEpm, "iErrEpm.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "iErrNan", (void*)&sobj->iErrNan);
      R__insp.InspectMember("vector<int>", (void*)&sobj->iErrNan, "iErrNan.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "iErrNanVtx", (void*)&sobj->iErrNanVtx);
      R__insp.InspectMember("vector<int>", (void*)&sobj->iErrNanVtx, "iErrNanVtx.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*pdfAPtr", &sobj->pdfAPtr);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*pdfBPtr", &sobj->pdfBPtr);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*pdfHardAPtr", &sobj->pdfHardAPtr);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*pdfHardBPtr", &sobj->pdfHardBPtr);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*pdfPomAPtr", &sobj->pdfPomAPtr);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*pdfPomBPtr", &sobj->pdfPomBPtr);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "useNewPdfA", &sobj->useNewPdfA);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "useNewPdfB", &sobj->useNewPdfB);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "useNewPdfHard", &sobj->useNewPdfHard);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "useNewPdfPomA", &sobj->useNewPdfPomA);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "useNewPdfPomB", &sobj->useNewPdfPomB);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "beamA", (void*)&sobj->beamA);
      R__insp.InspectMember("Pythia8::BeamParticle", (void*)&sobj->beamA, "beamA.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "beamB", (void*)&sobj->beamB);
      R__insp.InspectMember("Pythia8::BeamParticle", (void*)&sobj->beamB, "beamB.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "beamPomA", (void*)&sobj->beamPomA);
      R__insp.InspectMember("Pythia8::BeamParticle", (void*)&sobj->beamPomA, "beamPomA.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "beamPomB", (void*)&sobj->beamPomB);
      R__insp.InspectMember("Pythia8::BeamParticle", (void*)&sobj->beamPomB, "beamPomB.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "doLHA", &sobj->doLHA);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "useNewLHA", &sobj->useNewLHA);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*lhaUpPtr", &sobj->lhaUpPtr);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*decayHandlePtr", &sobj->decayHandlePtr);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "handledParticles", (void*)&sobj->handledParticles);
      R__insp.InspectMember("vector<int>", (void*)&sobj->handledParticles, "handledParticles.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*userHooksPtr", &sobj->userHooksPtr);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "hasUserHooks", &sobj->hasUserHooks);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "doVetoProcess", &sobj->doVetoProcess);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "doVetoPartons", &sobj->doVetoPartons);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "retryPartonLevel", &sobj->retryPartonLevel);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*beamShapePtr", &sobj->beamShapePtr);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "useNewBeamShape", &sobj->useNewBeamShape);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "doMomentumSpread", &sobj->doMomentumSpread);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "doVertexSpread", &sobj->doVertexSpread);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "sigmaPtrs", (void*)&sobj->sigmaPtrs);
      R__insp.InspectMember("vector<SigmaProcess*>", (void*)&sobj->sigmaPtrs, "sigmaPtrs.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "resonancePtrs", (void*)&sobj->resonancePtrs);
      R__insp.InspectMember("vector<ResonanceWidths*>", (void*)&sobj->resonancePtrs, "resonancePtrs.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*timesDecPtr", &sobj->timesDecPtr);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*timesPtr", &sobj->timesPtr);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*spacePtr", &sobj->spacePtr);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "useNewTimes", &sobj->useNewTimes);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "useNewSpace", &sobj->useNewSpace);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "processLevel", (void*)&sobj->processLevel);
      R__insp.InspectMember("Pythia8::ProcessLevel", (void*)&sobj->processLevel, "processLevel.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "partonLevel", (void*)&sobj->partonLevel);
      R__insp.InspectMember("Pythia8::PartonLevel", (void*)&sobj->partonLevel, "partonLevel.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "trialPartonLevel", (void*)&sobj->trialPartonLevel);
      R__insp.InspectMember("Pythia8::PartonLevel", (void*)&sobj->trialPartonLevel, "trialPartonLevel.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "hasMergingHooks", &sobj->hasMergingHooks);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "hasOwnMergingHooks", &sobj->hasOwnMergingHooks);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "doMerging", &sobj->doMerging);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "hadronLevel", (void*)&sobj->hadronLevel);
      R__insp.InspectMember("Pythia8::HadronLevel", (void*)&sobj->hadronLevel, "hadronLevel.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "sigmaTot", (void*)&sobj->sigmaTot);
      R__insp.InspectMember("Pythia8::SigmaTotal", (void*)&sobj->sigmaTot, "sigmaTot.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "rHadrons", (void*)&sobj->rHadrons);
      R__insp.InspectMember("Pythia8::RHadrons", (void*)&sobj->rHadrons, "rHadrons.", false);
   }

}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_Pythia8cLcLPythia(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::Pythia8::Pythia : new ::Pythia8::Pythia;
   }
   static void *newArray_Pythia8cLcLPythia(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) ::Pythia8::Pythia[nElements] : new ::Pythia8::Pythia[nElements];
   }
   // Wrapper around operator delete
   static void delete_Pythia8cLcLPythia(void *p) {
      delete ((::Pythia8::Pythia*)p);
   }
   static void deleteArray_Pythia8cLcLPythia(void *p) {
      delete [] ((::Pythia8::Pythia*)p);
   }
   static void destruct_Pythia8cLcLPythia(void *p) {
      typedef ::Pythia8::Pythia current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::Pythia8::Pythia

//______________________________________________________________________________
namespace ROOTDict {
   void Pythia8cLcLCoupSM_ShowMembers(void *obj, TMemberInspector &R__insp)
   {
      // Inspect the data members of an object of class Pythia8::CoupSM.
      typedef ::ROOTShadow::Shadow::Pythia8::CoupSM ShadowClass;
      ShadowClass *sobj = (ShadowClass*)obj;
      if (sobj) { } // Dummy usage just in case there is no datamember.

      TClass *R__cl  = ::ROOTDict::GenerateInitInstanceLocal((const ::Pythia8::CoupSM*)0x0)->GetClass();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "s2tW", &sobj->s2tW);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "c2tW", &sobj->c2tW);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "s2tWbar", &sobj->s2tWbar);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "GFermi", &sobj->GFermi);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "vfSave[20]", sobj->vfSave);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "lfSave[20]", sobj->lfSave);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "rfSave[20]", sobj->rfSave);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "ef2Save[20]", sobj->ef2Save);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "vf2Save[20]", sobj->vf2Save);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "af2Save[20]", sobj->af2Save);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "efvfSave[20]", sobj->efvfSave);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "vf2af2Save[20]", sobj->vf2af2Save);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "VCKMsave[5][5]", sobj->VCKMsave);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "V2CKMsave[5][5]", sobj->V2CKMsave);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "V2CKMout[20]", sobj->V2CKMout);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*rndmPtr", &sobj->rndmPtr);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "alphaSlocal", (void*)&sobj->alphaSlocal);
      R__insp.InspectMember("Pythia8::AlphaStrong", (void*)&sobj->alphaSlocal, "alphaSlocal.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "alphaEMlocal", (void*)&sobj->alphaEMlocal);
      R__insp.InspectMember("Pythia8::AlphaEM", (void*)&sobj->alphaEMlocal, "alphaEMlocal.", false);
   }

}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_Pythia8cLcLCoupSM(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::Pythia8::CoupSM : new ::Pythia8::CoupSM;
   }
   static void *newArray_Pythia8cLcLCoupSM(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) ::Pythia8::CoupSM[nElements] : new ::Pythia8::CoupSM[nElements];
   }
   // Wrapper around operator delete
   static void delete_Pythia8cLcLCoupSM(void *p) {
      delete ((::Pythia8::CoupSM*)p);
   }
   static void deleteArray_Pythia8cLcLCoupSM(void *p) {
      delete [] ((::Pythia8::CoupSM*)p);
   }
   static void destruct_Pythia8cLcLCoupSM(void *p) {
      typedef ::Pythia8::CoupSM current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::Pythia8::CoupSM

//______________________________________________________________________________
namespace ROOTDict {
   void Pythia8cLcLCouplings_ShowMembers(void *obj, TMemberInspector &R__insp)
   {
      // Inspect the data members of an object of class Pythia8::Couplings.
      typedef ::ROOTShadow::Shadow::Pythia8::Couplings ShadowClass;
      ShadowClass *sobj = (ShadowClass*)obj;
      if (sobj) { } // Dummy usage just in case there is no datamember.

      TClass *R__cl  = ::ROOTDict::GenerateInitInstanceLocal((const ::Pythia8::Couplings*)0x0)->GetClass();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "isSUSY", &sobj->isSUSY);
      R__insp.GenericShowMembers("Pythia8::CoupSM", ( ::Pythia8::CoupSM * )( (::Pythia8::Couplings*) obj ), false);
   }

}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_Pythia8cLcLCouplings(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::Pythia8::Couplings : new ::Pythia8::Couplings;
   }
   static void *newArray_Pythia8cLcLCouplings(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) ::Pythia8::Couplings[nElements] : new ::Pythia8::Couplings[nElements];
   }
   // Wrapper around operator delete
   static void delete_Pythia8cLcLCouplings(void *p) {
      delete ((::Pythia8::Couplings*)p);
   }
   static void deleteArray_Pythia8cLcLCouplings(void *p) {
      delete [] ((::Pythia8::Couplings*)p);
   }
   static void destruct_Pythia8cLcLCouplings(void *p) {
      typedef ::Pythia8::Couplings current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::Pythia8::Couplings

//______________________________________________________________________________
namespace ROOTDict {
   void Pythia8cLcLInBeam_ShowMembers(void *obj, TMemberInspector &R__insp)
   {
      // Inspect the data members of an object of class Pythia8::InBeam.
      typedef ::ROOTShadow::Shadow::Pythia8::InBeam ShadowClass;
      ShadowClass *sobj = (ShadowClass*)obj;
      if (sobj) { } // Dummy usage just in case there is no datamember.

      TClass *R__cl  = ::ROOTDict::GenerateInitInstanceLocal((const ::Pythia8::InBeam*)0x0)->GetClass();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "id", &sobj->id);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "pdf", &sobj->pdf);
   }

}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_Pythia8cLcLInBeam(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::Pythia8::InBeam : new ::Pythia8::InBeam;
   }
   static void *newArray_Pythia8cLcLInBeam(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) ::Pythia8::InBeam[nElements] : new ::Pythia8::InBeam[nElements];
   }
   // Wrapper around operator delete
   static void delete_Pythia8cLcLInBeam(void *p) {
      delete ((::Pythia8::InBeam*)p);
   }
   static void deleteArray_Pythia8cLcLInBeam(void *p) {
      delete [] ((::Pythia8::InBeam*)p);
   }
   static void destruct_Pythia8cLcLInBeam(void *p) {
      typedef ::Pythia8::InBeam current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::Pythia8::InBeam

//______________________________________________________________________________
namespace ROOTDict {
   void Pythia8cLcLInPair_ShowMembers(void *obj, TMemberInspector &R__insp)
   {
      // Inspect the data members of an object of class Pythia8::InPair.
      typedef ::ROOTShadow::Shadow::Pythia8::InPair ShadowClass;
      ShadowClass *sobj = (ShadowClass*)obj;
      if (sobj) { } // Dummy usage just in case there is no datamember.

      TClass *R__cl  = ::ROOTDict::GenerateInitInstanceLocal((const ::Pythia8::InPair*)0x0)->GetClass();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "idA", &sobj->idA);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "idB", &sobj->idB);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "pdfA", &sobj->pdfA);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "pdfB", &sobj->pdfB);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "pdfSigma", &sobj->pdfSigma);
   }

}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_Pythia8cLcLInPair(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::Pythia8::InPair : new ::Pythia8::InPair;
   }
   static void *newArray_Pythia8cLcLInPair(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) ::Pythia8::InPair[nElements] : new ::Pythia8::InPair[nElements];
   }
   // Wrapper around operator delete
   static void delete_Pythia8cLcLInPair(void *p) {
      delete ((::Pythia8::InPair*)p);
   }
   static void deleteArray_Pythia8cLcLInPair(void *p) {
      delete [] ((::Pythia8::InPair*)p);
   }
   static void destruct_Pythia8cLcLInPair(void *p) {
      typedef ::Pythia8::InPair current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::Pythia8::InPair

//______________________________________________________________________________
namespace ROOTDict {
   void Pythia8cLcLAlphaStrong_ShowMembers(void *obj, TMemberInspector &R__insp)
   {
      // Inspect the data members of an object of class Pythia8::AlphaStrong.
      typedef ::ROOTShadow::Shadow::Pythia8::AlphaStrong ShadowClass;
      ShadowClass *sobj = (ShadowClass*)obj;
      if (sobj) { } // Dummy usage just in case there is no datamember.

      TClass *R__cl  = ::ROOTDict::GenerateInitInstanceLocal((const ::Pythia8::AlphaStrong*)0x0)->GetClass();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "isInit", &sobj->isInit);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "order", &sobj->order);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "nfmax", &sobj->nfmax);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Lambda3Save", &sobj->Lambda3Save);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Lambda4Save", &sobj->Lambda4Save);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Lambda5Save", &sobj->Lambda5Save);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Lambda6Save", &sobj->Lambda6Save);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Lambda3Save2", &sobj->Lambda3Save2);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Lambda4Save2", &sobj->Lambda4Save2);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Lambda5Save2", &sobj->Lambda5Save2);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Lambda6Save2", &sobj->Lambda6Save2);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "scale2Min", &sobj->scale2Min);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mc2", &sobj->mc2);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mb2", &sobj->mb2);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mt2", &sobj->mt2);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "useCMW", &sobj->useCMW);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "lastCallToFull", &sobj->lastCallToFull);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "valueRef", &sobj->valueRef);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "valueNow", &sobj->valueNow);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "scale2Now", &sobj->scale2Now);
   }

}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_Pythia8cLcLAlphaStrong(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::Pythia8::AlphaStrong : new ::Pythia8::AlphaStrong;
   }
   static void *newArray_Pythia8cLcLAlphaStrong(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) ::Pythia8::AlphaStrong[nElements] : new ::Pythia8::AlphaStrong[nElements];
   }
   // Wrapper around operator delete
   static void delete_Pythia8cLcLAlphaStrong(void *p) {
      delete ((::Pythia8::AlphaStrong*)p);
   }
   static void deleteArray_Pythia8cLcLAlphaStrong(void *p) {
      delete [] ((::Pythia8::AlphaStrong*)p);
   }
   static void destruct_Pythia8cLcLAlphaStrong(void *p) {
      typedef ::Pythia8::AlphaStrong current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::Pythia8::AlphaStrong

//______________________________________________________________________________
namespace ROOTDict {
   void Pythia8cLcLAlphaEM_ShowMembers(void *obj, TMemberInspector &R__insp)
   {
      // Inspect the data members of an object of class Pythia8::AlphaEM.
      typedef ::ROOTShadow::Shadow::Pythia8::AlphaEM ShadowClass;
      ShadowClass *sobj = (ShadowClass*)obj;
      if (sobj) { } // Dummy usage just in case there is no datamember.

      TClass *R__cl  = ::ROOTDict::GenerateInitInstanceLocal((const ::Pythia8::AlphaEM*)0x0)->GetClass();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "order", &sobj->order);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "alpEM0", &sobj->alpEM0);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "alpEMmZ", &sobj->alpEMmZ);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mZ2", &sobj->mZ2);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "bRun[5]", sobj->bRun);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "alpEMstep[5]", sobj->alpEMstep);
   }

}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_Pythia8cLcLAlphaEM(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::Pythia8::AlphaEM : new ::Pythia8::AlphaEM;
   }
   static void *newArray_Pythia8cLcLAlphaEM(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) ::Pythia8::AlphaEM[nElements] : new ::Pythia8::AlphaEM[nElements];
   }
   // Wrapper around operator delete
   static void delete_Pythia8cLcLAlphaEM(void *p) {
      delete ((::Pythia8::AlphaEM*)p);
   }
   static void deleteArray_Pythia8cLcLAlphaEM(void *p) {
      delete [] ((::Pythia8::AlphaEM*)p);
   }
   static void destruct_Pythia8cLcLAlphaEM(void *p) {
      typedef ::Pythia8::AlphaEM current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::Pythia8::AlphaEM

//______________________________________________________________________________
namespace ROOTDict {
   void Pythia8cLcLInfo_ShowMembers(void *obj, TMemberInspector &R__insp)
   {
      // Inspect the data members of an object of class Pythia8::Info.
      typedef ::ROOTShadow::Shadow::Pythia8::Info ShadowClass;
      ShadowClass *sobj = (ShadowClass*)obj;
      if (sobj) { } // Dummy usage just in case there is no datamember.

      TClass *R__cl  = ::ROOTDict::GenerateInitInstanceLocal((const ::Pythia8::Info*)0x0)->GetClass();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "LHEFversionSave", &sobj->LHEFversionSave);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "sigmaLHEFSave", (void*)&sobj->sigmaLHEFSave);
      R__insp.InspectMember("vector<double>", (void*)&sobj->sigmaLHEFSave, "sigmaLHEFSave.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*initrwgt", &sobj->initrwgt);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*generators", &sobj->generators);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*weightgroups", &sobj->weightgroups);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*init_weights", &sobj->init_weights);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*eventAttributes", &sobj->eventAttributes);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*weights_detailed", &sobj->weights_detailed);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*weights_compressed", &sobj->weights_compressed);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*scales", &sobj->scales);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*weights", &sobj->weights);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*rwgt", &sobj->rwgt);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "idASave", &sobj->idASave);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "idBSave", &sobj->idBSave);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "pzASave", &sobj->pzASave);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "eASave", &sobj->eASave);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mASave", &sobj->mASave);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "pzBSave", &sobj->pzBSave);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "eBSave", &sobj->eBSave);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mBSave", &sobj->mBSave);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "eCMSave", &sobj->eCMSave);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "sSave", &sobj->sSave);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "lowPTmin", &sobj->lowPTmin);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "nTry", &sobj->nTry);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "nSel", &sobj->nSel);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "nAcc", &sobj->nAcc);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "sigGen", &sobj->sigGen);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "sigErr", &sobj->sigErr);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "wtAccSum", &sobj->wtAccSum);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "procNameM", (void*)&sobj->procNameM);
      R__insp.InspectMember("map<int,string>", (void*)&sobj->procNameM, "procNameM.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "nTryM", (void*)&sobj->nTryM);
      R__insp.InspectMember("map<int,long>", (void*)&sobj->nTryM, "nTryM.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "nSelM", (void*)&sobj->nSelM);
      R__insp.InspectMember("map<int,long>", (void*)&sobj->nSelM, "nSelM.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "nAccM", (void*)&sobj->nAccM);
      R__insp.InspectMember("map<int,long>", (void*)&sobj->nAccM, "nAccM.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "sigGenM", (void*)&sobj->sigGenM);
      R__insp.InspectMember("map<int,double>", (void*)&sobj->sigGenM, "sigGenM.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "sigErrM", (void*)&sobj->sigErrM);
      R__insp.InspectMember("map<int,double>", (void*)&sobj->sigErrM, "sigErrM.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "lhaStrategySave", &sobj->lhaStrategySave);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "a0MPISave", &sobj->a0MPISave);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "isRes", &sobj->isRes);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "isDiffA", &sobj->isDiffA);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "isDiffB", &sobj->isDiffB);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "isDiffC", &sobj->isDiffC);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "isND", &sobj->isND);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "isLH", &sobj->isLH);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "hasSubSave[4]", sobj->hasSubSave);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "bIsSet", &sobj->bIsSet);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "evolIsSet", &sobj->evolIsSet);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "atEOF", &sobj->atEOF);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "isVal1", &sobj->isVal1);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "isVal2", &sobj->isVal2);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "hasHistorySave", &sobj->hasHistorySave);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "codeSave", &sobj->codeSave);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "codeSubSave[4]", sobj->codeSubSave);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "nFinalSave", &sobj->nFinalSave);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "nFinalSubSave[4]", sobj->nFinalSubSave);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "nTotal", &sobj->nTotal);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "id1Save[4]", sobj->id1Save);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "id2Save[4]", sobj->id2Save);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "id1pdfSave[4]", sobj->id1pdfSave);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "id2pdfSave[4]", sobj->id2pdfSave);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "nMPISave", &sobj->nMPISave);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "nISRSave", &sobj->nISRSave);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "nFSRinProcSave", &sobj->nFSRinProcSave);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "nFSRinResSave", &sobj->nFSRinResSave);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "x1Save[4]", sobj->x1Save);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "x2Save[4]", sobj->x2Save);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "x1pdfSave[4]", sobj->x1pdfSave);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "x2pdfSave[4]", sobj->x2pdfSave);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "pdf1Save[4]", sobj->pdf1Save);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "pdf2Save[4]", sobj->pdf2Save);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Q2FacSave[4]", sobj->Q2FacSave);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "alphaEMSave[4]", sobj->alphaEMSave);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "alphaSSave[4]", sobj->alphaSSave);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Q2RenSave[4]", sobj->Q2RenSave);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "scalupSave[4]", sobj->scalupSave);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "sH[4]", sobj->sH);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "tH[4]", sobj->tH);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "uH[4]", sobj->uH);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "pTH[4]", sobj->pTH);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "m3H[4]", sobj->m3H);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "m4H[4]", sobj->m4H);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "thetaH[4]", sobj->thetaH);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "phiH[4]", sobj->phiH);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "weightSave", &sobj->weightSave);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "bMPISave", &sobj->bMPISave);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "enhanceMPISave", &sobj->enhanceMPISave);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "pTmaxMPISave", &sobj->pTmaxMPISave);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "pTmaxISRSave", &sobj->pTmaxISRSave);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "pTmaxFSRSave", &sobj->pTmaxFSRSave);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "pTnowSave", &sobj->pTnowSave);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "zNowISRSave", &sobj->zNowISRSave);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "pT2NowISRSave", &sobj->pT2NowISRSave);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "nameSave", (void*)&sobj->nameSave);
      R__insp.InspectMember("string", (void*)&sobj->nameSave, "nameSave.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "nameSubSave[4]", sobj->nameSubSave);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "codeMPISave", (void*)&sobj->codeMPISave);
      R__insp.InspectMember("vector<int>", (void*)&sobj->codeMPISave, "codeMPISave.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "iAMPISave", (void*)&sobj->iAMPISave);
      R__insp.InspectMember("vector<int>", (void*)&sobj->iAMPISave, "iAMPISave.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "iBMPISave", (void*)&sobj->iBMPISave);
      R__insp.InspectMember("vector<int>", (void*)&sobj->iBMPISave, "iBMPISave.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "pTMPISave", (void*)&sobj->pTMPISave);
      R__insp.InspectMember("vector<double>", (void*)&sobj->pTMPISave, "pTMPISave.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "eMPISave", (void*)&sobj->eMPISave);
      R__insp.InspectMember("vector<double>", (void*)&sobj->eMPISave, "eMPISave.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "counters[50]", sobj->counters);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "messages", (void*)&sobj->messages);
      R__insp.InspectMember("map<string,int>", (void*)&sobj->messages, "messages.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "headers", (void*)&sobj->headers);
      R__insp.InspectMember("map<string,string>", (void*)&sobj->headers, "headers.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "plugins", (void*)&sobj->plugins);
      R__insp.InspectMember("map<string,pair<void*,int> >", (void*)&sobj->plugins, "plugins.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "weightCKKWLSave", &sobj->weightCKKWLSave);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "weightFIRSTSave", &sobj->weightFIRSTSave);
   }

}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_Pythia8cLcLInfo(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::Pythia8::Info : new ::Pythia8::Info;
   }
   static void *newArray_Pythia8cLcLInfo(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) ::Pythia8::Info[nElements] : new ::Pythia8::Info[nElements];
   }
   // Wrapper around operator delete
   static void delete_Pythia8cLcLInfo(void *p) {
      delete ((::Pythia8::Info*)p);
   }
   static void deleteArray_Pythia8cLcLInfo(void *p) {
      delete [] ((::Pythia8::Info*)p);
   }
   static void destruct_Pythia8cLcLInfo(void *p) {
      typedef ::Pythia8::Info current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::Pythia8::Info

//______________________________________________________________________________
namespace ROOTDict {
   void Pythia8cLcLRndm_ShowMembers(void *obj, TMemberInspector &R__insp)
   {
      // Inspect the data members of an object of class Pythia8::Rndm.
      typedef ::ROOTShadow::Shadow::Pythia8::Rndm ShadowClass;
      ShadowClass *sobj = (ShadowClass*)obj;
      if (sobj) { } // Dummy usage just in case there is no datamember.

      TClass *R__cl  = ::ROOTDict::GenerateInitInstanceLocal((const ::Pythia8::Rndm*)0x0)->GetClass();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "initRndm", &sobj->initRndm);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "i97", &sobj->i97);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "j97", &sobj->j97);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "seedSave", &sobj->seedSave);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "sequence", &sobj->sequence);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "u[97]", sobj->u);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "c", &sobj->c);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "cd", &sobj->cd);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "cm", &sobj->cm);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "useExternalRndm", &sobj->useExternalRndm);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*rndmEngPtr", &sobj->rndmEngPtr);
   }

}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_Pythia8cLcLRndm(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::Pythia8::Rndm : new ::Pythia8::Rndm;
   }
   static void *newArray_Pythia8cLcLRndm(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) ::Pythia8::Rndm[nElements] : new ::Pythia8::Rndm[nElements];
   }
   // Wrapper around operator delete
   static void delete_Pythia8cLcLRndm(void *p) {
      delete ((::Pythia8::Rndm*)p);
   }
   static void deleteArray_Pythia8cLcLRndm(void *p) {
      delete [] ((::Pythia8::Rndm*)p);
   }
   static void destruct_Pythia8cLcLRndm(void *p) {
      typedef ::Pythia8::Rndm current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::Pythia8::Rndm

//______________________________________________________________________________
namespace ROOTDict {
   void Pythia8cLcLRndmEngine_ShowMembers(void *obj, TMemberInspector &R__insp)
   {
      // Inspect the data members of an object of class Pythia8::RndmEngine.
      typedef ::ROOTShadow::Shadow::Pythia8::RndmEngine ShadowClass;
      ShadowClass *sobj = (ShadowClass*)obj;
      if (sobj) { } // Dummy usage just in case there is no datamember.

      TClass *R__cl  = ::ROOTDict::GenerateInitInstanceLocal((const ::Pythia8::RndmEngine*)0x0)->GetClass();
      if (R__cl || R__insp.IsA()) { }
   }

}

namespace ROOTDict {
   // Wrapper around operator delete
   static void delete_Pythia8cLcLRndmEngine(void *p) {
      delete ((::Pythia8::RndmEngine*)p);
   }
   static void deleteArray_Pythia8cLcLRndmEngine(void *p) {
      delete [] ((::Pythia8::RndmEngine*)p);
   }
   static void destruct_Pythia8cLcLRndmEngine(void *p) {
      typedef ::Pythia8::RndmEngine current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::Pythia8::RndmEngine

//______________________________________________________________________________
namespace ROOTDict {
   void Pythia8cLcLSettings_ShowMembers(void *obj, TMemberInspector &R__insp)
   {
      // Inspect the data members of an object of class Pythia8::Settings.
      typedef ::ROOTShadow::Shadow::Pythia8::Settings ShadowClass;
      ShadowClass *sobj = (ShadowClass*)obj;
      if (sobj) { } // Dummy usage just in case there is no datamember.

      TClass *R__cl  = ::ROOTDict::GenerateInitInstanceLocal((const ::Pythia8::Settings*)0x0)->GetClass();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*infoPtr", &sobj->infoPtr);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "flags", (void*)&sobj->flags);
      R__insp.InspectMember("map<string,Flag>", (void*)&sobj->flags, "flags.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "modes", (void*)&sobj->modes);
      R__insp.InspectMember("map<string,Mode>", (void*)&sobj->modes, "modes.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "parms", (void*)&sobj->parms);
      R__insp.InspectMember("map<string,Parm>", (void*)&sobj->parms, "parms.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "words", (void*)&sobj->words);
      R__insp.InspectMember("map<string,Word>", (void*)&sobj->words, "words.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fvecs", (void*)&sobj->fvecs);
      R__insp.InspectMember("map<string,FVec>", (void*)&sobj->fvecs, "fvecs.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mvecs", (void*)&sobj->mvecs);
      R__insp.InspectMember("map<string,MVec>", (void*)&sobj->mvecs, "mvecs.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "pvecs", (void*)&sobj->pvecs);
      R__insp.InspectMember("map<string,PVec>", (void*)&sobj->pvecs, "pvecs.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "isInit", &sobj->isInit);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "readingFailedSave", &sobj->readingFailedSave);
   }

}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_Pythia8cLcLSettings(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::Pythia8::Settings : new ::Pythia8::Settings;
   }
   static void *newArray_Pythia8cLcLSettings(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) ::Pythia8::Settings[nElements] : new ::Pythia8::Settings[nElements];
   }
   // Wrapper around operator delete
   static void delete_Pythia8cLcLSettings(void *p) {
      delete ((::Pythia8::Settings*)p);
   }
   static void deleteArray_Pythia8cLcLSettings(void *p) {
      delete [] ((::Pythia8::Settings*)p);
   }
   static void destruct_Pythia8cLcLSettings(void *p) {
      typedef ::Pythia8::Settings current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::Pythia8::Settings

//______________________________________________________________________________
namespace ROOTDict {
   void Pythia8cLcLResonanceTop_ShowMembers(void *obj, TMemberInspector &R__insp)
   {
      // Inspect the data members of an object of class Pythia8::ResonanceTop.
      typedef ::ROOTShadow::Shadow::Pythia8::ResonanceTop ShadowClass;
      ShadowClass *sobj = (ShadowClass*)obj;
      if (sobj) { } // Dummy usage just in case there is no datamember.

      TClass *R__cl  = ::ROOTDict::GenerateInitInstanceLocal((const ::Pythia8::ResonanceTop*)0x0)->GetClass();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "thetaWRat", &sobj->thetaWRat);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "m2W", &sobj->m2W);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "tanBeta", &sobj->tanBeta);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "tan2Beta", &sobj->tan2Beta);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mbRun", &sobj->mbRun);
      R__insp.GenericShowMembers("Pythia8::ResonanceWidths", ( ::Pythia8::ResonanceWidths * )( (::Pythia8::ResonanceTop*) obj ), false);
   }

}

namespace ROOTDict {
   // Wrapper around operator delete
   static void delete_Pythia8cLcLResonanceTop(void *p) {
      delete ((::Pythia8::ResonanceTop*)p);
   }
   static void deleteArray_Pythia8cLcLResonanceTop(void *p) {
      delete [] ((::Pythia8::ResonanceTop*)p);
   }
   static void destruct_Pythia8cLcLResonanceTop(void *p) {
      typedef ::Pythia8::ResonanceTop current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::Pythia8::ResonanceTop

//______________________________________________________________________________
namespace ROOTDict {
   void Pythia8cLcLResonanceGeneric_ShowMembers(void *obj, TMemberInspector &R__insp)
   {
      // Inspect the data members of an object of class Pythia8::ResonanceGeneric.
      typedef ::ROOTShadow::Shadow::Pythia8::ResonanceGeneric ShadowClass;
      ShadowClass *sobj = (ShadowClass*)obj;
      if (sobj) { } // Dummy usage just in case there is no datamember.

      TClass *R__cl  = ::ROOTDict::GenerateInitInstanceLocal((const ::Pythia8::ResonanceGeneric*)0x0)->GetClass();
      if (R__cl || R__insp.IsA()) { }
      R__insp.GenericShowMembers("Pythia8::ResonanceWidths", ( ::Pythia8::ResonanceWidths * )( (::Pythia8::ResonanceGeneric*) obj ), false);
   }

}

namespace ROOTDict {
   // Wrapper around operator delete
   static void delete_Pythia8cLcLResonanceGeneric(void *p) {
      delete ((::Pythia8::ResonanceGeneric*)p);
   }
   static void deleteArray_Pythia8cLcLResonanceGeneric(void *p) {
      delete [] ((::Pythia8::ResonanceGeneric*)p);
   }
   static void destruct_Pythia8cLcLResonanceGeneric(void *p) {
      typedef ::Pythia8::ResonanceGeneric current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::Pythia8::ResonanceGeneric

//______________________________________________________________________________
namespace ROOTDict {
   void Pythia8cLcLResonanceGmZ_ShowMembers(void *obj, TMemberInspector &R__insp)
   {
      // Inspect the data members of an object of class Pythia8::ResonanceGmZ.
      typedef ::ROOTShadow::Shadow::Pythia8::ResonanceGmZ ShadowClass;
      ShadowClass *sobj = (ShadowClass*)obj;
      if (sobj) { } // Dummy usage just in case there is no datamember.

      TClass *R__cl  = ::ROOTDict::GenerateInitInstanceLocal((const ::Pythia8::ResonanceGmZ*)0x0)->GetClass();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "gmZmode", &sobj->gmZmode);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "thetaWRat", &sobj->thetaWRat);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "ei2", &sobj->ei2);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "eivi", &sobj->eivi);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "vi2ai2", &sobj->vi2ai2);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "gamNorm", &sobj->gamNorm);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "intNorm", &sobj->intNorm);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "resNorm", &sobj->resNorm);
      R__insp.GenericShowMembers("Pythia8::ResonanceWidths", ( ::Pythia8::ResonanceWidths * )( (::Pythia8::ResonanceGmZ*) obj ), false);
   }

}

namespace ROOTDict {
   // Wrapper around operator delete
   static void delete_Pythia8cLcLResonanceGmZ(void *p) {
      delete ((::Pythia8::ResonanceGmZ*)p);
   }
   static void deleteArray_Pythia8cLcLResonanceGmZ(void *p) {
      delete [] ((::Pythia8::ResonanceGmZ*)p);
   }
   static void destruct_Pythia8cLcLResonanceGmZ(void *p) {
      typedef ::Pythia8::ResonanceGmZ current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::Pythia8::ResonanceGmZ

//______________________________________________________________________________
namespace ROOTDict {
   void Pythia8cLcLResonanceW_ShowMembers(void *obj, TMemberInspector &R__insp)
   {
      // Inspect the data members of an object of class Pythia8::ResonanceW.
      typedef ::ROOTShadow::Shadow::Pythia8::ResonanceW ShadowClass;
      ShadowClass *sobj = (ShadowClass*)obj;
      if (sobj) { } // Dummy usage just in case there is no datamember.

      TClass *R__cl  = ::ROOTDict::GenerateInitInstanceLocal((const ::Pythia8::ResonanceW*)0x0)->GetClass();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "thetaWRat", &sobj->thetaWRat);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "alpEM", &sobj->alpEM);
      R__insp.GenericShowMembers("Pythia8::ResonanceWidths", ( ::Pythia8::ResonanceWidths * )( (::Pythia8::ResonanceW*) obj ), false);
   }

}

namespace ROOTDict {
   // Wrapper around operator delete
   static void delete_Pythia8cLcLResonanceW(void *p) {
      delete ((::Pythia8::ResonanceW*)p);
   }
   static void deleteArray_Pythia8cLcLResonanceW(void *p) {
      delete [] ((::Pythia8::ResonanceW*)p);
   }
   static void destruct_Pythia8cLcLResonanceW(void *p) {
      typedef ::Pythia8::ResonanceW current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::Pythia8::ResonanceW

//______________________________________________________________________________
namespace ROOTDict {
   void Pythia8cLcLResonanceFour_ShowMembers(void *obj, TMemberInspector &R__insp)
   {
      // Inspect the data members of an object of class Pythia8::ResonanceFour.
      typedef ::ROOTShadow::Shadow::Pythia8::ResonanceFour ShadowClass;
      ShadowClass *sobj = (ShadowClass*)obj;
      if (sobj) { } // Dummy usage just in case there is no datamember.

      TClass *R__cl  = ::ROOTDict::GenerateInitInstanceLocal((const ::Pythia8::ResonanceFour*)0x0)->GetClass();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "thetaWRat", &sobj->thetaWRat);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "m2W", &sobj->m2W);
      R__insp.GenericShowMembers("Pythia8::ResonanceWidths", ( ::Pythia8::ResonanceWidths * )( (::Pythia8::ResonanceFour*) obj ), false);
   }

}

namespace ROOTDict {
   // Wrapper around operator delete
   static void delete_Pythia8cLcLResonanceFour(void *p) {
      delete ((::Pythia8::ResonanceFour*)p);
   }
   static void deleteArray_Pythia8cLcLResonanceFour(void *p) {
      delete [] ((::Pythia8::ResonanceFour*)p);
   }
   static void destruct_Pythia8cLcLResonanceFour(void *p) {
      typedef ::Pythia8::ResonanceFour current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::Pythia8::ResonanceFour

//______________________________________________________________________________
namespace ROOTDict {
   void Pythia8cLcLResonanceH_ShowMembers(void *obj, TMemberInspector &R__insp)
   {
      // Inspect the data members of an object of class Pythia8::ResonanceH.
      typedef ::ROOTShadow::Shadow::Pythia8::ResonanceH ShadowClass;
      ShadowClass *sobj = (ShadowClass*)obj;
      if (sobj) { } // Dummy usage just in case there is no datamember.

      TClass *R__cl  = ::ROOTDict::GenerateInitInstanceLocal((const ::Pythia8::ResonanceH*)0x0)->GetClass();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "higgsType", &sobj->higgsType);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "useCubicWidth", &sobj->useCubicWidth);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "useRunLoopMass", &sobj->useRunLoopMass);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "useNLOWidths", &sobj->useNLOWidths);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "sin2tW", &sobj->sin2tW);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "cos2tW", &sobj->cos2tW);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mT", &sobj->mT);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mZ", &sobj->mZ);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mW", &sobj->mW);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mHchg", &sobj->mHchg);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "GammaT", &sobj->GammaT);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "GammaZ", &sobj->GammaZ);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "GammaW", &sobj->GammaW);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "rescAlpS", &sobj->rescAlpS);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "rescColQ", &sobj->rescColQ);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "coup2d", &sobj->coup2d);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "coup2u", &sobj->coup2u);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "coup2l", &sobj->coup2l);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "coup2Z", &sobj->coup2Z);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "coup2W", &sobj->coup2W);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "coup2Hchg", &sobj->coup2Hchg);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "coup2H1H1", &sobj->coup2H1H1);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "coup2A3A3", &sobj->coup2A3A3);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "coup2H1Z", &sobj->coup2H1Z);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "coup2A3Z", &sobj->coup2A3Z);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "coup2A3H1", &sobj->coup2A3H1);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "coup2HchgW", &sobj->coup2HchgW);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mLowT", &sobj->mLowT);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mStepT", &sobj->mStepT);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mLowZ", &sobj->mLowZ);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mStepZ", &sobj->mStepZ);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mLowW", &sobj->mLowW);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mStepW", &sobj->mStepW);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "kinFacT[101]", sobj->kinFacT);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "kinFacZ[101]", sobj->kinFacZ);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "kinFacW[101]", sobj->kinFacW);
      R__insp.GenericShowMembers("Pythia8::ResonanceWidths", ( ::Pythia8::ResonanceWidths * )( (::Pythia8::ResonanceH*) obj ), false);
   }

}

namespace ROOTDict {
   // Wrapper around operator delete
   static void delete_Pythia8cLcLResonanceH(void *p) {
      delete ((::Pythia8::ResonanceH*)p);
   }
   static void deleteArray_Pythia8cLcLResonanceH(void *p) {
      delete [] ((::Pythia8::ResonanceH*)p);
   }
   static void destruct_Pythia8cLcLResonanceH(void *p) {
      typedef ::Pythia8::ResonanceH current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::Pythia8::ResonanceH

//______________________________________________________________________________
namespace ROOTDict {
   void Pythia8cLcLResonanceHchg_ShowMembers(void *obj, TMemberInspector &R__insp)
   {
      // Inspect the data members of an object of class Pythia8::ResonanceHchg.
      typedef ::ROOTShadow::Shadow::Pythia8::ResonanceHchg ShadowClass;
      ShadowClass *sobj = (ShadowClass*)obj;
      if (sobj) { } // Dummy usage just in case there is no datamember.

      TClass *R__cl  = ::ROOTDict::GenerateInitInstanceLocal((const ::Pythia8::ResonanceHchg*)0x0)->GetClass();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "useCubicWidth", &sobj->useCubicWidth);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "thetaWRat", &sobj->thetaWRat);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mW", &sobj->mW);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "tanBeta", &sobj->tanBeta);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "tan2Beta", &sobj->tan2Beta);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "coup2H1W", &sobj->coup2H1W);
      R__insp.GenericShowMembers("Pythia8::ResonanceWidths", ( ::Pythia8::ResonanceWidths * )( (::Pythia8::ResonanceHchg*) obj ), false);
   }

}

namespace ROOTDict {
   // Wrapper around operator delete
   static void delete_Pythia8cLcLResonanceHchg(void *p) {
      delete ((::Pythia8::ResonanceHchg*)p);
   }
   static void deleteArray_Pythia8cLcLResonanceHchg(void *p) {
      delete [] ((::Pythia8::ResonanceHchg*)p);
   }
   static void destruct_Pythia8cLcLResonanceHchg(void *p) {
      typedef ::Pythia8::ResonanceHchg current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::Pythia8::ResonanceHchg

//______________________________________________________________________________
namespace ROOTDict {
   void Pythia8cLcLResonanceZprime_ShowMembers(void *obj, TMemberInspector &R__insp)
   {
      // Inspect the data members of an object of class Pythia8::ResonanceZprime.
      typedef ::ROOTShadow::Shadow::Pythia8::ResonanceZprime ShadowClass;
      ShadowClass *sobj = (ShadowClass*)obj;
      if (sobj) { } // Dummy usage just in case there is no datamember.

      TClass *R__cl  = ::ROOTDict::GenerateInitInstanceLocal((const ::Pythia8::ResonanceZprime*)0x0)->GetClass();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "gmZmode", &sobj->gmZmode);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "maxZpGen", &sobj->maxZpGen);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "sin2tW", &sobj->sin2tW);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "cos2tW", &sobj->cos2tW);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "thetaWRat", &sobj->thetaWRat);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mZ", &sobj->mZ);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "GammaZ", &sobj->GammaZ);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "m2Z", &sobj->m2Z);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "GamMRatZ", &sobj->GamMRatZ);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "afZp[20]", sobj->afZp);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "vfZp[20]", sobj->vfZp);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "coupZpWW", &sobj->coupZpWW);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "ei2", &sobj->ei2);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "eivi", &sobj->eivi);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "vai2", &sobj->vai2);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "eivpi", &sobj->eivpi);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "vaivapi", &sobj->vaivapi);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "vapi2", &sobj->vapi2);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "gamNorm", &sobj->gamNorm);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "gamZNorm", &sobj->gamZNorm);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "ZNorm", &sobj->ZNorm);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "gamZpNorm", &sobj->gamZpNorm);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "ZZpNorm", &sobj->ZZpNorm);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "ZpNorm", &sobj->ZpNorm);
      R__insp.GenericShowMembers("Pythia8::ResonanceWidths", ( ::Pythia8::ResonanceWidths * )( (::Pythia8::ResonanceZprime*) obj ), false);
   }

}

namespace ROOTDict {
   // Wrapper around operator delete
   static void delete_Pythia8cLcLResonanceZprime(void *p) {
      delete ((::Pythia8::ResonanceZprime*)p);
   }
   static void deleteArray_Pythia8cLcLResonanceZprime(void *p) {
      delete [] ((::Pythia8::ResonanceZprime*)p);
   }
   static void destruct_Pythia8cLcLResonanceZprime(void *p) {
      typedef ::Pythia8::ResonanceZprime current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::Pythia8::ResonanceZprime

//______________________________________________________________________________
namespace ROOTDict {
   void Pythia8cLcLResonanceWprime_ShowMembers(void *obj, TMemberInspector &R__insp)
   {
      // Inspect the data members of an object of class Pythia8::ResonanceWprime.
      typedef ::ROOTShadow::Shadow::Pythia8::ResonanceWprime ShadowClass;
      ShadowClass *sobj = (ShadowClass*)obj;
      if (sobj) { } // Dummy usage just in case there is no datamember.

      TClass *R__cl  = ::ROOTDict::GenerateInitInstanceLocal((const ::Pythia8::ResonanceWprime*)0x0)->GetClass();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "thetaWRat", &sobj->thetaWRat);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "cos2tW", &sobj->cos2tW);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "alpEM", &sobj->alpEM);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "aqWp", &sobj->aqWp);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "vqWp", &sobj->vqWp);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "alWp", &sobj->alWp);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "vlWp", &sobj->vlWp);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "coupWpWZ", &sobj->coupWpWZ);
      R__insp.GenericShowMembers("Pythia8::ResonanceWidths", ( ::Pythia8::ResonanceWidths * )( (::Pythia8::ResonanceWprime*) obj ), false);
   }

}

namespace ROOTDict {
   // Wrapper around operator delete
   static void delete_Pythia8cLcLResonanceWprime(void *p) {
      delete ((::Pythia8::ResonanceWprime*)p);
   }
   static void deleteArray_Pythia8cLcLResonanceWprime(void *p) {
      delete [] ((::Pythia8::ResonanceWprime*)p);
   }
   static void destruct_Pythia8cLcLResonanceWprime(void *p) {
      typedef ::Pythia8::ResonanceWprime current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::Pythia8::ResonanceWprime

//______________________________________________________________________________
namespace ROOTDict {
   void Pythia8cLcLResonanceRhorizontal_ShowMembers(void *obj, TMemberInspector &R__insp)
   {
      // Inspect the data members of an object of class Pythia8::ResonanceRhorizontal.
      typedef ::ROOTShadow::Shadow::Pythia8::ResonanceRhorizontal ShadowClass;
      ShadowClass *sobj = (ShadowClass*)obj;
      if (sobj) { } // Dummy usage just in case there is no datamember.

      TClass *R__cl  = ::ROOTDict::GenerateInitInstanceLocal((const ::Pythia8::ResonanceRhorizontal*)0x0)->GetClass();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "thetaWRat", &sobj->thetaWRat);
      R__insp.GenericShowMembers("Pythia8::ResonanceWidths", ( ::Pythia8::ResonanceWidths * )( (::Pythia8::ResonanceRhorizontal*) obj ), false);
   }

}

namespace ROOTDict {
   // Wrapper around operator delete
   static void delete_Pythia8cLcLResonanceRhorizontal(void *p) {
      delete ((::Pythia8::ResonanceRhorizontal*)p);
   }
   static void deleteArray_Pythia8cLcLResonanceRhorizontal(void *p) {
      delete [] ((::Pythia8::ResonanceRhorizontal*)p);
   }
   static void destruct_Pythia8cLcLResonanceRhorizontal(void *p) {
      typedef ::Pythia8::ResonanceRhorizontal current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::Pythia8::ResonanceRhorizontal

//______________________________________________________________________________
namespace ROOTDict {
   void Pythia8cLcLResonanceExcited_ShowMembers(void *obj, TMemberInspector &R__insp)
   {
      // Inspect the data members of an object of class Pythia8::ResonanceExcited.
      typedef ::ROOTShadow::Shadow::Pythia8::ResonanceExcited ShadowClass;
      ShadowClass *sobj = (ShadowClass*)obj;
      if (sobj) { } // Dummy usage just in case there is no datamember.

      TClass *R__cl  = ::ROOTDict::GenerateInitInstanceLocal((const ::Pythia8::ResonanceExcited*)0x0)->GetClass();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Lambda", &sobj->Lambda);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "coupF", &sobj->coupF);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "coupFprime", &sobj->coupFprime);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "coupFcol", &sobj->coupFcol);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "sin2tW", &sobj->sin2tW);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "cos2tW", &sobj->cos2tW);
      R__insp.GenericShowMembers("Pythia8::ResonanceWidths", ( ::Pythia8::ResonanceWidths * )( (::Pythia8::ResonanceExcited*) obj ), false);
   }

}

namespace ROOTDict {
   // Wrapper around operator delete
   static void delete_Pythia8cLcLResonanceExcited(void *p) {
      delete ((::Pythia8::ResonanceExcited*)p);
   }
   static void deleteArray_Pythia8cLcLResonanceExcited(void *p) {
      delete [] ((::Pythia8::ResonanceExcited*)p);
   }
   static void destruct_Pythia8cLcLResonanceExcited(void *p) {
      typedef ::Pythia8::ResonanceExcited current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::Pythia8::ResonanceExcited

//______________________________________________________________________________
namespace ROOTDict {
   void Pythia8cLcLResonanceGraviton_ShowMembers(void *obj, TMemberInspector &R__insp)
   {
      // Inspect the data members of an object of class Pythia8::ResonanceGraviton.
      typedef ::ROOTShadow::Shadow::Pythia8::ResonanceGraviton ShadowClass;
      ShadowClass *sobj = (ShadowClass*)obj;
      if (sobj) { } // Dummy usage just in case there is no datamember.

      TClass *R__cl  = ::ROOTDict::GenerateInitInstanceLocal((const ::Pythia8::ResonanceGraviton*)0x0)->GetClass();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "eDsmbulk", &sobj->eDsmbulk);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "eDvlvl", &sobj->eDvlvl);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "kappaMG", &sobj->kappaMG);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "eDcoupling[27]", sobj->eDcoupling);
      R__insp.GenericShowMembers("Pythia8::ResonanceWidths", ( ::Pythia8::ResonanceWidths * )( (::Pythia8::ResonanceGraviton*) obj ), false);
   }

}

namespace ROOTDict {
   // Wrapper around operator delete
   static void delete_Pythia8cLcLResonanceGraviton(void *p) {
      delete ((::Pythia8::ResonanceGraviton*)p);
   }
   static void deleteArray_Pythia8cLcLResonanceGraviton(void *p) {
      delete [] ((::Pythia8::ResonanceGraviton*)p);
   }
   static void destruct_Pythia8cLcLResonanceGraviton(void *p) {
      typedef ::Pythia8::ResonanceGraviton current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::Pythia8::ResonanceGraviton

//______________________________________________________________________________
namespace ROOTDict {
   void Pythia8cLcLResonanceLeptoquark_ShowMembers(void *obj, TMemberInspector &R__insp)
   {
      // Inspect the data members of an object of class Pythia8::ResonanceLeptoquark.
      typedef ::ROOTShadow::Shadow::Pythia8::ResonanceLeptoquark ShadowClass;
      ShadowClass *sobj = (ShadowClass*)obj;
      if (sobj) { } // Dummy usage just in case there is no datamember.

      TClass *R__cl  = ::ROOTDict::GenerateInitInstanceLocal((const ::Pythia8::ResonanceLeptoquark*)0x0)->GetClass();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "kCoup", &sobj->kCoup);
      R__insp.GenericShowMembers("Pythia8::ResonanceWidths", ( ::Pythia8::ResonanceWidths * )( (::Pythia8::ResonanceLeptoquark*) obj ), false);
   }

}

namespace ROOTDict {
   // Wrapper around operator delete
   static void delete_Pythia8cLcLResonanceLeptoquark(void *p) {
      delete ((::Pythia8::ResonanceLeptoquark*)p);
   }
   static void deleteArray_Pythia8cLcLResonanceLeptoquark(void *p) {
      delete [] ((::Pythia8::ResonanceLeptoquark*)p);
   }
   static void destruct_Pythia8cLcLResonanceLeptoquark(void *p) {
      typedef ::Pythia8::ResonanceLeptoquark current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::Pythia8::ResonanceLeptoquark

//______________________________________________________________________________
namespace ROOTDict {
   void Pythia8cLcLResonanceNuRight_ShowMembers(void *obj, TMemberInspector &R__insp)
   {
      // Inspect the data members of an object of class Pythia8::ResonanceNuRight.
      typedef ::ROOTShadow::Shadow::Pythia8::ResonanceNuRight ShadowClass;
      ShadowClass *sobj = (ShadowClass*)obj;
      if (sobj) { } // Dummy usage just in case there is no datamember.

      TClass *R__cl  = ::ROOTDict::GenerateInitInstanceLocal((const ::Pythia8::ResonanceNuRight*)0x0)->GetClass();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "thetaWRat", &sobj->thetaWRat);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mWR", &sobj->mWR);
      R__insp.GenericShowMembers("Pythia8::ResonanceWidths", ( ::Pythia8::ResonanceWidths * )( (::Pythia8::ResonanceNuRight*) obj ), false);
   }

}

namespace ROOTDict {
   // Wrapper around operator delete
   static void delete_Pythia8cLcLResonanceNuRight(void *p) {
      delete ((::Pythia8::ResonanceNuRight*)p);
   }
   static void deleteArray_Pythia8cLcLResonanceNuRight(void *p) {
      delete [] ((::Pythia8::ResonanceNuRight*)p);
   }
   static void destruct_Pythia8cLcLResonanceNuRight(void *p) {
      typedef ::Pythia8::ResonanceNuRight current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::Pythia8::ResonanceNuRight

//______________________________________________________________________________
namespace ROOTDict {
   void Pythia8cLcLResonanceZRight_ShowMembers(void *obj, TMemberInspector &R__insp)
   {
      // Inspect the data members of an object of class Pythia8::ResonanceZRight.
      typedef ::ROOTShadow::Shadow::Pythia8::ResonanceZRight ShadowClass;
      ShadowClass *sobj = (ShadowClass*)obj;
      if (sobj) { } // Dummy usage just in case there is no datamember.

      TClass *R__cl  = ::ROOTDict::GenerateInitInstanceLocal((const ::Pythia8::ResonanceZRight*)0x0)->GetClass();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "sin2tW", &sobj->sin2tW);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "thetaWRat", &sobj->thetaWRat);
      R__insp.GenericShowMembers("Pythia8::ResonanceWidths", ( ::Pythia8::ResonanceWidths * )( (::Pythia8::ResonanceZRight*) obj ), false);
   }

}

namespace ROOTDict {
   // Wrapper around operator delete
   static void delete_Pythia8cLcLResonanceZRight(void *p) {
      delete ((::Pythia8::ResonanceZRight*)p);
   }
   static void deleteArray_Pythia8cLcLResonanceZRight(void *p) {
      delete [] ((::Pythia8::ResonanceZRight*)p);
   }
   static void destruct_Pythia8cLcLResonanceZRight(void *p) {
      typedef ::Pythia8::ResonanceZRight current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::Pythia8::ResonanceZRight

//______________________________________________________________________________
namespace ROOTDict {
   void Pythia8cLcLResonanceWRight_ShowMembers(void *obj, TMemberInspector &R__insp)
   {
      // Inspect the data members of an object of class Pythia8::ResonanceWRight.
      typedef ::ROOTShadow::Shadow::Pythia8::ResonanceWRight ShadowClass;
      ShadowClass *sobj = (ShadowClass*)obj;
      if (sobj) { } // Dummy usage just in case there is no datamember.

      TClass *R__cl  = ::ROOTDict::GenerateInitInstanceLocal((const ::Pythia8::ResonanceWRight*)0x0)->GetClass();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "thetaWRat", &sobj->thetaWRat);
      R__insp.GenericShowMembers("Pythia8::ResonanceWidths", ( ::Pythia8::ResonanceWidths * )( (::Pythia8::ResonanceWRight*) obj ), false);
   }

}

namespace ROOTDict {
   // Wrapper around operator delete
   static void delete_Pythia8cLcLResonanceWRight(void *p) {
      delete ((::Pythia8::ResonanceWRight*)p);
   }
   static void deleteArray_Pythia8cLcLResonanceWRight(void *p) {
      delete [] ((::Pythia8::ResonanceWRight*)p);
   }
   static void destruct_Pythia8cLcLResonanceWRight(void *p) {
      typedef ::Pythia8::ResonanceWRight current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::Pythia8::ResonanceWRight

//______________________________________________________________________________
namespace ROOTDict {
   void Pythia8cLcLResonanceHchgchgLeft_ShowMembers(void *obj, TMemberInspector &R__insp)
   {
      // Inspect the data members of an object of class Pythia8::ResonanceHchgchgLeft.
      typedef ::ROOTShadow::Shadow::Pythia8::ResonanceHchgchgLeft ShadowClass;
      ShadowClass *sobj = (ShadowClass*)obj;
      if (sobj) { } // Dummy usage just in case there is no datamember.

      TClass *R__cl  = ::ROOTDict::GenerateInitInstanceLocal((const ::Pythia8::ResonanceHchgchgLeft*)0x0)->GetClass();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "yukawa[4][4]", sobj->yukawa);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "gL", &sobj->gL);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "vL", &sobj->vL);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mW", &sobj->mW);
      R__insp.GenericShowMembers("Pythia8::ResonanceWidths", ( ::Pythia8::ResonanceWidths * )( (::Pythia8::ResonanceHchgchgLeft*) obj ), false);
   }

}

namespace ROOTDict {
   // Wrapper around operator delete
   static void delete_Pythia8cLcLResonanceHchgchgLeft(void *p) {
      delete ((::Pythia8::ResonanceHchgchgLeft*)p);
   }
   static void deleteArray_Pythia8cLcLResonanceHchgchgLeft(void *p) {
      delete [] ((::Pythia8::ResonanceHchgchgLeft*)p);
   }
   static void destruct_Pythia8cLcLResonanceHchgchgLeft(void *p) {
      typedef ::Pythia8::ResonanceHchgchgLeft current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::Pythia8::ResonanceHchgchgLeft

//______________________________________________________________________________
namespace ROOTDict {
   void Pythia8cLcLResonanceHchgchgRight_ShowMembers(void *obj, TMemberInspector &R__insp)
   {
      // Inspect the data members of an object of class Pythia8::ResonanceHchgchgRight.
      typedef ::ROOTShadow::Shadow::Pythia8::ResonanceHchgchgRight ShadowClass;
      ShadowClass *sobj = (ShadowClass*)obj;
      if (sobj) { } // Dummy usage just in case there is no datamember.

      TClass *R__cl  = ::ROOTDict::GenerateInitInstanceLocal((const ::Pythia8::ResonanceHchgchgRight*)0x0)->GetClass();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "idWR", &sobj->idWR);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "yukawa[4][4]", sobj->yukawa);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "gR", &sobj->gR);
      R__insp.GenericShowMembers("Pythia8::ResonanceWidths", ( ::Pythia8::ResonanceWidths * )( (::Pythia8::ResonanceHchgchgRight*) obj ), false);
   }

}

namespace ROOTDict {
   // Wrapper around operator delete
   static void delete_Pythia8cLcLResonanceHchgchgRight(void *p) {
      delete ((::Pythia8::ResonanceHchgchgRight*)p);
   }
   static void deleteArray_Pythia8cLcLResonanceHchgchgRight(void *p) {
      delete [] ((::Pythia8::ResonanceHchgchgRight*)p);
   }
   static void destruct_Pythia8cLcLResonanceHchgchgRight(void *p) {
      typedef ::Pythia8::ResonanceHchgchgRight current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::Pythia8::ResonanceHchgchgRight

//______________________________________________________________________________
namespace ROOTDict {
   void Pythia8cLcLResonanceWidths_ShowMembers(void *obj, TMemberInspector &R__insp)
   {
      // Inspect the data members of an object of class Pythia8::ResonanceWidths.
      typedef ::ROOTShadow::Shadow::Pythia8::ResonanceWidths ShadowClass;
      ShadowClass *sobj = (ShadowClass*)obj;
      if (sobj) { } // Dummy usage just in case there is no datamember.

      TClass *R__cl  = ::ROOTDict::GenerateInitInstanceLocal((const ::Pythia8::ResonanceWidths*)0x0)->GetClass();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "idRes", &sobj->idRes);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "hasAntiRes", &sobj->hasAntiRes);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "doForceWidth", &sobj->doForceWidth);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "isGeneric", &sobj->isGeneric);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "allowCalcWidth", &sobj->allowCalcWidth);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "minWidth", &sobj->minWidth);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "minThreshold", &sobj->minThreshold);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mRes", &sobj->mRes);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "GammaRes", &sobj->GammaRes);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "m2Res", &sobj->m2Res);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "GamMRat", &sobj->GamMRat);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "openPos", &sobj->openPos);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "openNeg", &sobj->openNeg);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "forceFactor", &sobj->forceFactor);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "iChannel", &sobj->iChannel);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "onMode", &sobj->onMode);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "meMode", &sobj->meMode);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mult", &sobj->mult);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "id1", &sobj->id1);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "id2", &sobj->id2);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "id3", &sobj->id3);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "id1Abs", &sobj->id1Abs);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "id2Abs", &sobj->id2Abs);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "id3Abs", &sobj->id3Abs);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "idInFlav", &sobj->idInFlav);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "widNow", &sobj->widNow);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mHat", &sobj->mHat);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mf1", &sobj->mf1);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mf2", &sobj->mf2);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mf3", &sobj->mf3);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mr1", &sobj->mr1);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mr2", &sobj->mr2);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mr3", &sobj->mr3);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "ps", &sobj->ps);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "kinFac", &sobj->kinFac);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "alpEM", &sobj->alpEM);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "alpS", &sobj->alpS);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "colQ", &sobj->colQ);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "preFac", &sobj->preFac);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*particlePtr", &sobj->particlePtr);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*infoPtr", &sobj->infoPtr);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*settingsPtr", &sobj->settingsPtr);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*particleDataPtr", &sobj->particleDataPtr);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*couplingsPtr", &sobj->couplingsPtr);
   }

}

namespace ROOTDict {
   // Wrapper around operator delete
   static void delete_Pythia8cLcLResonanceWidths(void *p) {
      delete ((::Pythia8::ResonanceWidths*)p);
   }
   static void deleteArray_Pythia8cLcLResonanceWidths(void *p) {
      delete [] ((::Pythia8::ResonanceWidths*)p);
   }
   static void destruct_Pythia8cLcLResonanceWidths(void *p) {
      typedef ::Pythia8::ResonanceWidths current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::Pythia8::ResonanceWidths

//______________________________________________________________________________
namespace ROOTDict {
   void Pythia8cLcLSigmaProcess_ShowMembers(void *obj, TMemberInspector &R__insp)
   {
      // Inspect the data members of an object of class Pythia8::SigmaProcess.
      typedef ::ROOTShadow::Shadow::Pythia8::SigmaProcess ShadowClass;
      ShadowClass *sobj = (ShadowClass*)obj;
      if (sobj) { } // Dummy usage just in case there is no datamember.

      TClass *R__cl  = ::ROOTDict::GenerateInitInstanceLocal((const ::Pythia8::SigmaProcess*)0x0)->GetClass();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*infoPtr", &sobj->infoPtr);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*settingsPtr", &sobj->settingsPtr);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*particleDataPtr", &sobj->particleDataPtr);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*rndmPtr", &sobj->rndmPtr);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*beamAPtr", &sobj->beamAPtr);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*beamBPtr", &sobj->beamBPtr);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*couplingsPtr", &sobj->couplingsPtr);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*sigmaTotPtr", &sobj->sigmaTotPtr);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*slhaPtr", &sobj->slhaPtr);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*lhaUpPtr", &sobj->lhaUpPtr);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "nQuarkIn", &sobj->nQuarkIn);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "renormScale1", &sobj->renormScale1);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "renormScale2", &sobj->renormScale2);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "renormScale3", &sobj->renormScale3);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "renormScale3VV", &sobj->renormScale3VV);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "factorScale1", &sobj->factorScale1);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "factorScale2", &sobj->factorScale2);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "factorScale3", &sobj->factorScale3);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "factorScale3VV", &sobj->factorScale3VV);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Kfactor", &sobj->Kfactor);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mcME", &sobj->mcME);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mbME", &sobj->mbME);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mmuME", &sobj->mmuME);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mtauME", &sobj->mtauME);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "renormMultFac", &sobj->renormMultFac);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "renormFixScale", &sobj->renormFixScale);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "factorMultFac", &sobj->factorMultFac);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "factorFixScale", &sobj->factorFixScale);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "higgsH1parity", &sobj->higgsH1parity);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "higgsH2parity", &sobj->higgsH2parity);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "higgsA3parity", &sobj->higgsA3parity);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "higgsH1eta", &sobj->higgsH1eta);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "higgsH2eta", &sobj->higgsH2eta);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "higgsA3eta", &sobj->higgsA3eta);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "higgsH1phi", &sobj->higgsH1phi);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "higgsH2phi", &sobj->higgsH2phi);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "higgsA3phi", &sobj->higgsA3phi);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "idA", &sobj->idA);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "idB", &sobj->idB);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mA", &sobj->mA);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mB", &sobj->mB);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "isLeptonA", &sobj->isLeptonA);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "isLeptonB", &sobj->isLeptonB);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "hasLeptonBeams", &sobj->hasLeptonBeams);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "inBeamA", (void*)&sobj->inBeamA);
      R__insp.InspectMember("vector<InBeam>", (void*)&sobj->inBeamA, "inBeamA.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "inBeamB", (void*)&sobj->inBeamB);
      R__insp.InspectMember("vector<InBeam>", (void*)&sobj->inBeamB, "inBeamB.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "inPair", (void*)&sobj->inPair);
      R__insp.InspectMember("vector<InPair>", (void*)&sobj->inPair, "inPair.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mH", &sobj->mH);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "sH", &sobj->sH);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "sH2", &sobj->sH2);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Q2RenSave", &sobj->Q2RenSave);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "alpEM", &sobj->alpEM);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "alpS", &sobj->alpS);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Q2FacSave", &sobj->Q2FacSave);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "x1Save", &sobj->x1Save);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "x2Save", &sobj->x2Save);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "pdf1Save", &sobj->pdf1Save);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "pdf2Save", &sobj->pdf2Save);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "sigmaSumSave", &sobj->sigmaSumSave);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "id1", &sobj->id1);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "id2", &sobj->id2);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "id3", &sobj->id3);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "id4", &sobj->id4);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "id5", &sobj->id5);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "idSave[6]", sobj->idSave);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "colSave[6]", sobj->colSave);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "acolSave[6]", sobj->acolSave);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mSave[6]", sobj->mSave);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "cosTheta", &sobj->cosTheta);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "sinTheta", &sobj->sinTheta);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "phi", &sobj->phi);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "sHMass", &sobj->sHMass);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "sHBeta", &sobj->sHBeta);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "pT2Mass", &sobj->pT2Mass);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "pTFin", &sobj->pTFin);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "parton[6]", sobj->parton);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "partonT[6]", sobj->partonT);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mSaveT[6]", sobj->mSaveT);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "pTFinT", &sobj->pTFinT);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "cosThetaT", &sobj->cosThetaT);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "sinThetaT", &sobj->sinThetaT);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "phiT", &sobj->phiT);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mME[5]", sobj->mME);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "pME[5]", sobj->pME);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "swapTU", &sobj->swapTU);
   }

}

namespace ROOTDict {
   // Wrapper around operator delete
   static void delete_Pythia8cLcLSigmaProcess(void *p) {
      delete ((::Pythia8::SigmaProcess*)p);
   }
   static void deleteArray_Pythia8cLcLSigmaProcess(void *p) {
      delete [] ((::Pythia8::SigmaProcess*)p);
   }
   static void destruct_Pythia8cLcLSigmaProcess(void *p) {
      typedef ::Pythia8::SigmaProcess current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::Pythia8::SigmaProcess

//______________________________________________________________________________
namespace ROOTDict {
   void pairlEintcOPythia8cLcLParticleDataEntrygR_ShowMembers(void *obj, TMemberInspector &R__insp)
   {
      // Inspect the data members of an object of class pair<int,Pythia8::ParticleDataEntry>.
      typedef ::ROOTShadow::Shadow::pairlEintcOPythia8cLcLParticleDataEntrygR ShadowClass;
      ShadowClass *sobj = (ShadowClass*)obj;
      if (sobj) { } // Dummy usage just in case there is no datamember.

      TClass *R__cl  = ::ROOTDict::GenerateInitInstanceLocal((const pair<int,Pythia8::ParticleDataEntry>*)0x0)->GetClass();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "first", &sobj->first);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "second", (void*)&sobj->second);
      R__insp.InspectMember("Pythia8::ParticleDataEntry", (void*)&sobj->second, "second.", false);
   }

}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_pairlEintcOPythia8cLcLParticleDataEntrygR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) pair<int,Pythia8::ParticleDataEntry> : new pair<int,Pythia8::ParticleDataEntry>;
   }
   static void *newArray_pairlEintcOPythia8cLcLParticleDataEntrygR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) pair<int,Pythia8::ParticleDataEntry>[nElements] : new pair<int,Pythia8::ParticleDataEntry>[nElements];
   }
   // Wrapper around operator delete
   static void delete_pairlEintcOPythia8cLcLParticleDataEntrygR(void *p) {
      delete ((pair<int,Pythia8::ParticleDataEntry>*)p);
   }
   static void deleteArray_pairlEintcOPythia8cLcLParticleDataEntrygR(void *p) {
      delete [] ((pair<int,Pythia8::ParticleDataEntry>*)p);
   }
   static void destruct_pairlEintcOPythia8cLcLParticleDataEntrygR(void *p) {
      typedef pair<int,Pythia8::ParticleDataEntry> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class pair<int,Pythia8::ParticleDataEntry>

namespace ROOTDict {
   void maplEintcOPythia8cLcLParticleDataEntrygR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void maplEintcOPythia8cLcLParticleDataEntrygR_Dictionary();
   static void *new_maplEintcOPythia8cLcLParticleDataEntrygR(void *p = 0);
   static void *newArray_maplEintcOPythia8cLcLParticleDataEntrygR(Long_t size, void *p);
   static void delete_maplEintcOPythia8cLcLParticleDataEntrygR(void *p);
   static void deleteArray_maplEintcOPythia8cLcLParticleDataEntrygR(void *p);
   static void destruct_maplEintcOPythia8cLcLParticleDataEntrygR(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const map<int,Pythia8::ParticleDataEntry>*)
   {
      map<int,Pythia8::ParticleDataEntry> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(map<int,Pythia8::ParticleDataEntry>),0);
      static ::ROOT::TGenericClassInfo 
         instance("map<int,Pythia8::ParticleDataEntry>", -2, "prec_stl/map", 63,
                  typeid(map<int,Pythia8::ParticleDataEntry>), ::ROOT::DefineBehavior(ptr, ptr),
                  0, &maplEintcOPythia8cLcLParticleDataEntrygR_Dictionary, isa_proxy, 0,
                  sizeof(map<int,Pythia8::ParticleDataEntry>) );
      instance.SetNew(&new_maplEintcOPythia8cLcLParticleDataEntrygR);
      instance.SetNewArray(&newArray_maplEintcOPythia8cLcLParticleDataEntrygR);
      instance.SetDelete(&delete_maplEintcOPythia8cLcLParticleDataEntrygR);
      instance.SetDeleteArray(&deleteArray_maplEintcOPythia8cLcLParticleDataEntrygR);
      instance.SetDestructor(&destruct_maplEintcOPythia8cLcLParticleDataEntrygR);
      instance.AdoptCollectionProxyInfo( ::ROOT::TCollectionProxyInfo::Generate( ::ROOT::TCollectionProxyInfo::MapInsert< map<int,Pythia8::ParticleDataEntry> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const map<int,Pythia8::ParticleDataEntry>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void maplEintcOPythia8cLcLParticleDataEntrygR_Dictionary() {
      ::ROOTDict::GenerateInitInstanceLocal((const map<int,Pythia8::ParticleDataEntry>*)0x0)->GetClass();
   }

} // end of namespace ROOTDict

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_maplEintcOPythia8cLcLParticleDataEntrygR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) map<int,Pythia8::ParticleDataEntry> : new map<int,Pythia8::ParticleDataEntry>;
   }
   static void *newArray_maplEintcOPythia8cLcLParticleDataEntrygR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) map<int,Pythia8::ParticleDataEntry>[nElements] : new map<int,Pythia8::ParticleDataEntry>[nElements];
   }
   // Wrapper around operator delete
   static void delete_maplEintcOPythia8cLcLParticleDataEntrygR(void *p) {
      delete ((map<int,Pythia8::ParticleDataEntry>*)p);
   }
   static void deleteArray_maplEintcOPythia8cLcLParticleDataEntrygR(void *p) {
      delete [] ((map<int,Pythia8::ParticleDataEntry>*)p);
   }
   static void destruct_maplEintcOPythia8cLcLParticleDataEntrygR(void *p) {
      typedef map<int,Pythia8::ParticleDataEntry> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class map<int,Pythia8::ParticleDataEntry>

namespace ROOTDict {
   void maplEintcOdoublegR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void maplEintcOdoublegR_Dictionary();
   static void *new_maplEintcOdoublegR(void *p = 0);
   static void *newArray_maplEintcOdoublegR(Long_t size, void *p);
   static void delete_maplEintcOdoublegR(void *p);
   static void deleteArray_maplEintcOdoublegR(void *p);
   static void destruct_maplEintcOdoublegR(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const map<int,double>*)
   {
      map<int,double> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(map<int,double>),0);
      static ::ROOT::TGenericClassInfo 
         instance("map<int,double>", -2, "prec_stl/map", 63,
                  typeid(map<int,double>), ::ROOT::DefineBehavior(ptr, ptr),
                  0, &maplEintcOdoublegR_Dictionary, isa_proxy, 0,
                  sizeof(map<int,double>) );
      instance.SetNew(&new_maplEintcOdoublegR);
      instance.SetNewArray(&newArray_maplEintcOdoublegR);
      instance.SetDelete(&delete_maplEintcOdoublegR);
      instance.SetDeleteArray(&deleteArray_maplEintcOdoublegR);
      instance.SetDestructor(&destruct_maplEintcOdoublegR);
      instance.AdoptCollectionProxyInfo( ::ROOT::TCollectionProxyInfo::Generate( ::ROOT::TCollectionProxyInfo::MapInsert< map<int,double> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const map<int,double>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void maplEintcOdoublegR_Dictionary() {
      ::ROOTDict::GenerateInitInstanceLocal((const map<int,double>*)0x0)->GetClass();
   }

} // end of namespace ROOTDict

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_maplEintcOdoublegR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) map<int,double> : new map<int,double>;
   }
   static void *newArray_maplEintcOdoublegR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) map<int,double>[nElements] : new map<int,double>[nElements];
   }
   // Wrapper around operator delete
   static void delete_maplEintcOdoublegR(void *p) {
      delete ((map<int,double>*)p);
   }
   static void deleteArray_maplEintcOdoublegR(void *p) {
      delete [] ((map<int,double>*)p);
   }
   static void destruct_maplEintcOdoublegR(void *p) {
      typedef map<int,double> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class map<int,double>

namespace ROOTDict {
   void maplEintcOlonggR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void maplEintcOlonggR_Dictionary();
   static void *new_maplEintcOlonggR(void *p = 0);
   static void *newArray_maplEintcOlonggR(Long_t size, void *p);
   static void delete_maplEintcOlonggR(void *p);
   static void deleteArray_maplEintcOlonggR(void *p);
   static void destruct_maplEintcOlonggR(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const map<int,long>*)
   {
      map<int,long> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(map<int,long>),0);
      static ::ROOT::TGenericClassInfo 
         instance("map<int,long>", -2, "prec_stl/map", 63,
                  typeid(map<int,long>), ::ROOT::DefineBehavior(ptr, ptr),
                  0, &maplEintcOlonggR_Dictionary, isa_proxy, 0,
                  sizeof(map<int,long>) );
      instance.SetNew(&new_maplEintcOlonggR);
      instance.SetNewArray(&newArray_maplEintcOlonggR);
      instance.SetDelete(&delete_maplEintcOlonggR);
      instance.SetDeleteArray(&deleteArray_maplEintcOlonggR);
      instance.SetDestructor(&destruct_maplEintcOlonggR);
      instance.AdoptCollectionProxyInfo( ::ROOT::TCollectionProxyInfo::Generate( ::ROOT::TCollectionProxyInfo::MapInsert< map<int,long> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const map<int,long>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void maplEintcOlonggR_Dictionary() {
      ::ROOTDict::GenerateInitInstanceLocal((const map<int,long>*)0x0)->GetClass();
   }

} // end of namespace ROOTDict

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_maplEintcOlonggR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) map<int,long> : new map<int,long>;
   }
   static void *newArray_maplEintcOlonggR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) map<int,long>[nElements] : new map<int,long>[nElements];
   }
   // Wrapper around operator delete
   static void delete_maplEintcOlonggR(void *p) {
      delete ((map<int,long>*)p);
   }
   static void deleteArray_maplEintcOlonggR(void *p) {
      delete [] ((map<int,long>*)p);
   }
   static void destruct_maplEintcOlonggR(void *p) {
      typedef map<int,long> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class map<int,long>

namespace ROOTDict {
   void maplEintcOstringgR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void maplEintcOstringgR_Dictionary();
   static void *new_maplEintcOstringgR(void *p = 0);
   static void *newArray_maplEintcOstringgR(Long_t size, void *p);
   static void delete_maplEintcOstringgR(void *p);
   static void deleteArray_maplEintcOstringgR(void *p);
   static void destruct_maplEintcOstringgR(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const map<int,string>*)
   {
      map<int,string> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(map<int,string>),0);
      static ::ROOT::TGenericClassInfo 
         instance("map<int,string>", -2, "prec_stl/map", 63,
                  typeid(map<int,string>), ::ROOT::DefineBehavior(ptr, ptr),
                  0, &maplEintcOstringgR_Dictionary, isa_proxy, 0,
                  sizeof(map<int,string>) );
      instance.SetNew(&new_maplEintcOstringgR);
      instance.SetNewArray(&newArray_maplEintcOstringgR);
      instance.SetDelete(&delete_maplEintcOstringgR);
      instance.SetDeleteArray(&deleteArray_maplEintcOstringgR);
      instance.SetDestructor(&destruct_maplEintcOstringgR);
      instance.AdoptCollectionProxyInfo( ::ROOT::TCollectionProxyInfo::Generate( ::ROOT::TCollectionProxyInfo::MapInsert< map<int,string> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const map<int,string>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void maplEintcOstringgR_Dictionary() {
      ::ROOTDict::GenerateInitInstanceLocal((const map<int,string>*)0x0)->GetClass();
   }

} // end of namespace ROOTDict

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_maplEintcOstringgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) map<int,string> : new map<int,string>;
   }
   static void *newArray_maplEintcOstringgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) map<int,string>[nElements] : new map<int,string>[nElements];
   }
   // Wrapper around operator delete
   static void delete_maplEintcOstringgR(void *p) {
      delete ((map<int,string>*)p);
   }
   static void deleteArray_maplEintcOstringgR(void *p) {
      delete [] ((map<int,string>*)p);
   }
   static void destruct_maplEintcOstringgR(void *p) {
      typedef map<int,string> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class map<int,string>

namespace ROOTDict {
   void maplEstringcOPythia8cLcLFVecgR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void maplEstringcOPythia8cLcLFVecgR_Dictionary();
   static void *new_maplEstringcOPythia8cLcLFVecgR(void *p = 0);
   static void *newArray_maplEstringcOPythia8cLcLFVecgR(Long_t size, void *p);
   static void delete_maplEstringcOPythia8cLcLFVecgR(void *p);
   static void deleteArray_maplEstringcOPythia8cLcLFVecgR(void *p);
   static void destruct_maplEstringcOPythia8cLcLFVecgR(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const map<string,Pythia8::FVec>*)
   {
      map<string,Pythia8::FVec> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(map<string,Pythia8::FVec>),0);
      static ::ROOT::TGenericClassInfo 
         instance("map<string,Pythia8::FVec>", -2, "prec_stl/map", 63,
                  typeid(map<string,Pythia8::FVec>), ::ROOT::DefineBehavior(ptr, ptr),
                  0, &maplEstringcOPythia8cLcLFVecgR_Dictionary, isa_proxy, 0,
                  sizeof(map<string,Pythia8::FVec>) );
      instance.SetNew(&new_maplEstringcOPythia8cLcLFVecgR);
      instance.SetNewArray(&newArray_maplEstringcOPythia8cLcLFVecgR);
      instance.SetDelete(&delete_maplEstringcOPythia8cLcLFVecgR);
      instance.SetDeleteArray(&deleteArray_maplEstringcOPythia8cLcLFVecgR);
      instance.SetDestructor(&destruct_maplEstringcOPythia8cLcLFVecgR);
      instance.AdoptCollectionProxyInfo( ::ROOT::TCollectionProxyInfo::Generate( ::ROOT::TCollectionProxyInfo::MapInsert< map<string,Pythia8::FVec> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const map<string,Pythia8::FVec>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void maplEstringcOPythia8cLcLFVecgR_Dictionary() {
      ::ROOTDict::GenerateInitInstanceLocal((const map<string,Pythia8::FVec>*)0x0)->GetClass();
   }

} // end of namespace ROOTDict

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_maplEstringcOPythia8cLcLFVecgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) map<string,Pythia8::FVec> : new map<string,Pythia8::FVec>;
   }
   static void *newArray_maplEstringcOPythia8cLcLFVecgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) map<string,Pythia8::FVec>[nElements] : new map<string,Pythia8::FVec>[nElements];
   }
   // Wrapper around operator delete
   static void delete_maplEstringcOPythia8cLcLFVecgR(void *p) {
      delete ((map<string,Pythia8::FVec>*)p);
   }
   static void deleteArray_maplEstringcOPythia8cLcLFVecgR(void *p) {
      delete [] ((map<string,Pythia8::FVec>*)p);
   }
   static void destruct_maplEstringcOPythia8cLcLFVecgR(void *p) {
      typedef map<string,Pythia8::FVec> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class map<string,Pythia8::FVec>

namespace ROOTDict {
   void maplEstringcOPythia8cLcLFlaggR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void maplEstringcOPythia8cLcLFlaggR_Dictionary();
   static void *new_maplEstringcOPythia8cLcLFlaggR(void *p = 0);
   static void *newArray_maplEstringcOPythia8cLcLFlaggR(Long_t size, void *p);
   static void delete_maplEstringcOPythia8cLcLFlaggR(void *p);
   static void deleteArray_maplEstringcOPythia8cLcLFlaggR(void *p);
   static void destruct_maplEstringcOPythia8cLcLFlaggR(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const map<string,Pythia8::Flag>*)
   {
      map<string,Pythia8::Flag> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(map<string,Pythia8::Flag>),0);
      static ::ROOT::TGenericClassInfo 
         instance("map<string,Pythia8::Flag>", -2, "prec_stl/map", 63,
                  typeid(map<string,Pythia8::Flag>), ::ROOT::DefineBehavior(ptr, ptr),
                  0, &maplEstringcOPythia8cLcLFlaggR_Dictionary, isa_proxy, 0,
                  sizeof(map<string,Pythia8::Flag>) );
      instance.SetNew(&new_maplEstringcOPythia8cLcLFlaggR);
      instance.SetNewArray(&newArray_maplEstringcOPythia8cLcLFlaggR);
      instance.SetDelete(&delete_maplEstringcOPythia8cLcLFlaggR);
      instance.SetDeleteArray(&deleteArray_maplEstringcOPythia8cLcLFlaggR);
      instance.SetDestructor(&destruct_maplEstringcOPythia8cLcLFlaggR);
      instance.AdoptCollectionProxyInfo( ::ROOT::TCollectionProxyInfo::Generate( ::ROOT::TCollectionProxyInfo::MapInsert< map<string,Pythia8::Flag> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const map<string,Pythia8::Flag>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void maplEstringcOPythia8cLcLFlaggR_Dictionary() {
      ::ROOTDict::GenerateInitInstanceLocal((const map<string,Pythia8::Flag>*)0x0)->GetClass();
   }

} // end of namespace ROOTDict

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_maplEstringcOPythia8cLcLFlaggR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) map<string,Pythia8::Flag> : new map<string,Pythia8::Flag>;
   }
   static void *newArray_maplEstringcOPythia8cLcLFlaggR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) map<string,Pythia8::Flag>[nElements] : new map<string,Pythia8::Flag>[nElements];
   }
   // Wrapper around operator delete
   static void delete_maplEstringcOPythia8cLcLFlaggR(void *p) {
      delete ((map<string,Pythia8::Flag>*)p);
   }
   static void deleteArray_maplEstringcOPythia8cLcLFlaggR(void *p) {
      delete [] ((map<string,Pythia8::Flag>*)p);
   }
   static void destruct_maplEstringcOPythia8cLcLFlaggR(void *p) {
      typedef map<string,Pythia8::Flag> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class map<string,Pythia8::Flag>

namespace ROOTDict {
   void maplEstringcOPythia8cLcLLHAweightgR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void maplEstringcOPythia8cLcLLHAweightgR_Dictionary();
   static void *new_maplEstringcOPythia8cLcLLHAweightgR(void *p = 0);
   static void *newArray_maplEstringcOPythia8cLcLLHAweightgR(Long_t size, void *p);
   static void delete_maplEstringcOPythia8cLcLLHAweightgR(void *p);
   static void deleteArray_maplEstringcOPythia8cLcLLHAweightgR(void *p);
   static void destruct_maplEstringcOPythia8cLcLLHAweightgR(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const map<string,Pythia8::LHAweight>*)
   {
      map<string,Pythia8::LHAweight> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(map<string,Pythia8::LHAweight>),0);
      static ::ROOT::TGenericClassInfo 
         instance("map<string,Pythia8::LHAweight>", -2, "prec_stl/map", 63,
                  typeid(map<string,Pythia8::LHAweight>), ::ROOT::DefineBehavior(ptr, ptr),
                  0, &maplEstringcOPythia8cLcLLHAweightgR_Dictionary, isa_proxy, 0,
                  sizeof(map<string,Pythia8::LHAweight>) );
      instance.SetNew(&new_maplEstringcOPythia8cLcLLHAweightgR);
      instance.SetNewArray(&newArray_maplEstringcOPythia8cLcLLHAweightgR);
      instance.SetDelete(&delete_maplEstringcOPythia8cLcLLHAweightgR);
      instance.SetDeleteArray(&deleteArray_maplEstringcOPythia8cLcLLHAweightgR);
      instance.SetDestructor(&destruct_maplEstringcOPythia8cLcLLHAweightgR);
      instance.AdoptCollectionProxyInfo( ::ROOT::TCollectionProxyInfo::Generate( ::ROOT::TCollectionProxyInfo::MapInsert< map<string,Pythia8::LHAweight> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const map<string,Pythia8::LHAweight>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void maplEstringcOPythia8cLcLLHAweightgR_Dictionary() {
      ::ROOTDict::GenerateInitInstanceLocal((const map<string,Pythia8::LHAweight>*)0x0)->GetClass();
   }

} // end of namespace ROOTDict

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_maplEstringcOPythia8cLcLLHAweightgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) map<string,Pythia8::LHAweight> : new map<string,Pythia8::LHAweight>;
   }
   static void *newArray_maplEstringcOPythia8cLcLLHAweightgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) map<string,Pythia8::LHAweight>[nElements] : new map<string,Pythia8::LHAweight>[nElements];
   }
   // Wrapper around operator delete
   static void delete_maplEstringcOPythia8cLcLLHAweightgR(void *p) {
      delete ((map<string,Pythia8::LHAweight>*)p);
   }
   static void deleteArray_maplEstringcOPythia8cLcLLHAweightgR(void *p) {
      delete [] ((map<string,Pythia8::LHAweight>*)p);
   }
   static void destruct_maplEstringcOPythia8cLcLLHAweightgR(void *p) {
      typedef map<string,Pythia8::LHAweight> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class map<string,Pythia8::LHAweight>

namespace ROOTDict {
   void maplEstringcOPythia8cLcLLHAweightgroupgR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void maplEstringcOPythia8cLcLLHAweightgroupgR_Dictionary();
   static void *new_maplEstringcOPythia8cLcLLHAweightgroupgR(void *p = 0);
   static void *newArray_maplEstringcOPythia8cLcLLHAweightgroupgR(Long_t size, void *p);
   static void delete_maplEstringcOPythia8cLcLLHAweightgroupgR(void *p);
   static void deleteArray_maplEstringcOPythia8cLcLLHAweightgroupgR(void *p);
   static void destruct_maplEstringcOPythia8cLcLLHAweightgroupgR(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const map<string,Pythia8::LHAweightgroup>*)
   {
      map<string,Pythia8::LHAweightgroup> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(map<string,Pythia8::LHAweightgroup>),0);
      static ::ROOT::TGenericClassInfo 
         instance("map<string,Pythia8::LHAweightgroup>", -2, "prec_stl/map", 63,
                  typeid(map<string,Pythia8::LHAweightgroup>), ::ROOT::DefineBehavior(ptr, ptr),
                  0, &maplEstringcOPythia8cLcLLHAweightgroupgR_Dictionary, isa_proxy, 0,
                  sizeof(map<string,Pythia8::LHAweightgroup>) );
      instance.SetNew(&new_maplEstringcOPythia8cLcLLHAweightgroupgR);
      instance.SetNewArray(&newArray_maplEstringcOPythia8cLcLLHAweightgroupgR);
      instance.SetDelete(&delete_maplEstringcOPythia8cLcLLHAweightgroupgR);
      instance.SetDeleteArray(&deleteArray_maplEstringcOPythia8cLcLLHAweightgroupgR);
      instance.SetDestructor(&destruct_maplEstringcOPythia8cLcLLHAweightgroupgR);
      instance.AdoptCollectionProxyInfo( ::ROOT::TCollectionProxyInfo::Generate( ::ROOT::TCollectionProxyInfo::MapInsert< map<string,Pythia8::LHAweightgroup> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const map<string,Pythia8::LHAweightgroup>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void maplEstringcOPythia8cLcLLHAweightgroupgR_Dictionary() {
      ::ROOTDict::GenerateInitInstanceLocal((const map<string,Pythia8::LHAweightgroup>*)0x0)->GetClass();
   }

} // end of namespace ROOTDict

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_maplEstringcOPythia8cLcLLHAweightgroupgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) map<string,Pythia8::LHAweightgroup> : new map<string,Pythia8::LHAweightgroup>;
   }
   static void *newArray_maplEstringcOPythia8cLcLLHAweightgroupgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) map<string,Pythia8::LHAweightgroup>[nElements] : new map<string,Pythia8::LHAweightgroup>[nElements];
   }
   // Wrapper around operator delete
   static void delete_maplEstringcOPythia8cLcLLHAweightgroupgR(void *p) {
      delete ((map<string,Pythia8::LHAweightgroup>*)p);
   }
   static void deleteArray_maplEstringcOPythia8cLcLLHAweightgroupgR(void *p) {
      delete [] ((map<string,Pythia8::LHAweightgroup>*)p);
   }
   static void destruct_maplEstringcOPythia8cLcLLHAweightgroupgR(void *p) {
      typedef map<string,Pythia8::LHAweightgroup> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class map<string,Pythia8::LHAweightgroup>

namespace ROOTDict {
   void maplEstringcOPythia8cLcLMVecgR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void maplEstringcOPythia8cLcLMVecgR_Dictionary();
   static void *new_maplEstringcOPythia8cLcLMVecgR(void *p = 0);
   static void *newArray_maplEstringcOPythia8cLcLMVecgR(Long_t size, void *p);
   static void delete_maplEstringcOPythia8cLcLMVecgR(void *p);
   static void deleteArray_maplEstringcOPythia8cLcLMVecgR(void *p);
   static void destruct_maplEstringcOPythia8cLcLMVecgR(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const map<string,Pythia8::MVec>*)
   {
      map<string,Pythia8::MVec> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(map<string,Pythia8::MVec>),0);
      static ::ROOT::TGenericClassInfo 
         instance("map<string,Pythia8::MVec>", -2, "prec_stl/map", 63,
                  typeid(map<string,Pythia8::MVec>), ::ROOT::DefineBehavior(ptr, ptr),
                  0, &maplEstringcOPythia8cLcLMVecgR_Dictionary, isa_proxy, 0,
                  sizeof(map<string,Pythia8::MVec>) );
      instance.SetNew(&new_maplEstringcOPythia8cLcLMVecgR);
      instance.SetNewArray(&newArray_maplEstringcOPythia8cLcLMVecgR);
      instance.SetDelete(&delete_maplEstringcOPythia8cLcLMVecgR);
      instance.SetDeleteArray(&deleteArray_maplEstringcOPythia8cLcLMVecgR);
      instance.SetDestructor(&destruct_maplEstringcOPythia8cLcLMVecgR);
      instance.AdoptCollectionProxyInfo( ::ROOT::TCollectionProxyInfo::Generate( ::ROOT::TCollectionProxyInfo::MapInsert< map<string,Pythia8::MVec> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const map<string,Pythia8::MVec>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void maplEstringcOPythia8cLcLMVecgR_Dictionary() {
      ::ROOTDict::GenerateInitInstanceLocal((const map<string,Pythia8::MVec>*)0x0)->GetClass();
   }

} // end of namespace ROOTDict

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_maplEstringcOPythia8cLcLMVecgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) map<string,Pythia8::MVec> : new map<string,Pythia8::MVec>;
   }
   static void *newArray_maplEstringcOPythia8cLcLMVecgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) map<string,Pythia8::MVec>[nElements] : new map<string,Pythia8::MVec>[nElements];
   }
   // Wrapper around operator delete
   static void delete_maplEstringcOPythia8cLcLMVecgR(void *p) {
      delete ((map<string,Pythia8::MVec>*)p);
   }
   static void deleteArray_maplEstringcOPythia8cLcLMVecgR(void *p) {
      delete [] ((map<string,Pythia8::MVec>*)p);
   }
   static void destruct_maplEstringcOPythia8cLcLMVecgR(void *p) {
      typedef map<string,Pythia8::MVec> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class map<string,Pythia8::MVec>

namespace ROOTDict {
   void maplEstringcOPythia8cLcLModegR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void maplEstringcOPythia8cLcLModegR_Dictionary();
   static void *new_maplEstringcOPythia8cLcLModegR(void *p = 0);
   static void *newArray_maplEstringcOPythia8cLcLModegR(Long_t size, void *p);
   static void delete_maplEstringcOPythia8cLcLModegR(void *p);
   static void deleteArray_maplEstringcOPythia8cLcLModegR(void *p);
   static void destruct_maplEstringcOPythia8cLcLModegR(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const map<string,Pythia8::Mode>*)
   {
      map<string,Pythia8::Mode> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(map<string,Pythia8::Mode>),0);
      static ::ROOT::TGenericClassInfo 
         instance("map<string,Pythia8::Mode>", -2, "prec_stl/map", 63,
                  typeid(map<string,Pythia8::Mode>), ::ROOT::DefineBehavior(ptr, ptr),
                  0, &maplEstringcOPythia8cLcLModegR_Dictionary, isa_proxy, 0,
                  sizeof(map<string,Pythia8::Mode>) );
      instance.SetNew(&new_maplEstringcOPythia8cLcLModegR);
      instance.SetNewArray(&newArray_maplEstringcOPythia8cLcLModegR);
      instance.SetDelete(&delete_maplEstringcOPythia8cLcLModegR);
      instance.SetDeleteArray(&deleteArray_maplEstringcOPythia8cLcLModegR);
      instance.SetDestructor(&destruct_maplEstringcOPythia8cLcLModegR);
      instance.AdoptCollectionProxyInfo( ::ROOT::TCollectionProxyInfo::Generate( ::ROOT::TCollectionProxyInfo::MapInsert< map<string,Pythia8::Mode> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const map<string,Pythia8::Mode>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void maplEstringcOPythia8cLcLModegR_Dictionary() {
      ::ROOTDict::GenerateInitInstanceLocal((const map<string,Pythia8::Mode>*)0x0)->GetClass();
   }

} // end of namespace ROOTDict

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_maplEstringcOPythia8cLcLModegR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) map<string,Pythia8::Mode> : new map<string,Pythia8::Mode>;
   }
   static void *newArray_maplEstringcOPythia8cLcLModegR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) map<string,Pythia8::Mode>[nElements] : new map<string,Pythia8::Mode>[nElements];
   }
   // Wrapper around operator delete
   static void delete_maplEstringcOPythia8cLcLModegR(void *p) {
      delete ((map<string,Pythia8::Mode>*)p);
   }
   static void deleteArray_maplEstringcOPythia8cLcLModegR(void *p) {
      delete [] ((map<string,Pythia8::Mode>*)p);
   }
   static void destruct_maplEstringcOPythia8cLcLModegR(void *p) {
      typedef map<string,Pythia8::Mode> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class map<string,Pythia8::Mode>

namespace ROOTDict {
   void maplEstringcOPythia8cLcLPVecgR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void maplEstringcOPythia8cLcLPVecgR_Dictionary();
   static void *new_maplEstringcOPythia8cLcLPVecgR(void *p = 0);
   static void *newArray_maplEstringcOPythia8cLcLPVecgR(Long_t size, void *p);
   static void delete_maplEstringcOPythia8cLcLPVecgR(void *p);
   static void deleteArray_maplEstringcOPythia8cLcLPVecgR(void *p);
   static void destruct_maplEstringcOPythia8cLcLPVecgR(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const map<string,Pythia8::PVec>*)
   {
      map<string,Pythia8::PVec> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(map<string,Pythia8::PVec>),0);
      static ::ROOT::TGenericClassInfo 
         instance("map<string,Pythia8::PVec>", -2, "prec_stl/map", 63,
                  typeid(map<string,Pythia8::PVec>), ::ROOT::DefineBehavior(ptr, ptr),
                  0, &maplEstringcOPythia8cLcLPVecgR_Dictionary, isa_proxy, 0,
                  sizeof(map<string,Pythia8::PVec>) );
      instance.SetNew(&new_maplEstringcOPythia8cLcLPVecgR);
      instance.SetNewArray(&newArray_maplEstringcOPythia8cLcLPVecgR);
      instance.SetDelete(&delete_maplEstringcOPythia8cLcLPVecgR);
      instance.SetDeleteArray(&deleteArray_maplEstringcOPythia8cLcLPVecgR);
      instance.SetDestructor(&destruct_maplEstringcOPythia8cLcLPVecgR);
      instance.AdoptCollectionProxyInfo( ::ROOT::TCollectionProxyInfo::Generate( ::ROOT::TCollectionProxyInfo::MapInsert< map<string,Pythia8::PVec> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const map<string,Pythia8::PVec>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void maplEstringcOPythia8cLcLPVecgR_Dictionary() {
      ::ROOTDict::GenerateInitInstanceLocal((const map<string,Pythia8::PVec>*)0x0)->GetClass();
   }

} // end of namespace ROOTDict

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_maplEstringcOPythia8cLcLPVecgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) map<string,Pythia8::PVec> : new map<string,Pythia8::PVec>;
   }
   static void *newArray_maplEstringcOPythia8cLcLPVecgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) map<string,Pythia8::PVec>[nElements] : new map<string,Pythia8::PVec>[nElements];
   }
   // Wrapper around operator delete
   static void delete_maplEstringcOPythia8cLcLPVecgR(void *p) {
      delete ((map<string,Pythia8::PVec>*)p);
   }
   static void deleteArray_maplEstringcOPythia8cLcLPVecgR(void *p) {
      delete [] ((map<string,Pythia8::PVec>*)p);
   }
   static void destruct_maplEstringcOPythia8cLcLPVecgR(void *p) {
      typedef map<string,Pythia8::PVec> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class map<string,Pythia8::PVec>

namespace ROOTDict {
   void maplEstringcOPythia8cLcLParmgR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void maplEstringcOPythia8cLcLParmgR_Dictionary();
   static void *new_maplEstringcOPythia8cLcLParmgR(void *p = 0);
   static void *newArray_maplEstringcOPythia8cLcLParmgR(Long_t size, void *p);
   static void delete_maplEstringcOPythia8cLcLParmgR(void *p);
   static void deleteArray_maplEstringcOPythia8cLcLParmgR(void *p);
   static void destruct_maplEstringcOPythia8cLcLParmgR(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const map<string,Pythia8::Parm>*)
   {
      map<string,Pythia8::Parm> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(map<string,Pythia8::Parm>),0);
      static ::ROOT::TGenericClassInfo 
         instance("map<string,Pythia8::Parm>", -2, "prec_stl/map", 63,
                  typeid(map<string,Pythia8::Parm>), ::ROOT::DefineBehavior(ptr, ptr),
                  0, &maplEstringcOPythia8cLcLParmgR_Dictionary, isa_proxy, 0,
                  sizeof(map<string,Pythia8::Parm>) );
      instance.SetNew(&new_maplEstringcOPythia8cLcLParmgR);
      instance.SetNewArray(&newArray_maplEstringcOPythia8cLcLParmgR);
      instance.SetDelete(&delete_maplEstringcOPythia8cLcLParmgR);
      instance.SetDeleteArray(&deleteArray_maplEstringcOPythia8cLcLParmgR);
      instance.SetDestructor(&destruct_maplEstringcOPythia8cLcLParmgR);
      instance.AdoptCollectionProxyInfo( ::ROOT::TCollectionProxyInfo::Generate( ::ROOT::TCollectionProxyInfo::MapInsert< map<string,Pythia8::Parm> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const map<string,Pythia8::Parm>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void maplEstringcOPythia8cLcLParmgR_Dictionary() {
      ::ROOTDict::GenerateInitInstanceLocal((const map<string,Pythia8::Parm>*)0x0)->GetClass();
   }

} // end of namespace ROOTDict

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_maplEstringcOPythia8cLcLParmgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) map<string,Pythia8::Parm> : new map<string,Pythia8::Parm>;
   }
   static void *newArray_maplEstringcOPythia8cLcLParmgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) map<string,Pythia8::Parm>[nElements] : new map<string,Pythia8::Parm>[nElements];
   }
   // Wrapper around operator delete
   static void delete_maplEstringcOPythia8cLcLParmgR(void *p) {
      delete ((map<string,Pythia8::Parm>*)p);
   }
   static void deleteArray_maplEstringcOPythia8cLcLParmgR(void *p) {
      delete [] ((map<string,Pythia8::Parm>*)p);
   }
   static void destruct_maplEstringcOPythia8cLcLParmgR(void *p) {
      typedef map<string,Pythia8::Parm> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class map<string,Pythia8::Parm>

namespace ROOTDict {
   void maplEstringcOPythia8cLcLWordgR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void maplEstringcOPythia8cLcLWordgR_Dictionary();
   static void *new_maplEstringcOPythia8cLcLWordgR(void *p = 0);
   static void *newArray_maplEstringcOPythia8cLcLWordgR(Long_t size, void *p);
   static void delete_maplEstringcOPythia8cLcLWordgR(void *p);
   static void deleteArray_maplEstringcOPythia8cLcLWordgR(void *p);
   static void destruct_maplEstringcOPythia8cLcLWordgR(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const map<string,Pythia8::Word>*)
   {
      map<string,Pythia8::Word> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(map<string,Pythia8::Word>),0);
      static ::ROOT::TGenericClassInfo 
         instance("map<string,Pythia8::Word>", -2, "prec_stl/map", 63,
                  typeid(map<string,Pythia8::Word>), ::ROOT::DefineBehavior(ptr, ptr),
                  0, &maplEstringcOPythia8cLcLWordgR_Dictionary, isa_proxy, 0,
                  sizeof(map<string,Pythia8::Word>) );
      instance.SetNew(&new_maplEstringcOPythia8cLcLWordgR);
      instance.SetNewArray(&newArray_maplEstringcOPythia8cLcLWordgR);
      instance.SetDelete(&delete_maplEstringcOPythia8cLcLWordgR);
      instance.SetDeleteArray(&deleteArray_maplEstringcOPythia8cLcLWordgR);
      instance.SetDestructor(&destruct_maplEstringcOPythia8cLcLWordgR);
      instance.AdoptCollectionProxyInfo( ::ROOT::TCollectionProxyInfo::Generate( ::ROOT::TCollectionProxyInfo::MapInsert< map<string,Pythia8::Word> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const map<string,Pythia8::Word>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void maplEstringcOPythia8cLcLWordgR_Dictionary() {
      ::ROOTDict::GenerateInitInstanceLocal((const map<string,Pythia8::Word>*)0x0)->GetClass();
   }

} // end of namespace ROOTDict

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_maplEstringcOPythia8cLcLWordgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) map<string,Pythia8::Word> : new map<string,Pythia8::Word>;
   }
   static void *newArray_maplEstringcOPythia8cLcLWordgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) map<string,Pythia8::Word>[nElements] : new map<string,Pythia8::Word>[nElements];
   }
   // Wrapper around operator delete
   static void delete_maplEstringcOPythia8cLcLWordgR(void *p) {
      delete ((map<string,Pythia8::Word>*)p);
   }
   static void deleteArray_maplEstringcOPythia8cLcLWordgR(void *p) {
      delete [] ((map<string,Pythia8::Word>*)p);
   }
   static void destruct_maplEstringcOPythia8cLcLWordgR(void *p) {
      typedef map<string,Pythia8::Word> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class map<string,Pythia8::Word>

namespace ROOTDict {
   void maplEstringcOdoublegR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void maplEstringcOdoublegR_Dictionary();
   static void *new_maplEstringcOdoublegR(void *p = 0);
   static void *newArray_maplEstringcOdoublegR(Long_t size, void *p);
   static void delete_maplEstringcOdoublegR(void *p);
   static void deleteArray_maplEstringcOdoublegR(void *p);
   static void destruct_maplEstringcOdoublegR(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const map<string,double>*)
   {
      map<string,double> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(map<string,double>),0);
      static ::ROOT::TGenericClassInfo 
         instance("map<string,double>", -2, "map.dll", 0,
                  typeid(map<string,double>), ::ROOT::DefineBehavior(ptr, ptr),
                  0, &maplEstringcOdoublegR_Dictionary, isa_proxy, 0,
                  sizeof(map<string,double>) );
      instance.SetNew(&new_maplEstringcOdoublegR);
      instance.SetNewArray(&newArray_maplEstringcOdoublegR);
      instance.SetDelete(&delete_maplEstringcOdoublegR);
      instance.SetDeleteArray(&deleteArray_maplEstringcOdoublegR);
      instance.SetDestructor(&destruct_maplEstringcOdoublegR);
      instance.AdoptCollectionProxyInfo( ::ROOT::TCollectionProxyInfo::Generate( ::ROOT::TCollectionProxyInfo::MapInsert< map<string,double> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const map<string,double>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void maplEstringcOdoublegR_Dictionary() {
      ::ROOTDict::GenerateInitInstanceLocal((const map<string,double>*)0x0)->GetClass();
   }

} // end of namespace ROOTDict

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_maplEstringcOdoublegR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) map<string,double> : new map<string,double>;
   }
   static void *newArray_maplEstringcOdoublegR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) map<string,double>[nElements] : new map<string,double>[nElements];
   }
   // Wrapper around operator delete
   static void delete_maplEstringcOdoublegR(void *p) {
      delete ((map<string,double>*)p);
   }
   static void deleteArray_maplEstringcOdoublegR(void *p) {
      delete [] ((map<string,double>*)p);
   }
   static void destruct_maplEstringcOdoublegR(void *p) {
      typedef map<string,double> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class map<string,double>

namespace ROOTDict {
   void maplEstringcOintgR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void maplEstringcOintgR_Dictionary();
   static void *new_maplEstringcOintgR(void *p = 0);
   static void *newArray_maplEstringcOintgR(Long_t size, void *p);
   static void delete_maplEstringcOintgR(void *p);
   static void deleteArray_maplEstringcOintgR(void *p);
   static void destruct_maplEstringcOintgR(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const map<string,int>*)
   {
      map<string,int> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(map<string,int>),0);
      static ::ROOT::TGenericClassInfo 
         instance("map<string,int>", -2, "map.dll", 0,
                  typeid(map<string,int>), ::ROOT::DefineBehavior(ptr, ptr),
                  0, &maplEstringcOintgR_Dictionary, isa_proxy, 0,
                  sizeof(map<string,int>) );
      instance.SetNew(&new_maplEstringcOintgR);
      instance.SetNewArray(&newArray_maplEstringcOintgR);
      instance.SetDelete(&delete_maplEstringcOintgR);
      instance.SetDeleteArray(&deleteArray_maplEstringcOintgR);
      instance.SetDestructor(&destruct_maplEstringcOintgR);
      instance.AdoptCollectionProxyInfo( ::ROOT::TCollectionProxyInfo::Generate( ::ROOT::TCollectionProxyInfo::MapInsert< map<string,int> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const map<string,int>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void maplEstringcOintgR_Dictionary() {
      ::ROOTDict::GenerateInitInstanceLocal((const map<string,int>*)0x0)->GetClass();
   }

} // end of namespace ROOTDict

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_maplEstringcOintgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) map<string,int> : new map<string,int>;
   }
   static void *newArray_maplEstringcOintgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) map<string,int>[nElements] : new map<string,int>[nElements];
   }
   // Wrapper around operator delete
   static void delete_maplEstringcOintgR(void *p) {
      delete ((map<string,int>*)p);
   }
   static void deleteArray_maplEstringcOintgR(void *p) {
      delete [] ((map<string,int>*)p);
   }
   static void destruct_maplEstringcOintgR(void *p) {
      typedef map<string,int> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class map<string,int>

namespace ROOTDict {
   void maplEstringcOpairlEvoidmUcOintgRsPgR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void maplEstringcOpairlEvoidmUcOintgRsPgR_Dictionary();
   static void *new_maplEstringcOpairlEvoidmUcOintgRsPgR(void *p = 0);
   static void *newArray_maplEstringcOpairlEvoidmUcOintgRsPgR(Long_t size, void *p);
   static void delete_maplEstringcOpairlEvoidmUcOintgRsPgR(void *p);
   static void deleteArray_maplEstringcOpairlEvoidmUcOintgRsPgR(void *p);
   static void destruct_maplEstringcOpairlEvoidmUcOintgRsPgR(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const map<string,pair<void*,int> >*)
   {
      map<string,pair<void*,int> > *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(map<string,pair<void*,int> >),0);
      static ::ROOT::TGenericClassInfo 
         instance("map<string,pair<void*,int> >", -2, "prec_stl/map", 63,
                  typeid(map<string,pair<void*,int> >), ::ROOT::DefineBehavior(ptr, ptr),
                  0, &maplEstringcOpairlEvoidmUcOintgRsPgR_Dictionary, isa_proxy, 0,
                  sizeof(map<string,pair<void*,int> >) );
      instance.SetNew(&new_maplEstringcOpairlEvoidmUcOintgRsPgR);
      instance.SetNewArray(&newArray_maplEstringcOpairlEvoidmUcOintgRsPgR);
      instance.SetDelete(&delete_maplEstringcOpairlEvoidmUcOintgRsPgR);
      instance.SetDeleteArray(&deleteArray_maplEstringcOpairlEvoidmUcOintgRsPgR);
      instance.SetDestructor(&destruct_maplEstringcOpairlEvoidmUcOintgRsPgR);
      instance.AdoptCollectionProxyInfo( ::ROOT::TCollectionProxyInfo::Generate( ::ROOT::TCollectionProxyInfo::MapInsert< map<string,pair<void*,int> > >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const map<string,pair<void*,int> >*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void maplEstringcOpairlEvoidmUcOintgRsPgR_Dictionary() {
      ::ROOTDict::GenerateInitInstanceLocal((const map<string,pair<void*,int> >*)0x0)->GetClass();
   }

} // end of namespace ROOTDict

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_maplEstringcOpairlEvoidmUcOintgRsPgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) map<string,pair<void*,int> > : new map<string,pair<void*,int> >;
   }
   static void *newArray_maplEstringcOpairlEvoidmUcOintgRsPgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) map<string,pair<void*,int> >[nElements] : new map<string,pair<void*,int> >[nElements];
   }
   // Wrapper around operator delete
   static void delete_maplEstringcOpairlEvoidmUcOintgRsPgR(void *p) {
      delete ((map<string,pair<void*,int> >*)p);
   }
   static void deleteArray_maplEstringcOpairlEvoidmUcOintgRsPgR(void *p) {
      delete [] ((map<string,pair<void*,int> >*)p);
   }
   static void destruct_maplEstringcOpairlEvoidmUcOintgRsPgR(void *p) {
      typedef map<string,pair<void*,int> > current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class map<string,pair<void*,int> >

namespace ROOTDict {
   void maplEstringcOstringgR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void maplEstringcOstringgR_Dictionary();
   static void *new_maplEstringcOstringgR(void *p = 0);
   static void *newArray_maplEstringcOstringgR(Long_t size, void *p);
   static void delete_maplEstringcOstringgR(void *p);
   static void deleteArray_maplEstringcOstringgR(void *p);
   static void destruct_maplEstringcOstringgR(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const map<string,string>*)
   {
      map<string,string> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(map<string,string>),0);
      static ::ROOT::TGenericClassInfo 
         instance("map<string,string>", -2, "prec_stl/map", 63,
                  typeid(map<string,string>), ::ROOT::DefineBehavior(ptr, ptr),
                  0, &maplEstringcOstringgR_Dictionary, isa_proxy, 0,
                  sizeof(map<string,string>) );
      instance.SetNew(&new_maplEstringcOstringgR);
      instance.SetNewArray(&newArray_maplEstringcOstringgR);
      instance.SetDelete(&delete_maplEstringcOstringgR);
      instance.SetDeleteArray(&deleteArray_maplEstringcOstringgR);
      instance.SetDestructor(&destruct_maplEstringcOstringgR);
      instance.AdoptCollectionProxyInfo( ::ROOT::TCollectionProxyInfo::Generate( ::ROOT::TCollectionProxyInfo::MapInsert< map<string,string> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const map<string,string>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void maplEstringcOstringgR_Dictionary() {
      ::ROOTDict::GenerateInitInstanceLocal((const map<string,string>*)0x0)->GetClass();
   }

} // end of namespace ROOTDict

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_maplEstringcOstringgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) map<string,string> : new map<string,string>;
   }
   static void *newArray_maplEstringcOstringgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) map<string,string>[nElements] : new map<string,string>[nElements];
   }
   // Wrapper around operator delete
   static void delete_maplEstringcOstringgR(void *p) {
      delete ((map<string,string>*)p);
   }
   static void deleteArray_maplEstringcOstringgR(void *p) {
      delete [] ((map<string,string>*)p);
   }
   static void destruct_maplEstringcOstringgR(void *p) {
      typedef map<string,string> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class map<string,string>

namespace ROOTDict {
   void vectorlEPythia8cLcLDecayChannelgR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void vectorlEPythia8cLcLDecayChannelgR_Dictionary();
   static void *new_vectorlEPythia8cLcLDecayChannelgR(void *p = 0);
   static void *newArray_vectorlEPythia8cLcLDecayChannelgR(Long_t size, void *p);
   static void delete_vectorlEPythia8cLcLDecayChannelgR(void *p);
   static void deleteArray_vectorlEPythia8cLcLDecayChannelgR(void *p);
   static void destruct_vectorlEPythia8cLcLDecayChannelgR(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const vector<Pythia8::DecayChannel>*)
   {
      vector<Pythia8::DecayChannel> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(vector<Pythia8::DecayChannel>),0);
      static ::ROOT::TGenericClassInfo 
         instance("vector<Pythia8::DecayChannel>", -2, "prec_stl/vector", 49,
                  typeid(vector<Pythia8::DecayChannel>), ::ROOT::DefineBehavior(ptr, ptr),
                  0, &vectorlEPythia8cLcLDecayChannelgR_Dictionary, isa_proxy, 0,
                  sizeof(vector<Pythia8::DecayChannel>) );
      instance.SetNew(&new_vectorlEPythia8cLcLDecayChannelgR);
      instance.SetNewArray(&newArray_vectorlEPythia8cLcLDecayChannelgR);
      instance.SetDelete(&delete_vectorlEPythia8cLcLDecayChannelgR);
      instance.SetDeleteArray(&deleteArray_vectorlEPythia8cLcLDecayChannelgR);
      instance.SetDestructor(&destruct_vectorlEPythia8cLcLDecayChannelgR);
      instance.AdoptCollectionProxyInfo( ::ROOT::TCollectionProxyInfo::Generate( ::ROOT::TCollectionProxyInfo::Pushback< vector<Pythia8::DecayChannel> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const vector<Pythia8::DecayChannel>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void vectorlEPythia8cLcLDecayChannelgR_Dictionary() {
      ::ROOTDict::GenerateInitInstanceLocal((const vector<Pythia8::DecayChannel>*)0x0)->GetClass();
   }

} // end of namespace ROOTDict

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_vectorlEPythia8cLcLDecayChannelgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<Pythia8::DecayChannel> : new vector<Pythia8::DecayChannel>;
   }
   static void *newArray_vectorlEPythia8cLcLDecayChannelgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<Pythia8::DecayChannel>[nElements] : new vector<Pythia8::DecayChannel>[nElements];
   }
   // Wrapper around operator delete
   static void delete_vectorlEPythia8cLcLDecayChannelgR(void *p) {
      delete ((vector<Pythia8::DecayChannel>*)p);
   }
   static void deleteArray_vectorlEPythia8cLcLDecayChannelgR(void *p) {
      delete [] ((vector<Pythia8::DecayChannel>*)p);
   }
   static void destruct_vectorlEPythia8cLcLDecayChannelgR(void *p) {
      typedef vector<Pythia8::DecayChannel> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class vector<Pythia8::DecayChannel>

namespace ROOTDict {
   void vectorlEPythia8cLcLInBeamgR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void vectorlEPythia8cLcLInBeamgR_Dictionary();
   static void *new_vectorlEPythia8cLcLInBeamgR(void *p = 0);
   static void *newArray_vectorlEPythia8cLcLInBeamgR(Long_t size, void *p);
   static void delete_vectorlEPythia8cLcLInBeamgR(void *p);
   static void deleteArray_vectorlEPythia8cLcLInBeamgR(void *p);
   static void destruct_vectorlEPythia8cLcLInBeamgR(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const vector<Pythia8::InBeam>*)
   {
      vector<Pythia8::InBeam> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(vector<Pythia8::InBeam>),0);
      static ::ROOT::TGenericClassInfo 
         instance("vector<Pythia8::InBeam>", -2, "prec_stl/vector", 49,
                  typeid(vector<Pythia8::InBeam>), ::ROOT::DefineBehavior(ptr, ptr),
                  0, &vectorlEPythia8cLcLInBeamgR_Dictionary, isa_proxy, 0,
                  sizeof(vector<Pythia8::InBeam>) );
      instance.SetNew(&new_vectorlEPythia8cLcLInBeamgR);
      instance.SetNewArray(&newArray_vectorlEPythia8cLcLInBeamgR);
      instance.SetDelete(&delete_vectorlEPythia8cLcLInBeamgR);
      instance.SetDeleteArray(&deleteArray_vectorlEPythia8cLcLInBeamgR);
      instance.SetDestructor(&destruct_vectorlEPythia8cLcLInBeamgR);
      instance.AdoptCollectionProxyInfo( ::ROOT::TCollectionProxyInfo::Generate( ::ROOT::TCollectionProxyInfo::Pushback< vector<Pythia8::InBeam> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const vector<Pythia8::InBeam>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void vectorlEPythia8cLcLInBeamgR_Dictionary() {
      ::ROOTDict::GenerateInitInstanceLocal((const vector<Pythia8::InBeam>*)0x0)->GetClass();
   }

} // end of namespace ROOTDict

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_vectorlEPythia8cLcLInBeamgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<Pythia8::InBeam> : new vector<Pythia8::InBeam>;
   }
   static void *newArray_vectorlEPythia8cLcLInBeamgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<Pythia8::InBeam>[nElements] : new vector<Pythia8::InBeam>[nElements];
   }
   // Wrapper around operator delete
   static void delete_vectorlEPythia8cLcLInBeamgR(void *p) {
      delete ((vector<Pythia8::InBeam>*)p);
   }
   static void deleteArray_vectorlEPythia8cLcLInBeamgR(void *p) {
      delete [] ((vector<Pythia8::InBeam>*)p);
   }
   static void destruct_vectorlEPythia8cLcLInBeamgR(void *p) {
      typedef vector<Pythia8::InBeam> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class vector<Pythia8::InBeam>

namespace ROOTDict {
   void vectorlEPythia8cLcLInPairgR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void vectorlEPythia8cLcLInPairgR_Dictionary();
   static void *new_vectorlEPythia8cLcLInPairgR(void *p = 0);
   static void *newArray_vectorlEPythia8cLcLInPairgR(Long_t size, void *p);
   static void delete_vectorlEPythia8cLcLInPairgR(void *p);
   static void deleteArray_vectorlEPythia8cLcLInPairgR(void *p);
   static void destruct_vectorlEPythia8cLcLInPairgR(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const vector<Pythia8::InPair>*)
   {
      vector<Pythia8::InPair> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(vector<Pythia8::InPair>),0);
      static ::ROOT::TGenericClassInfo 
         instance("vector<Pythia8::InPair>", -2, "prec_stl/vector", 49,
                  typeid(vector<Pythia8::InPair>), ::ROOT::DefineBehavior(ptr, ptr),
                  0, &vectorlEPythia8cLcLInPairgR_Dictionary, isa_proxy, 0,
                  sizeof(vector<Pythia8::InPair>) );
      instance.SetNew(&new_vectorlEPythia8cLcLInPairgR);
      instance.SetNewArray(&newArray_vectorlEPythia8cLcLInPairgR);
      instance.SetDelete(&delete_vectorlEPythia8cLcLInPairgR);
      instance.SetDeleteArray(&deleteArray_vectorlEPythia8cLcLInPairgR);
      instance.SetDestructor(&destruct_vectorlEPythia8cLcLInPairgR);
      instance.AdoptCollectionProxyInfo( ::ROOT::TCollectionProxyInfo::Generate( ::ROOT::TCollectionProxyInfo::Pushback< vector<Pythia8::InPair> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const vector<Pythia8::InPair>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void vectorlEPythia8cLcLInPairgR_Dictionary() {
      ::ROOTDict::GenerateInitInstanceLocal((const vector<Pythia8::InPair>*)0x0)->GetClass();
   }

} // end of namespace ROOTDict

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_vectorlEPythia8cLcLInPairgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<Pythia8::InPair> : new vector<Pythia8::InPair>;
   }
   static void *newArray_vectorlEPythia8cLcLInPairgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<Pythia8::InPair>[nElements] : new vector<Pythia8::InPair>[nElements];
   }
   // Wrapper around operator delete
   static void delete_vectorlEPythia8cLcLInPairgR(void *p) {
      delete ((vector<Pythia8::InPair>*)p);
   }
   static void deleteArray_vectorlEPythia8cLcLInPairgR(void *p) {
      delete [] ((vector<Pythia8::InPair>*)p);
   }
   static void destruct_vectorlEPythia8cLcLInPairgR(void *p) {
      typedef vector<Pythia8::InPair> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class vector<Pythia8::InPair>

namespace ROOTDict {
   void vectorlEPythia8cLcLJunctiongR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void vectorlEPythia8cLcLJunctiongR_Dictionary();
   static void *new_vectorlEPythia8cLcLJunctiongR(void *p = 0);
   static void *newArray_vectorlEPythia8cLcLJunctiongR(Long_t size, void *p);
   static void delete_vectorlEPythia8cLcLJunctiongR(void *p);
   static void deleteArray_vectorlEPythia8cLcLJunctiongR(void *p);
   static void destruct_vectorlEPythia8cLcLJunctiongR(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const vector<Pythia8::Junction>*)
   {
      vector<Pythia8::Junction> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(vector<Pythia8::Junction>),0);
      static ::ROOT::TGenericClassInfo 
         instance("vector<Pythia8::Junction>", -2, "prec_stl/vector", 49,
                  typeid(vector<Pythia8::Junction>), ::ROOT::DefineBehavior(ptr, ptr),
                  0, &vectorlEPythia8cLcLJunctiongR_Dictionary, isa_proxy, 0,
                  sizeof(vector<Pythia8::Junction>) );
      instance.SetNew(&new_vectorlEPythia8cLcLJunctiongR);
      instance.SetNewArray(&newArray_vectorlEPythia8cLcLJunctiongR);
      instance.SetDelete(&delete_vectorlEPythia8cLcLJunctiongR);
      instance.SetDeleteArray(&deleteArray_vectorlEPythia8cLcLJunctiongR);
      instance.SetDestructor(&destruct_vectorlEPythia8cLcLJunctiongR);
      instance.AdoptCollectionProxyInfo( ::ROOT::TCollectionProxyInfo::Generate( ::ROOT::TCollectionProxyInfo::Pushback< vector<Pythia8::Junction> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const vector<Pythia8::Junction>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void vectorlEPythia8cLcLJunctiongR_Dictionary() {
      ::ROOTDict::GenerateInitInstanceLocal((const vector<Pythia8::Junction>*)0x0)->GetClass();
   }

} // end of namespace ROOTDict

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_vectorlEPythia8cLcLJunctiongR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<Pythia8::Junction> : new vector<Pythia8::Junction>;
   }
   static void *newArray_vectorlEPythia8cLcLJunctiongR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<Pythia8::Junction>[nElements] : new vector<Pythia8::Junction>[nElements];
   }
   // Wrapper around operator delete
   static void delete_vectorlEPythia8cLcLJunctiongR(void *p) {
      delete ((vector<Pythia8::Junction>*)p);
   }
   static void deleteArray_vectorlEPythia8cLcLJunctiongR(void *p) {
      delete [] ((vector<Pythia8::Junction>*)p);
   }
   static void destruct_vectorlEPythia8cLcLJunctiongR(void *p) {
      typedef vector<Pythia8::Junction> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class vector<Pythia8::Junction>

namespace ROOTDict {
   void vectorlEPythia8cLcLLHAgeneratorgR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void vectorlEPythia8cLcLLHAgeneratorgR_Dictionary();
   static void *new_vectorlEPythia8cLcLLHAgeneratorgR(void *p = 0);
   static void *newArray_vectorlEPythia8cLcLLHAgeneratorgR(Long_t size, void *p);
   static void delete_vectorlEPythia8cLcLLHAgeneratorgR(void *p);
   static void deleteArray_vectorlEPythia8cLcLLHAgeneratorgR(void *p);
   static void destruct_vectorlEPythia8cLcLLHAgeneratorgR(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const vector<Pythia8::LHAgenerator>*)
   {
      vector<Pythia8::LHAgenerator> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(vector<Pythia8::LHAgenerator>),0);
      static ::ROOT::TGenericClassInfo 
         instance("vector<Pythia8::LHAgenerator>", -2, "prec_stl/vector", 49,
                  typeid(vector<Pythia8::LHAgenerator>), ::ROOT::DefineBehavior(ptr, ptr),
                  0, &vectorlEPythia8cLcLLHAgeneratorgR_Dictionary, isa_proxy, 0,
                  sizeof(vector<Pythia8::LHAgenerator>) );
      instance.SetNew(&new_vectorlEPythia8cLcLLHAgeneratorgR);
      instance.SetNewArray(&newArray_vectorlEPythia8cLcLLHAgeneratorgR);
      instance.SetDelete(&delete_vectorlEPythia8cLcLLHAgeneratorgR);
      instance.SetDeleteArray(&deleteArray_vectorlEPythia8cLcLLHAgeneratorgR);
      instance.SetDestructor(&destruct_vectorlEPythia8cLcLLHAgeneratorgR);
      instance.AdoptCollectionProxyInfo( ::ROOT::TCollectionProxyInfo::Generate( ::ROOT::TCollectionProxyInfo::Pushback< vector<Pythia8::LHAgenerator> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const vector<Pythia8::LHAgenerator>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void vectorlEPythia8cLcLLHAgeneratorgR_Dictionary() {
      ::ROOTDict::GenerateInitInstanceLocal((const vector<Pythia8::LHAgenerator>*)0x0)->GetClass();
   }

} // end of namespace ROOTDict

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_vectorlEPythia8cLcLLHAgeneratorgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<Pythia8::LHAgenerator> : new vector<Pythia8::LHAgenerator>;
   }
   static void *newArray_vectorlEPythia8cLcLLHAgeneratorgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<Pythia8::LHAgenerator>[nElements] : new vector<Pythia8::LHAgenerator>[nElements];
   }
   // Wrapper around operator delete
   static void delete_vectorlEPythia8cLcLLHAgeneratorgR(void *p) {
      delete ((vector<Pythia8::LHAgenerator>*)p);
   }
   static void deleteArray_vectorlEPythia8cLcLLHAgeneratorgR(void *p) {
      delete [] ((vector<Pythia8::LHAgenerator>*)p);
   }
   static void destruct_vectorlEPythia8cLcLLHAgeneratorgR(void *p) {
      typedef vector<Pythia8::LHAgenerator> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class vector<Pythia8::LHAgenerator>

namespace ROOTDict {
   void vectorlEPythia8cLcLParticlegR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void vectorlEPythia8cLcLParticlegR_Dictionary();
   static void *new_vectorlEPythia8cLcLParticlegR(void *p = 0);
   static void *newArray_vectorlEPythia8cLcLParticlegR(Long_t size, void *p);
   static void delete_vectorlEPythia8cLcLParticlegR(void *p);
   static void deleteArray_vectorlEPythia8cLcLParticlegR(void *p);
   static void destruct_vectorlEPythia8cLcLParticlegR(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const vector<Pythia8::Particle>*)
   {
      vector<Pythia8::Particle> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(vector<Pythia8::Particle>),0);
      static ::ROOT::TGenericClassInfo 
         instance("vector<Pythia8::Particle>", -2, "prec_stl/vector", 49,
                  typeid(vector<Pythia8::Particle>), ::ROOT::DefineBehavior(ptr, ptr),
                  0, &vectorlEPythia8cLcLParticlegR_Dictionary, isa_proxy, 0,
                  sizeof(vector<Pythia8::Particle>) );
      instance.SetNew(&new_vectorlEPythia8cLcLParticlegR);
      instance.SetNewArray(&newArray_vectorlEPythia8cLcLParticlegR);
      instance.SetDelete(&delete_vectorlEPythia8cLcLParticlegR);
      instance.SetDeleteArray(&deleteArray_vectorlEPythia8cLcLParticlegR);
      instance.SetDestructor(&destruct_vectorlEPythia8cLcLParticlegR);
      instance.AdoptCollectionProxyInfo( ::ROOT::TCollectionProxyInfo::Generate( ::ROOT::TCollectionProxyInfo::Pushback< vector<Pythia8::Particle> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const vector<Pythia8::Particle>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void vectorlEPythia8cLcLParticlegR_Dictionary() {
      ::ROOTDict::GenerateInitInstanceLocal((const vector<Pythia8::Particle>*)0x0)->GetClass();
   }

} // end of namespace ROOTDict

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_vectorlEPythia8cLcLParticlegR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<Pythia8::Particle> : new vector<Pythia8::Particle>;
   }
   static void *newArray_vectorlEPythia8cLcLParticlegR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<Pythia8::Particle>[nElements] : new vector<Pythia8::Particle>[nElements];
   }
   // Wrapper around operator delete
   static void delete_vectorlEPythia8cLcLParticlegR(void *p) {
      delete ((vector<Pythia8::Particle>*)p);
   }
   static void deleteArray_vectorlEPythia8cLcLParticlegR(void *p) {
      delete [] ((vector<Pythia8::Particle>*)p);
   }
   static void destruct_vectorlEPythia8cLcLParticlegR(void *p) {
      typedef vector<Pythia8::Particle> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class vector<Pythia8::Particle>

namespace ROOTDict {
   void vectorlEPythia8cLcLResonanceWidthsmUgR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void vectorlEPythia8cLcLResonanceWidthsmUgR_Dictionary();
   static void *new_vectorlEPythia8cLcLResonanceWidthsmUgR(void *p = 0);
   static void *newArray_vectorlEPythia8cLcLResonanceWidthsmUgR(Long_t size, void *p);
   static void delete_vectorlEPythia8cLcLResonanceWidthsmUgR(void *p);
   static void deleteArray_vectorlEPythia8cLcLResonanceWidthsmUgR(void *p);
   static void destruct_vectorlEPythia8cLcLResonanceWidthsmUgR(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const vector<Pythia8::ResonanceWidths*>*)
   {
      vector<Pythia8::ResonanceWidths*> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(vector<Pythia8::ResonanceWidths*>),0);
      static ::ROOT::TGenericClassInfo 
         instance("vector<Pythia8::ResonanceWidths*>", -2, "prec_stl/vector", 49,
                  typeid(vector<Pythia8::ResonanceWidths*>), ::ROOT::DefineBehavior(ptr, ptr),
                  0, &vectorlEPythia8cLcLResonanceWidthsmUgR_Dictionary, isa_proxy, 0,
                  sizeof(vector<Pythia8::ResonanceWidths*>) );
      instance.SetNew(&new_vectorlEPythia8cLcLResonanceWidthsmUgR);
      instance.SetNewArray(&newArray_vectorlEPythia8cLcLResonanceWidthsmUgR);
      instance.SetDelete(&delete_vectorlEPythia8cLcLResonanceWidthsmUgR);
      instance.SetDeleteArray(&deleteArray_vectorlEPythia8cLcLResonanceWidthsmUgR);
      instance.SetDestructor(&destruct_vectorlEPythia8cLcLResonanceWidthsmUgR);
      instance.AdoptCollectionProxyInfo( ::ROOT::TCollectionProxyInfo::Generate( ::ROOT::TCollectionProxyInfo::Pushback< vector<Pythia8::ResonanceWidths*> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const vector<Pythia8::ResonanceWidths*>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void vectorlEPythia8cLcLResonanceWidthsmUgR_Dictionary() {
      ::ROOTDict::GenerateInitInstanceLocal((const vector<Pythia8::ResonanceWidths*>*)0x0)->GetClass();
   }

} // end of namespace ROOTDict

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_vectorlEPythia8cLcLResonanceWidthsmUgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<Pythia8::ResonanceWidths*> : new vector<Pythia8::ResonanceWidths*>;
   }
   static void *newArray_vectorlEPythia8cLcLResonanceWidthsmUgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<Pythia8::ResonanceWidths*>[nElements] : new vector<Pythia8::ResonanceWidths*>[nElements];
   }
   // Wrapper around operator delete
   static void delete_vectorlEPythia8cLcLResonanceWidthsmUgR(void *p) {
      delete ((vector<Pythia8::ResonanceWidths*>*)p);
   }
   static void deleteArray_vectorlEPythia8cLcLResonanceWidthsmUgR(void *p) {
      delete [] ((vector<Pythia8::ResonanceWidths*>*)p);
   }
   static void destruct_vectorlEPythia8cLcLResonanceWidthsmUgR(void *p) {
      typedef vector<Pythia8::ResonanceWidths*> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class vector<Pythia8::ResonanceWidths*>

namespace ROOTDict {
   void vectorlEPythia8cLcLResonanceWidthsgR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void vectorlEPythia8cLcLResonanceWidthsgR_Dictionary();
   static void *new_vectorlEPythia8cLcLResonanceWidthsgR(void *p = 0);
   static void *newArray_vectorlEPythia8cLcLResonanceWidthsgR(Long_t size, void *p);
   static void delete_vectorlEPythia8cLcLResonanceWidthsgR(void *p);
   static void deleteArray_vectorlEPythia8cLcLResonanceWidthsgR(void *p);
   static void destruct_vectorlEPythia8cLcLResonanceWidthsgR(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const vector<Pythia8::ResonanceWidths>*)
   {
      vector<Pythia8::ResonanceWidths> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(vector<Pythia8::ResonanceWidths>),0);
      static ::ROOT::TGenericClassInfo 
         instance("vector<Pythia8::ResonanceWidths>", -2, "prec_stl/vector", 49,
                  typeid(vector<Pythia8::ResonanceWidths>), ::ROOT::DefineBehavior(ptr, ptr),
                  0, &vectorlEPythia8cLcLResonanceWidthsgR_Dictionary, isa_proxy, 4,
                  sizeof(vector<Pythia8::ResonanceWidths>) );
      instance.SetNew(&new_vectorlEPythia8cLcLResonanceWidthsgR);
      instance.SetNewArray(&newArray_vectorlEPythia8cLcLResonanceWidthsgR);
      instance.SetDelete(&delete_vectorlEPythia8cLcLResonanceWidthsgR);
      instance.SetDeleteArray(&deleteArray_vectorlEPythia8cLcLResonanceWidthsgR);
      instance.SetDestructor(&destruct_vectorlEPythia8cLcLResonanceWidthsgR);
      instance.AdoptCollectionProxyInfo( ::ROOT::TCollectionProxyInfo::Generate( ::ROOT::TCollectionProxyInfo::Pushback< vector<Pythia8::ResonanceWidths> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const vector<Pythia8::ResonanceWidths>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void vectorlEPythia8cLcLResonanceWidthsgR_Dictionary() {
      ::ROOTDict::GenerateInitInstanceLocal((const vector<Pythia8::ResonanceWidths>*)0x0)->GetClass();
   }

} // end of namespace ROOTDict

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_vectorlEPythia8cLcLResonanceWidthsgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<Pythia8::ResonanceWidths> : new vector<Pythia8::ResonanceWidths>;
   }
   static void *newArray_vectorlEPythia8cLcLResonanceWidthsgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<Pythia8::ResonanceWidths>[nElements] : new vector<Pythia8::ResonanceWidths>[nElements];
   }
   // Wrapper around operator delete
   static void delete_vectorlEPythia8cLcLResonanceWidthsgR(void *p) {
      delete ((vector<Pythia8::ResonanceWidths>*)p);
   }
   static void deleteArray_vectorlEPythia8cLcLResonanceWidthsgR(void *p) {
      delete [] ((vector<Pythia8::ResonanceWidths>*)p);
   }
   static void destruct_vectorlEPythia8cLcLResonanceWidthsgR(void *p) {
      typedef vector<Pythia8::ResonanceWidths> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class vector<Pythia8::ResonanceWidths>

namespace ROOTDict {
   void vectorlEPythia8cLcLSigmaProcessmUgR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void vectorlEPythia8cLcLSigmaProcessmUgR_Dictionary();
   static void *new_vectorlEPythia8cLcLSigmaProcessmUgR(void *p = 0);
   static void *newArray_vectorlEPythia8cLcLSigmaProcessmUgR(Long_t size, void *p);
   static void delete_vectorlEPythia8cLcLSigmaProcessmUgR(void *p);
   static void deleteArray_vectorlEPythia8cLcLSigmaProcessmUgR(void *p);
   static void destruct_vectorlEPythia8cLcLSigmaProcessmUgR(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const vector<Pythia8::SigmaProcess*>*)
   {
      vector<Pythia8::SigmaProcess*> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(vector<Pythia8::SigmaProcess*>),0);
      static ::ROOT::TGenericClassInfo 
         instance("vector<Pythia8::SigmaProcess*>", -2, "prec_stl/vector", 49,
                  typeid(vector<Pythia8::SigmaProcess*>), ::ROOT::DefineBehavior(ptr, ptr),
                  0, &vectorlEPythia8cLcLSigmaProcessmUgR_Dictionary, isa_proxy, 0,
                  sizeof(vector<Pythia8::SigmaProcess*>) );
      instance.SetNew(&new_vectorlEPythia8cLcLSigmaProcessmUgR);
      instance.SetNewArray(&newArray_vectorlEPythia8cLcLSigmaProcessmUgR);
      instance.SetDelete(&delete_vectorlEPythia8cLcLSigmaProcessmUgR);
      instance.SetDeleteArray(&deleteArray_vectorlEPythia8cLcLSigmaProcessmUgR);
      instance.SetDestructor(&destruct_vectorlEPythia8cLcLSigmaProcessmUgR);
      instance.AdoptCollectionProxyInfo( ::ROOT::TCollectionProxyInfo::Generate( ::ROOT::TCollectionProxyInfo::Pushback< vector<Pythia8::SigmaProcess*> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const vector<Pythia8::SigmaProcess*>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void vectorlEPythia8cLcLSigmaProcessmUgR_Dictionary() {
      ::ROOTDict::GenerateInitInstanceLocal((const vector<Pythia8::SigmaProcess*>*)0x0)->GetClass();
   }

} // end of namespace ROOTDict

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_vectorlEPythia8cLcLSigmaProcessmUgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<Pythia8::SigmaProcess*> : new vector<Pythia8::SigmaProcess*>;
   }
   static void *newArray_vectorlEPythia8cLcLSigmaProcessmUgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<Pythia8::SigmaProcess*>[nElements] : new vector<Pythia8::SigmaProcess*>[nElements];
   }
   // Wrapper around operator delete
   static void delete_vectorlEPythia8cLcLSigmaProcessmUgR(void *p) {
      delete ((vector<Pythia8::SigmaProcess*>*)p);
   }
   static void deleteArray_vectorlEPythia8cLcLSigmaProcessmUgR(void *p) {
      delete [] ((vector<Pythia8::SigmaProcess*>*)p);
   }
   static void destruct_vectorlEPythia8cLcLSigmaProcessmUgR(void *p) {
      typedef vector<Pythia8::SigmaProcess*> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class vector<Pythia8::SigmaProcess*>

namespace ROOTDict {
   void vectorlEdoublegR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void vectorlEdoublegR_Dictionary();
   static void *new_vectorlEdoublegR(void *p = 0);
   static void *newArray_vectorlEdoublegR(Long_t size, void *p);
   static void delete_vectorlEdoublegR(void *p);
   static void deleteArray_vectorlEdoublegR(void *p);
   static void destruct_vectorlEdoublegR(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const vector<double>*)
   {
      vector<double> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(vector<double>),0);
      static ::ROOT::TGenericClassInfo 
         instance("vector<double>", -2, "vector.dll", 0,
                  typeid(vector<double>), ::ROOT::DefineBehavior(ptr, ptr),
                  0, &vectorlEdoublegR_Dictionary, isa_proxy, 0,
                  sizeof(vector<double>) );
      instance.SetNew(&new_vectorlEdoublegR);
      instance.SetNewArray(&newArray_vectorlEdoublegR);
      instance.SetDelete(&delete_vectorlEdoublegR);
      instance.SetDeleteArray(&deleteArray_vectorlEdoublegR);
      instance.SetDestructor(&destruct_vectorlEdoublegR);
      instance.AdoptCollectionProxyInfo( ::ROOT::TCollectionProxyInfo::Generate( ::ROOT::TCollectionProxyInfo::Pushback< vector<double> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const vector<double>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void vectorlEdoublegR_Dictionary() {
      ::ROOTDict::GenerateInitInstanceLocal((const vector<double>*)0x0)->GetClass();
   }

} // end of namespace ROOTDict

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_vectorlEdoublegR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<double> : new vector<double>;
   }
   static void *newArray_vectorlEdoublegR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<double>[nElements] : new vector<double>[nElements];
   }
   // Wrapper around operator delete
   static void delete_vectorlEdoublegR(void *p) {
      delete ((vector<double>*)p);
   }
   static void deleteArray_vectorlEdoublegR(void *p) {
      delete [] ((vector<double>*)p);
   }
   static void destruct_vectorlEdoublegR(void *p) {
      typedef vector<double> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class vector<double>

namespace ROOTDict {
   void vectorlEintgR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void vectorlEintgR_Dictionary();
   static void *new_vectorlEintgR(void *p = 0);
   static void *newArray_vectorlEintgR(Long_t size, void *p);
   static void delete_vectorlEintgR(void *p);
   static void deleteArray_vectorlEintgR(void *p);
   static void destruct_vectorlEintgR(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const vector<int>*)
   {
      vector<int> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(vector<int>),0);
      static ::ROOT::TGenericClassInfo 
         instance("vector<int>", -2, "prec_stl/vector", 49,
                  typeid(vector<int>), ::ROOT::DefineBehavior(ptr, ptr),
                  0, &vectorlEintgR_Dictionary, isa_proxy, 0,
                  sizeof(vector<int>) );
      instance.SetNew(&new_vectorlEintgR);
      instance.SetNewArray(&newArray_vectorlEintgR);
      instance.SetDelete(&delete_vectorlEintgR);
      instance.SetDeleteArray(&deleteArray_vectorlEintgR);
      instance.SetDestructor(&destruct_vectorlEintgR);
      instance.AdoptCollectionProxyInfo( ::ROOT::TCollectionProxyInfo::Generate( ::ROOT::TCollectionProxyInfo::Pushback< vector<int> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const vector<int>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void vectorlEintgR_Dictionary() {
      ::ROOTDict::GenerateInitInstanceLocal((const vector<int>*)0x0)->GetClass();
   }

} // end of namespace ROOTDict

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_vectorlEintgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<int> : new vector<int>;
   }
   static void *newArray_vectorlEintgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<int>[nElements] : new vector<int>[nElements];
   }
   // Wrapper around operator delete
   static void delete_vectorlEintgR(void *p) {
      delete ((vector<int>*)p);
   }
   static void deleteArray_vectorlEintgR(void *p) {
      delete [] ((vector<int>*)p);
   }
   static void destruct_vectorlEintgR(void *p) {
      typedef vector<int> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class vector<int>

/********************************************************
* main92Dct.cc
* CAUTION: DON'T CHANGE THIS FILE. THIS FILE IS AUTOMATICALLY GENERATED
*          FROM HEADER FILES LISTED IN G__setup_cpp_environmentXXX().
*          CHANGE THOSE HEADER FILES AND REGENERATE THIS FILE.
********************************************************/

#ifdef G__MEMTEST
#undef malloc
#undef free
#endif

#if defined(__GNUC__) && __GNUC__ >= 4 && ((__GNUC_MINOR__ == 2 && __GNUC_PATCHLEVEL__ >= 1) || (__GNUC_MINOR__ >= 3))
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif

extern "C" void G__cpp_reset_tagtablemain92Dct();

extern "C" void G__set_cpp_environmentmain92Dct() {
  G__add_compiledheader("TObject.h");
  G__add_compiledheader("TMemberInspector.h");
  G__add_compiledheader("main92.h");
  G__cpp_reset_tagtablemain92Dct();
}
#include <new>
extern "C" int G__cpp_dllrevmain92Dct() { return(30051515); }

/*********************************************************
* Member function Interface Method
*********************************************************/

/* Pythia8 */
static int G__main92Dct_497_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) Pythia8::pow2(*(double*) G__Doubleref(&libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_497_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) Pythia8::pow3(*(double*) G__Doubleref(&libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_497_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) Pythia8::pow4(*(double*) G__Doubleref(&libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_497_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) Pythia8::pow5(*(double*) G__Doubleref(&libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_497_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) Pythia8::pow6(*(double*) G__Doubleref(&libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_497_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) Pythia8::sqrtpos(*(double*) G__Doubleref(&libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_497_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) Pythia8::GammaReal((double) G__double(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_497_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         Pythia8::Vec4* pobj;
         Pythia8::Vec4 xobj = Pythia8::operator+(*(Pythia8::Vec4*) libp->para[0].ref, *(Pythia8::Vec4*) libp->para[1].ref);
         pobj = new Pythia8::Vec4(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_497_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         Pythia8::Vec4* pobj;
         Pythia8::Vec4 xobj = Pythia8::operator-(*(Pythia8::Vec4*) libp->para[0].ref, *(Pythia8::Vec4*) libp->para[1].ref);
         pobj = new Pythia8::Vec4(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_497_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         Pythia8::Vec4* pobj;
         Pythia8::Vec4 xobj = Pythia8::operator*((double) G__double(libp->para[0]), *(Pythia8::Vec4*) libp->para[1].ref);
         pobj = new Pythia8::Vec4(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_497_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         Pythia8::Vec4* pobj;
         Pythia8::Vec4 xobj = Pythia8::operator*(*(Pythia8::Vec4*) libp->para[0].ref, (double) G__double(libp->para[1]));
         pobj = new Pythia8::Vec4(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_497_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         Pythia8::Vec4* pobj;
         Pythia8::Vec4 xobj = Pythia8::operator/(*(Pythia8::Vec4*) libp->para[0].ref, (double) G__double(libp->para[1]));
         pobj = new Pythia8::Vec4(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_497_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) Pythia8::operator*(*(Pythia8::Vec4*) libp->para[0].ref, *(Pythia8::Vec4*) libp->para[1].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_497_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) Pythia8::m(*(Pythia8::Vec4*) libp->para[0].ref, *(Pythia8::Vec4*) libp->para[1].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_497_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) Pythia8::m2(*(Pythia8::Vec4*) libp->para[0].ref, *(Pythia8::Vec4*) libp->para[1].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_497_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) Pythia8::dot3(*(Pythia8::Vec4*) libp->para[0].ref, *(Pythia8::Vec4*) libp->para[1].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_497_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         Pythia8::Vec4* pobj;
         Pythia8::Vec4 xobj = Pythia8::cross3(*(Pythia8::Vec4*) libp->para[0].ref, *(Pythia8::Vec4*) libp->para[1].ref);
         pobj = new Pythia8::Vec4(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_497_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) Pythia8::theta(*(Pythia8::Vec4*) libp->para[0].ref, *(Pythia8::Vec4*) libp->para[1].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_497_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) Pythia8::costheta(*(Pythia8::Vec4*) libp->para[0].ref, *(Pythia8::Vec4*) libp->para[1].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_497_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) Pythia8::phi(*(Pythia8::Vec4*) libp->para[0].ref, *(Pythia8::Vec4*) libp->para[1].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_497_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) Pythia8::cosphi(*(Pythia8::Vec4*) libp->para[0].ref, *(Pythia8::Vec4*) libp->para[1].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_497_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) Pythia8::phi(*(Pythia8::Vec4*) libp->para[0].ref, *(Pythia8::Vec4*) libp->para[1].ref
, *(Pythia8::Vec4*) libp->para[2].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_497_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) Pythia8::cosphi(*(Pythia8::Vec4*) libp->para[0].ref, *(Pythia8::Vec4*) libp->para[1].ref
, *(Pythia8::Vec4*) libp->para[2].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_497_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) Pythia8::RRapPhi(*(Pythia8::Vec4*) libp->para[0].ref, *(Pythia8::Vec4*) libp->para[1].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_497_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) Pythia8::REtaPhi(*(Pythia8::Vec4*) libp->para[0].ref, *(Pythia8::Vec4*) libp->para[1].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_497_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ostream& obj = Pythia8::operator<<(*(ostream*) libp->para[0].ref, *(Pythia8::Vec4*) libp->para[1].ref);
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_497_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ostream& obj = Pythia8::operator<<(*(ostream*) libp->para[0].ref, *(Pythia8::RotBstMatrix*) libp->para[1].ref);
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_497_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ostream& obj = Pythia8::operator<<(*(ostream*) libp->para[0].ref, *(Pythia8::Hist*) libp->para[1].ref);
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_497_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      Pythia8::table(*(Pythia8::Hist*) libp->para[0].ref, *(Pythia8::Hist*) libp->para[1].ref
, *(ostream*) libp->para[2].ref, (bool) G__int(libp->para[3])
, (bool) G__int(libp->para[4]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_497_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      Pythia8::table(*(Pythia8::Hist*) libp->para[0].ref, *(Pythia8::Hist*) libp->para[1].ref
, *((string*) G__int(libp->para[2])), (bool) G__int(libp->para[3])
, (bool) G__int(libp->para[4]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_497_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         Pythia8::Hist* pobj;
         Pythia8::Hist xobj = Pythia8::operator+((double) G__double(libp->para[0]), *(Pythia8::Hist*) libp->para[1].ref);
         pobj = new Pythia8::Hist(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_497_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         Pythia8::Hist* pobj;
         Pythia8::Hist xobj = Pythia8::operator+(*(Pythia8::Hist*) libp->para[0].ref, (double) G__double(libp->para[1]));
         pobj = new Pythia8::Hist(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_497_0_33(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         Pythia8::Hist* pobj;
         Pythia8::Hist xobj = Pythia8::operator+(*(Pythia8::Hist*) libp->para[0].ref, *(Pythia8::Hist*) libp->para[1].ref);
         pobj = new Pythia8::Hist(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_497_0_34(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         Pythia8::Hist* pobj;
         Pythia8::Hist xobj = Pythia8::operator-((double) G__double(libp->para[0]), *(Pythia8::Hist*) libp->para[1].ref);
         pobj = new Pythia8::Hist(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_497_0_35(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         Pythia8::Hist* pobj;
         Pythia8::Hist xobj = Pythia8::operator-(*(Pythia8::Hist*) libp->para[0].ref, (double) G__double(libp->para[1]));
         pobj = new Pythia8::Hist(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_497_0_36(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         Pythia8::Hist* pobj;
         Pythia8::Hist xobj = Pythia8::operator-(*(Pythia8::Hist*) libp->para[0].ref, *(Pythia8::Hist*) libp->para[1].ref);
         pobj = new Pythia8::Hist(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_497_0_37(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         Pythia8::Hist* pobj;
         Pythia8::Hist xobj = Pythia8::operator*((double) G__double(libp->para[0]), *(Pythia8::Hist*) libp->para[1].ref);
         pobj = new Pythia8::Hist(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_497_0_38(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         Pythia8::Hist* pobj;
         Pythia8::Hist xobj = Pythia8::operator*(*(Pythia8::Hist*) libp->para[0].ref, (double) G__double(libp->para[1]));
         pobj = new Pythia8::Hist(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_497_0_39(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         Pythia8::Hist* pobj;
         Pythia8::Hist xobj = Pythia8::operator*(*(Pythia8::Hist*) libp->para[0].ref, *(Pythia8::Hist*) libp->para[1].ref);
         pobj = new Pythia8::Hist(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_497_0_40(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         Pythia8::Hist* pobj;
         Pythia8::Hist xobj = Pythia8::operator/((double) G__double(libp->para[0]), *(Pythia8::Hist*) libp->para[1].ref);
         pobj = new Pythia8::Hist(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_497_0_41(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         Pythia8::Hist* pobj;
         Pythia8::Hist xobj = Pythia8::operator/(*(Pythia8::Hist*) libp->para[0].ref, (double) G__double(libp->para[1]));
         pobj = new Pythia8::Hist(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_497_0_42(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         Pythia8::Hist* pobj;
         Pythia8::Hist xobj = Pythia8::operator/(*(Pythia8::Hist*) libp->para[0].ref, *(Pythia8::Hist*) libp->para[1].ref);
         pobj = new Pythia8::Hist(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_497_0_43(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) Pythia8::m(*(Pythia8::Particle*) libp->para[0].ref, *(Pythia8::Particle*) libp->para[1].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_497_0_44(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) Pythia8::m2(*(Pythia8::Particle*) libp->para[0].ref, *(Pythia8::Particle*) libp->para[1].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_497_0_45(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) Pythia8::dist2Fun((int) G__int(libp->para[0]), *(Pythia8::SingleClusterJet*) libp->para[1].ref
, *(Pythia8::SingleClusterJet*) libp->para[2].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_497_0_46(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         Pythia8::Wave4* pobj;
         Pythia8::Wave4 xobj = Pythia8::operator*(*((Pythia8::complex*) G__int(libp->para[0])), *(Pythia8::Wave4*) libp->para[1].ref);
         pobj = new Pythia8::Wave4(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_497_0_47(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         Pythia8::Wave4* pobj;
         Pythia8::Wave4 xobj = Pythia8::operator*((double) G__double(libp->para[0]), *(Pythia8::Wave4*) libp->para[1].ref);
         pobj = new Pythia8::Wave4(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_497_0_48(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         Pythia8::Wave4* pobj;
         Pythia8::Wave4 xobj = Pythia8::conj(*((Pythia8::Wave4*) G__int(libp->para[0])));
         pobj = new Pythia8::Wave4(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_497_0_49(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         Pythia8::Wave4* pobj;
         Pythia8::Wave4 xobj = Pythia8::epsilon(*((Pythia8::Wave4*) G__int(libp->para[0])), *((Pythia8::Wave4*) G__int(libp->para[1]))
, *((Pythia8::Wave4*) G__int(libp->para[2])));
         pobj = new Pythia8::Wave4(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_497_0_50(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) Pythia8::m2(*((Pythia8::Wave4*) G__int(libp->para[0]))));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_497_0_51(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) Pythia8::m2(*((Pythia8::Wave4*) G__int(libp->para[0])), *((Pythia8::Wave4*) G__int(libp->para[1]))));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_497_0_52(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ostream& obj = Pythia8::operator<<(*(ostream*) libp->para[0].ref, *((Pythia8::Wave4*) G__int(libp->para[1])));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_497_0_53(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         Pythia8::Wave4* pobj;
         Pythia8::Wave4 xobj = Pythia8::operator*(*((Pythia8::Wave4*) G__int(libp->para[0])), *((Pythia8::GammaMatrix*) G__int(libp->para[1])));
         pobj = new Pythia8::Wave4(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_497_0_54(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         Pythia8::GammaMatrix* pobj;
         Pythia8::GammaMatrix xobj = Pythia8::operator*(*((Pythia8::complex*) G__int(libp->para[0])), *((Pythia8::GammaMatrix*) G__int(libp->para[1])));
         pobj = new Pythia8::GammaMatrix(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_497_0_55(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         Pythia8::GammaMatrix* pobj;
         Pythia8::GammaMatrix xobj = Pythia8::operator-(*((Pythia8::complex*) G__int(libp->para[0])), *((Pythia8::GammaMatrix*) G__int(libp->para[1])));
         pobj = new Pythia8::GammaMatrix(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_497_0_56(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         Pythia8::GammaMatrix* pobj;
         Pythia8::GammaMatrix xobj = Pythia8::operator+(*((Pythia8::complex*) G__int(libp->para[0])), *((Pythia8::GammaMatrix*) G__int(libp->para[1])));
         pobj = new Pythia8::GammaMatrix(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_497_0_57(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ostream& obj = Pythia8::operator<<(*(ostream*) libp->para[0].ref, *((Pythia8::GammaMatrix*) G__int(libp->para[1])));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}


/* Pythia8::RndmEngine */
static int G__main92Dct_498_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((Pythia8::RndmEngine*) G__getstructoffset())->flat());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef Pythia8::RndmEngine G__TPythia8cLcLRndmEngine;
static int G__main92Dct_498_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (Pythia8::RndmEngine*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((Pythia8::RndmEngine*) (soff+(sizeof(Pythia8::RndmEngine)*i)))->~G__TPythia8cLcLRndmEngine();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (Pythia8::RndmEngine*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((Pythia8::RndmEngine*) (soff))->~G__TPythia8cLcLRndmEngine();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__main92Dct_498_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   Pythia8::RndmEngine* dest = (Pythia8::RndmEngine*) G__getstructoffset();
   *dest = *(Pythia8::RndmEngine*) libp->para[0].ref;
   const Pythia8::RndmEngine& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* Pythia8::Rndm */
static int G__main92Dct_499_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   Pythia8::Rndm* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new Pythia8::Rndm[n];
     } else {
       p = new((void*) gvp) Pythia8::Rndm[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new Pythia8::Rndm;
     } else {
       p = new((void*) gvp) Pythia8::Rndm;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__main92DctLN_Pythia8cLcLRndm));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_499_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   Pythia8::Rndm* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new Pythia8::Rndm((int) G__int(libp->para[0]));
   } else {
     p = new((void*) gvp) Pythia8::Rndm((int) G__int(libp->para[0]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__main92DctLN_Pythia8cLcLRndm));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_499_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((Pythia8::Rndm*) G__getstructoffset())->rndmEnginePtr((Pythia8::RndmEngine*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_499_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      ((Pythia8::Rndm*) G__getstructoffset())->init((int) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((Pythia8::Rndm*) G__getstructoffset())->init();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_499_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((Pythia8::Rndm*) G__getstructoffset())->flat());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_499_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((Pythia8::Rndm*) G__getstructoffset())->exp());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_499_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((Pythia8::Rndm*) G__getstructoffset())->xexp());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_499_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((Pythia8::Rndm*) G__getstructoffset())->gauss());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_499_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         pair<double,double>* pobj;
         pair<double,double> xobj = ((Pythia8::Rndm*) G__getstructoffset())->gauss2();
         pobj = new pair<double,double>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_499_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((Pythia8::Rndm*) G__getstructoffset())->pick(*(vector<double>*) libp->para[0].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_499_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((Pythia8::Rndm*) G__getstructoffset())->dumpState(*((string*) G__int(libp->para[0]))));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_499_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((Pythia8::Rndm*) G__getstructoffset())->readState(*((string*) G__int(libp->para[0]))));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__main92Dct_499_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   Pythia8::Rndm* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new Pythia8::Rndm(*(Pythia8::Rndm*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__main92DctLN_Pythia8cLcLRndm));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef Pythia8::Rndm G__TPythia8cLcLRndm;
static int G__main92Dct_499_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (Pythia8::Rndm*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((Pythia8::Rndm*) (soff+(sizeof(Pythia8::Rndm)*i)))->~G__TPythia8cLcLRndm();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (Pythia8::Rndm*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((Pythia8::Rndm*) (soff))->~G__TPythia8cLcLRndm();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__main92Dct_499_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   Pythia8::Rndm* dest = (Pythia8::Rndm*) G__getstructoffset();
   *dest = *(Pythia8::Rndm*) libp->para[0].ref;
   const Pythia8::Rndm& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* Pythia8::Vec4 */
static int G__main92Dct_501_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   Pythia8::Vec4* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 4:
     //m: 4
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new Pythia8::Vec4(
(double) G__double(libp->para[0]), (double) G__double(libp->para[1])
, (double) G__double(libp->para[2]), (double) G__double(libp->para[3]));
     } else {
       p = new((void*) gvp) Pythia8::Vec4(
(double) G__double(libp->para[0]), (double) G__double(libp->para[1])
, (double) G__double(libp->para[2]), (double) G__double(libp->para[3]));
     }
     break;
   case 3:
     //m: 3
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new Pythia8::Vec4(
(double) G__double(libp->para[0]), (double) G__double(libp->para[1])
, (double) G__double(libp->para[2]));
     } else {
       p = new((void*) gvp) Pythia8::Vec4(
(double) G__double(libp->para[0]), (double) G__double(libp->para[1])
, (double) G__double(libp->para[2]));
     }
     break;
   case 2:
     //m: 2
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new Pythia8::Vec4((double) G__double(libp->para[0]), (double) G__double(libp->para[1]));
     } else {
       p = new((void*) gvp) Pythia8::Vec4((double) G__double(libp->para[0]), (double) G__double(libp->para[1]));
     }
     break;
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new Pythia8::Vec4((double) G__double(libp->para[0]));
     } else {
       p = new((void*) gvp) Pythia8::Vec4((double) G__double(libp->para[0]));
     }
     break;
   case 0:
     int n = G__getaryconstruct();
     if (n) {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new Pythia8::Vec4[n];
       } else {
         p = new((void*) gvp) Pythia8::Vec4[n];
       }
     } else {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new Pythia8::Vec4;
       } else {
         p = new((void*) gvp) Pythia8::Vec4;
       }
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__main92DctLN_Pythia8cLcLVec4));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_501_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   Pythia8::Vec4* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new Pythia8::Vec4(*(Pythia8::Vec4*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) Pythia8::Vec4(*(Pythia8::Vec4*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__main92DctLN_Pythia8cLcLVec4));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_501_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const Pythia8::Vec4& obj = ((Pythia8::Vec4*) G__getstructoffset())->operator=(*(Pythia8::Vec4*) libp->para[0].ref);
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_501_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const Pythia8::Vec4& obj = ((Pythia8::Vec4*) G__getstructoffset())->operator=((double) G__double(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_501_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Pythia8::Vec4*) G__getstructoffset())->reset();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_501_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Pythia8::Vec4*) G__getstructoffset())->p((double) G__double(libp->para[0]), (double) G__double(libp->para[1])
, (double) G__double(libp->para[2]), (double) G__double(libp->para[3]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_501_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Pythia8::Vec4*) G__getstructoffset())->p(*((Pythia8::Vec4*) G__int(libp->para[0])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_501_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Pythia8::Vec4*) G__getstructoffset())->px((double) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_501_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Pythia8::Vec4*) G__getstructoffset())->py((double) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_501_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Pythia8::Vec4*) G__getstructoffset())->pz((double) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_501_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Pythia8::Vec4*) G__getstructoffset())->e((double) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_501_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const Pythia8::Vec4*) G__getstructoffset())->px());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_501_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const Pythia8::Vec4*) G__getstructoffset())->py());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_501_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const Pythia8::Vec4*) G__getstructoffset())->pz());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_501_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const Pythia8::Vec4*) G__getstructoffset())->e());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_501_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const Pythia8::Vec4*) G__getstructoffset())->mCalc());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_501_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const Pythia8::Vec4*) G__getstructoffset())->m2Calc());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_501_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const Pythia8::Vec4*) G__getstructoffset())->pT());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_501_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const Pythia8::Vec4*) G__getstructoffset())->pT2());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_501_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const Pythia8::Vec4*) G__getstructoffset())->pAbs());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_501_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const Pythia8::Vec4*) G__getstructoffset())->pAbs2());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_501_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const Pythia8::Vec4*) G__getstructoffset())->eT());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_501_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const Pythia8::Vec4*) G__getstructoffset())->eT2());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_501_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const Pythia8::Vec4*) G__getstructoffset())->theta());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_501_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const Pythia8::Vec4*) G__getstructoffset())->phi());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_501_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const Pythia8::Vec4*) G__getstructoffset())->thetaXZ());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_501_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const Pythia8::Vec4*) G__getstructoffset())->pPos());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_501_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const Pythia8::Vec4*) G__getstructoffset())->pNeg());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_501_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const Pythia8::Vec4*) G__getstructoffset())->rap());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_501_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const Pythia8::Vec4*) G__getstructoffset())->eta());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_501_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Pythia8::Vec4*) G__getstructoffset())->rescale3((double) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_501_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Pythia8::Vec4*) G__getstructoffset())->rescale4((double) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_501_0_33(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Pythia8::Vec4*) G__getstructoffset())->flip3();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_501_0_34(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Pythia8::Vec4*) G__getstructoffset())->flip4();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_501_0_35(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Pythia8::Vec4*) G__getstructoffset())->rot((double) G__double(libp->para[0]), (double) G__double(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_501_0_36(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Pythia8::Vec4*) G__getstructoffset())->rotaxis((double) G__double(libp->para[0]), (double) G__double(libp->para[1])
, (double) G__double(libp->para[2]), (double) G__double(libp->para[3]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_501_0_37(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Pythia8::Vec4*) G__getstructoffset())->rotaxis((double) G__double(libp->para[0]), *(Pythia8::Vec4*) libp->para[1].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_501_0_38(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Pythia8::Vec4*) G__getstructoffset())->bst((double) G__double(libp->para[0]), (double) G__double(libp->para[1])
, (double) G__double(libp->para[2]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_501_0_39(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Pythia8::Vec4*) G__getstructoffset())->bst((double) G__double(libp->para[0]), (double) G__double(libp->para[1])
, (double) G__double(libp->para[2]), (double) G__double(libp->para[3]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_501_0_40(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Pythia8::Vec4*) G__getstructoffset())->bst(*(Pythia8::Vec4*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_501_0_41(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Pythia8::Vec4*) G__getstructoffset())->bst(*(Pythia8::Vec4*) libp->para[0].ref, (double) G__double(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_501_0_42(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Pythia8::Vec4*) G__getstructoffset())->bstback(*(Pythia8::Vec4*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_501_0_43(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Pythia8::Vec4*) G__getstructoffset())->bstback(*(Pythia8::Vec4*) libp->para[0].ref, (double) G__double(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_501_0_44(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Pythia8::Vec4*) G__getstructoffset())->rotbst(*(Pythia8::RotBstMatrix*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_501_0_45(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         Pythia8::Vec4* pobj;
         Pythia8::Vec4 xobj = ((Pythia8::Vec4*) G__getstructoffset())->operator-();
         pobj = new Pythia8::Vec4(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_501_0_46(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const Pythia8::Vec4& obj = ((Pythia8::Vec4*) G__getstructoffset())->operator+=(*(Pythia8::Vec4*) libp->para[0].ref);
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_501_0_47(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const Pythia8::Vec4& obj = ((Pythia8::Vec4*) G__getstructoffset())->operator-=(*(Pythia8::Vec4*) libp->para[0].ref);
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_501_0_48(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const Pythia8::Vec4& obj = ((Pythia8::Vec4*) G__getstructoffset())->operator*=((double) G__double(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_501_0_49(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const Pythia8::Vec4& obj = ((Pythia8::Vec4*) G__getstructoffset())->operator/=((double) G__double(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef Pythia8::Vec4 G__TPythia8cLcLVec4;
static int G__main92Dct_501_0_50(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (Pythia8::Vec4*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((Pythia8::Vec4*) (soff+(sizeof(Pythia8::Vec4)*i)))->~G__TPythia8cLcLVec4();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (Pythia8::Vec4*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((Pythia8::Vec4*) (soff))->~G__TPythia8cLcLVec4();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* Pythia8::Info */
static int G__main92Dct_575_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   Pythia8::Info* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new Pythia8::Info[n];
     } else {
       p = new((void*) gvp) Pythia8::Info[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new Pythia8::Info;
     } else {
       p = new((void*) gvp) Pythia8::Info;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__main92DctLN_Pythia8cLcLInfo));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_575_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      ((const Pythia8::Info*) G__getstructoffset())->list(*(ostream*) libp->para[0].ref);
      G__setnull(result7);
      break;
   case 0:
      ((const Pythia8::Info*) G__getstructoffset())->list();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_575_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const Pythia8::Info*) G__getstructoffset())->idA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_575_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const Pythia8::Info*) G__getstructoffset())->idB());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_575_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const Pythia8::Info*) G__getstructoffset())->pzA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_575_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const Pythia8::Info*) G__getstructoffset())->pzB());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_575_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const Pythia8::Info*) G__getstructoffset())->eA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_575_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const Pythia8::Info*) G__getstructoffset())->eB());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_575_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const Pythia8::Info*) G__getstructoffset())->mA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_575_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const Pythia8::Info*) G__getstructoffset())->mB());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_575_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const Pythia8::Info*) G__getstructoffset())->eCM());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_575_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const Pythia8::Info*) G__getstructoffset())->s());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_575_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const Pythia8::Info*) G__getstructoffset())->tooLowPTmin());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_575_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const string* pobj;
         const string xobj = ((const Pythia8::Info*) G__getstructoffset())->name();
         pobj = new string(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_575_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const Pythia8::Info*) G__getstructoffset())->code());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_575_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const Pythia8::Info*) G__getstructoffset())->nFinal());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_575_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const Pythia8::Info*) G__getstructoffset())->isResolved());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_575_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const Pythia8::Info*) G__getstructoffset())->isDiffractiveA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_575_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const Pythia8::Info*) G__getstructoffset())->isDiffractiveB());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_575_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const Pythia8::Info*) G__getstructoffset())->isDiffractiveC());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_575_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const Pythia8::Info*) G__getstructoffset())->isNonDiffractive());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_575_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const Pythia8::Info*) G__getstructoffset())->isMinBias());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_575_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const Pythia8::Info*) G__getstructoffset())->isLHA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_575_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const Pythia8::Info*) G__getstructoffset())->atEndOfFile());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_575_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      G__letint(result7, 103, (long) ((const Pythia8::Info*) G__getstructoffset())->hasSub((int) G__int(libp->para[0])));
      break;
   case 0:
      G__letint(result7, 103, (long) ((const Pythia8::Info*) G__getstructoffset())->hasSub());
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_575_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      {
         const string* pobj;
         const string xobj = ((const Pythia8::Info*) G__getstructoffset())->nameSub((int) G__int(libp->para[0]));
         pobj = new string(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
      break;
   case 0:
      {
         const string* pobj;
         const string xobj = ((const Pythia8::Info*) G__getstructoffset())->nameSub();
         pobj = new string(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_575_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      G__letint(result7, 105, (long) ((const Pythia8::Info*) G__getstructoffset())->codeSub((int) G__int(libp->para[0])));
      break;
   case 0:
      G__letint(result7, 105, (long) ((const Pythia8::Info*) G__getstructoffset())->codeSub());
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_575_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      G__letint(result7, 105, (long) ((const Pythia8::Info*) G__getstructoffset())->nFinalSub((int) G__int(libp->para[0])));
      break;
   case 0:
      G__letint(result7, 105, (long) ((const Pythia8::Info*) G__getstructoffset())->nFinalSub());
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_575_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      G__letint(result7, 105, (long) ((const Pythia8::Info*) G__getstructoffset())->id1((int) G__int(libp->para[0])));
      break;
   case 0:
      G__letint(result7, 105, (long) ((const Pythia8::Info*) G__getstructoffset())->id1());
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_575_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      G__letint(result7, 105, (long) ((const Pythia8::Info*) G__getstructoffset())->id2((int) G__int(libp->para[0])));
      break;
   case 0:
      G__letint(result7, 105, (long) ((const Pythia8::Info*) G__getstructoffset())->id2());
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_575_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      G__letdouble(result7, 100, (double) ((const Pythia8::Info*) G__getstructoffset())->x1((int) G__int(libp->para[0])));
      break;
   case 0:
      G__letdouble(result7, 100, (double) ((const Pythia8::Info*) G__getstructoffset())->x1());
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_575_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      G__letdouble(result7, 100, (double) ((const Pythia8::Info*) G__getstructoffset())->x2((int) G__int(libp->para[0])));
      break;
   case 0:
      G__letdouble(result7, 100, (double) ((const Pythia8::Info*) G__getstructoffset())->x2());
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_575_0_33(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      G__letdouble(result7, 100, (double) ((const Pythia8::Info*) G__getstructoffset())->y((int) G__int(libp->para[0])));
      break;
   case 0:
      G__letdouble(result7, 100, (double) ((const Pythia8::Info*) G__getstructoffset())->y());
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_575_0_34(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      G__letdouble(result7, 100, (double) ((const Pythia8::Info*) G__getstructoffset())->tau((int) G__int(libp->para[0])));
      break;
   case 0:
      G__letdouble(result7, 100, (double) ((const Pythia8::Info*) G__getstructoffset())->tau());
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_575_0_35(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      G__letint(result7, 105, (long) ((const Pythia8::Info*) G__getstructoffset())->id1pdf((int) G__int(libp->para[0])));
      break;
   case 0:
      G__letint(result7, 105, (long) ((const Pythia8::Info*) G__getstructoffset())->id1pdf());
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_575_0_36(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      G__letint(result7, 105, (long) ((const Pythia8::Info*) G__getstructoffset())->id2pdf((int) G__int(libp->para[0])));
      break;
   case 0:
      G__letint(result7, 105, (long) ((const Pythia8::Info*) G__getstructoffset())->id2pdf());
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_575_0_37(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      G__letdouble(result7, 100, (double) ((const Pythia8::Info*) G__getstructoffset())->x1pdf((int) G__int(libp->para[0])));
      break;
   case 0:
      G__letdouble(result7, 100, (double) ((const Pythia8::Info*) G__getstructoffset())->x1pdf());
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_575_0_38(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      G__letdouble(result7, 100, (double) ((const Pythia8::Info*) G__getstructoffset())->x2pdf((int) G__int(libp->para[0])));
      break;
   case 0:
      G__letdouble(result7, 100, (double) ((const Pythia8::Info*) G__getstructoffset())->x2pdf());
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_575_0_39(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      G__letdouble(result7, 100, (double) ((const Pythia8::Info*) G__getstructoffset())->pdf1((int) G__int(libp->para[0])));
      break;
   case 0:
      G__letdouble(result7, 100, (double) ((const Pythia8::Info*) G__getstructoffset())->pdf1());
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_575_0_40(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      G__letdouble(result7, 100, (double) ((const Pythia8::Info*) G__getstructoffset())->pdf2((int) G__int(libp->para[0])));
      break;
   case 0:
      G__letdouble(result7, 100, (double) ((const Pythia8::Info*) G__getstructoffset())->pdf2());
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_575_0_41(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      G__letdouble(result7, 100, (double) ((const Pythia8::Info*) G__getstructoffset())->QFac((int) G__int(libp->para[0])));
      break;
   case 0:
      G__letdouble(result7, 100, (double) ((const Pythia8::Info*) G__getstructoffset())->QFac());
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_575_0_42(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      G__letdouble(result7, 100, (double) ((const Pythia8::Info*) G__getstructoffset())->Q2Fac((int) G__int(libp->para[0])));
      break;
   case 0:
      G__letdouble(result7, 100, (double) ((const Pythia8::Info*) G__getstructoffset())->Q2Fac());
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_575_0_43(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const Pythia8::Info*) G__getstructoffset())->isValence1());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_575_0_44(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const Pythia8::Info*) G__getstructoffset())->isValence2());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_575_0_45(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      G__letdouble(result7, 100, (double) ((const Pythia8::Info*) G__getstructoffset())->alphaS((int) G__int(libp->para[0])));
      break;
   case 0:
      G__letdouble(result7, 100, (double) ((const Pythia8::Info*) G__getstructoffset())->alphaS());
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_575_0_46(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      G__letdouble(result7, 100, (double) ((const Pythia8::Info*) G__getstructoffset())->alphaEM((int) G__int(libp->para[0])));
      break;
   case 0:
      G__letdouble(result7, 100, (double) ((const Pythia8::Info*) G__getstructoffset())->alphaEM());
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_575_0_47(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      G__letdouble(result7, 100, (double) ((const Pythia8::Info*) G__getstructoffset())->QRen((int) G__int(libp->para[0])));
      break;
   case 0:
      G__letdouble(result7, 100, (double) ((const Pythia8::Info*) G__getstructoffset())->QRen());
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_575_0_48(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      G__letdouble(result7, 100, (double) ((const Pythia8::Info*) G__getstructoffset())->Q2Ren((int) G__int(libp->para[0])));
      break;
   case 0:
      G__letdouble(result7, 100, (double) ((const Pythia8::Info*) G__getstructoffset())->Q2Ren());
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_575_0_49(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      G__letdouble(result7, 100, (double) ((const Pythia8::Info*) G__getstructoffset())->scalup((int) G__int(libp->para[0])));
      break;
   case 0:
      G__letdouble(result7, 100, (double) ((const Pythia8::Info*) G__getstructoffset())->scalup());
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_575_0_50(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      G__letdouble(result7, 100, (double) ((const Pythia8::Info*) G__getstructoffset())->mHat((int) G__int(libp->para[0])));
      break;
   case 0:
      G__letdouble(result7, 100, (double) ((const Pythia8::Info*) G__getstructoffset())->mHat());
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_575_0_51(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      G__letdouble(result7, 100, (double) ((const Pythia8::Info*) G__getstructoffset())->sHat((int) G__int(libp->para[0])));
      break;
   case 0:
      G__letdouble(result7, 100, (double) ((const Pythia8::Info*) G__getstructoffset())->sHat());
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_575_0_52(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      G__letdouble(result7, 100, (double) ((const Pythia8::Info*) G__getstructoffset())->tHat((int) G__int(libp->para[0])));
      break;
   case 0:
      G__letdouble(result7, 100, (double) ((const Pythia8::Info*) G__getstructoffset())->tHat());
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_575_0_53(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      G__letdouble(result7, 100, (double) ((const Pythia8::Info*) G__getstructoffset())->uHat((int) G__int(libp->para[0])));
      break;
   case 0:
      G__letdouble(result7, 100, (double) ((const Pythia8::Info*) G__getstructoffset())->uHat());
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_575_0_54(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      G__letdouble(result7, 100, (double) ((const Pythia8::Info*) G__getstructoffset())->pTHat((int) G__int(libp->para[0])));
      break;
   case 0:
      G__letdouble(result7, 100, (double) ((const Pythia8::Info*) G__getstructoffset())->pTHat());
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_575_0_55(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      G__letdouble(result7, 100, (double) ((const Pythia8::Info*) G__getstructoffset())->pT2Hat((int) G__int(libp->para[0])));
      break;
   case 0:
      G__letdouble(result7, 100, (double) ((const Pythia8::Info*) G__getstructoffset())->pT2Hat());
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_575_0_56(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      G__letdouble(result7, 100, (double) ((const Pythia8::Info*) G__getstructoffset())->m3Hat((int) G__int(libp->para[0])));
      break;
   case 0:
      G__letdouble(result7, 100, (double) ((const Pythia8::Info*) G__getstructoffset())->m3Hat());
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_575_0_57(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      G__letdouble(result7, 100, (double) ((const Pythia8::Info*) G__getstructoffset())->m4Hat((int) G__int(libp->para[0])));
      break;
   case 0:
      G__letdouble(result7, 100, (double) ((const Pythia8::Info*) G__getstructoffset())->m4Hat());
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_575_0_58(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      G__letdouble(result7, 100, (double) ((const Pythia8::Info*) G__getstructoffset())->thetaHat((int) G__int(libp->para[0])));
      break;
   case 0:
      G__letdouble(result7, 100, (double) ((const Pythia8::Info*) G__getstructoffset())->thetaHat());
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_575_0_59(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      G__letdouble(result7, 100, (double) ((const Pythia8::Info*) G__getstructoffset())->phiHat((int) G__int(libp->para[0])));
      break;
   case 0:
      G__letdouble(result7, 100, (double) ((const Pythia8::Info*) G__getstructoffset())->phiHat());
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_575_0_60(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const Pythia8::Info*) G__getstructoffset())->weight());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_575_0_61(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const Pythia8::Info*) G__getstructoffset())->weightSum());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_575_0_62(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const Pythia8::Info*) G__getstructoffset())->lhaStrategy());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_575_0_63(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const Pythia8::Info*) G__getstructoffset())->nISR());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_575_0_64(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const Pythia8::Info*) G__getstructoffset())->nFSRinProc());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_575_0_65(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const Pythia8::Info*) G__getstructoffset())->nFSRinRes());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_575_0_66(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const Pythia8::Info*) G__getstructoffset())->pTmaxMPI());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_575_0_67(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const Pythia8::Info*) G__getstructoffset())->pTmaxISR());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_575_0_68(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const Pythia8::Info*) G__getstructoffset())->pTmaxFSR());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_575_0_69(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const Pythia8::Info*) G__getstructoffset())->pTnow());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_575_0_70(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const Pythia8::Info*) G__getstructoffset())->a0MPI());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_575_0_71(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const Pythia8::Info*) G__getstructoffset())->bMPI());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_575_0_72(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const Pythia8::Info*) G__getstructoffset())->enhanceMPI());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_575_0_73(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const Pythia8::Info*) G__getstructoffset())->eMPI((int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_575_0_74(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const Pythia8::Info*) G__getstructoffset())->nMPI());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_575_0_75(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const Pythia8::Info*) G__getstructoffset())->codeMPI((int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_575_0_76(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const Pythia8::Info*) G__getstructoffset())->pTMPI((int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_575_0_77(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const Pythia8::Info*) G__getstructoffset())->iAMPI((int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_575_0_78(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const Pythia8::Info*) G__getstructoffset())->iBMPI((int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_575_0_79(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<int>* pobj;
         vector<int> xobj = ((Pythia8::Info*) G__getstructoffset())->codesHard();
         pobj = new vector<int>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_575_0_80(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      {
         string* pobj;
         string xobj = ((Pythia8::Info*) G__getstructoffset())->nameProc((int) G__int(libp->para[0]));
         pobj = new string(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
      break;
   case 0:
      {
         string* pobj;
         string xobj = ((Pythia8::Info*) G__getstructoffset())->nameProc();
         pobj = new string(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_575_0_81(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      G__letint(result7, 108, (long) ((Pythia8::Info*) G__getstructoffset())->nTried((int) G__int(libp->para[0])));
      break;
   case 0:
      G__letint(result7, 108, (long) ((Pythia8::Info*) G__getstructoffset())->nTried());
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_575_0_82(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      G__letint(result7, 108, (long) ((Pythia8::Info*) G__getstructoffset())->nSelected((int) G__int(libp->para[0])));
      break;
   case 0:
      G__letint(result7, 108, (long) ((Pythia8::Info*) G__getstructoffset())->nSelected());
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_575_0_83(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      G__letint(result7, 108, (long) ((Pythia8::Info*) G__getstructoffset())->nAccepted((int) G__int(libp->para[0])));
      break;
   case 0:
      G__letint(result7, 108, (long) ((Pythia8::Info*) G__getstructoffset())->nAccepted());
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_575_0_84(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      G__letdouble(result7, 100, (double) ((Pythia8::Info*) G__getstructoffset())->sigmaGen((int) G__int(libp->para[0])));
      break;
   case 0:
      G__letdouble(result7, 100, (double) ((Pythia8::Info*) G__getstructoffset())->sigmaGen());
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_575_0_85(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      G__letdouble(result7, 100, (double) ((Pythia8::Info*) G__getstructoffset())->sigmaErr((int) G__int(libp->para[0])));
      break;
   case 0:
      G__letdouble(result7, 100, (double) ((Pythia8::Info*) G__getstructoffset())->sigmaErr());
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_575_0_86(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const Pythia8::Info*) G__getstructoffset())->getCounter((int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_575_0_87(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      ((Pythia8::Info*) G__getstructoffset())->setCounter((int) G__int(libp->para[0]), (int) G__int(libp->para[1]));
      G__setnull(result7);
      break;
   case 1:
      ((Pythia8::Info*) G__getstructoffset())->setCounter((int) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_575_0_88(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      ((Pythia8::Info*) G__getstructoffset())->addCounter((int) G__int(libp->para[0]), (int) G__int(libp->para[1]));
      G__setnull(result7);
      break;
   case 1:
      ((Pythia8::Info*) G__getstructoffset())->addCounter((int) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_575_0_89(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Pythia8::Info*) G__getstructoffset())->errorReset();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_575_0_90(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 4:
      ((Pythia8::Info*) G__getstructoffset())->errorMsg(*((string*) G__int(libp->para[0])), *((string*) G__int(libp->para[1]))
, (bool) G__int(libp->para[2]), *(ostream*) libp->para[3].ref);
      G__setnull(result7);
      break;
   case 3:
      ((Pythia8::Info*) G__getstructoffset())->errorMsg(*((string*) G__int(libp->para[0])), *((string*) G__int(libp->para[1]))
, (bool) G__int(libp->para[2]));
      G__setnull(result7);
      break;
   case 2:
      ((Pythia8::Info*) G__getstructoffset())->errorMsg(*((string*) G__int(libp->para[0])), *((string*) G__int(libp->para[1])));
      G__setnull(result7);
      break;
   case 1:
      ((Pythia8::Info*) G__getstructoffset())->errorMsg(*((string*) G__int(libp->para[0])));
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_575_0_91(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((Pythia8::Info*) G__getstructoffset())->errorTotalNumber());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_575_0_92(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      ((Pythia8::Info*) G__getstructoffset())->errorStatistics(*(ostream*) libp->para[0].ref);
      G__setnull(result7);
      break;
   case 0:
      ((Pythia8::Info*) G__getstructoffset())->errorStatistics();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_575_0_93(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Pythia8::Info*) G__getstructoffset())->setTooLowPTmin((bool) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_575_0_94(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Pythia8::Info*) G__getstructoffset())->setValence((bool) G__int(libp->para[0]), (bool) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_575_0_95(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Pythia8::Info*) G__getstructoffset())->hasHistory((bool) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_575_0_96(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((Pythia8::Info*) G__getstructoffset())->hasHistory());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_575_0_97(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Pythia8::Info*) G__getstructoffset())->zNowISR((double) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_575_0_98(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((Pythia8::Info*) G__getstructoffset())->zNowISR());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_575_0_99(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Pythia8::Info*) G__getstructoffset())->pT2NowISR((double) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_575_0_100(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((Pythia8::Info*) G__getstructoffset())->pT2NowISR());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_575_0_101(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const Pythia8::Info*) G__getstructoffset())->getWeightCKKWL());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_575_0_102(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Pythia8::Info*) G__getstructoffset())->setWeightCKKWL((double) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_575_0_103(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const Pythia8::Info*) G__getstructoffset())->mergingWeight());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_575_0_104(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const Pythia8::Info*) G__getstructoffset())->mergingWeightNLO());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_575_0_105(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const Pythia8::Info*) G__getstructoffset())->getWeightFIRST());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_575_0_106(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Pythia8::Info*) G__getstructoffset())->setWeightFIRST((double) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_575_0_107(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         string* pobj;
         string xobj = ((Pythia8::Info*) G__getstructoffset())->header(*(string*) libp->para[0].ref);
         pobj = new string(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_575_0_108(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<string>* pobj;
         vector<string> xobj = ((Pythia8::Info*) G__getstructoffset())->headerKeys();
         pobj = new vector<string>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_575_0_109(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((Pythia8::Info*) G__getstructoffset())->nProcessesLHEF());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_575_0_110(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((Pythia8::Info*) G__getstructoffset())->sigmaLHEF((int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_575_0_111(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Pythia8::Info*) G__getstructoffset())->setLHEF3InitInfo();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_575_0_112(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Pythia8::Info*) G__getstructoffset())->setLHEF3InitInfo((int) G__int(libp->para[0]), (Pythia8::LHAinitrwgt*) G__int(libp->para[1])
, (vector<LHAgenerator>*) G__int(libp->para[2]), (map<string,LHAweightgroup>*) G__int(libp->para[3])
, (map<string,LHAweight>*) G__int(libp->para[4]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_575_0_113(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Pythia8::Info*) G__getstructoffset())->setLHEF3EventInfo();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_575_0_114(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Pythia8::Info*) G__getstructoffset())->setLHEF3EventInfo((map<string,string>*) G__int(libp->para[0]), (map<string,double>*) G__int(libp->para[1])
, (vector<double>*) G__int(libp->para[2]), (Pythia8::LHAscales*) G__int(libp->para[3])
, (Pythia8::LHAweights*) G__int(libp->para[4]), (Pythia8::LHArwgt*) G__int(libp->para[5]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_575_0_115(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      {
         string* pobj;
         string xobj = ((Pythia8::Info*) G__getstructoffset())->getEventAttribute(*((string*) G__int(libp->para[0])), (bool) G__int(libp->para[1]));
         pobj = new string(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
      break;
   case 1:
      {
         string* pobj;
         string xobj = ((Pythia8::Info*) G__getstructoffset())->getEventAttribute(*((string*) G__int(libp->para[0])));
         pobj = new string(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_575_0_116(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((Pythia8::Info*) G__getstructoffset())->LHEFversion());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_575_0_117(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) ((Pythia8::Info*) G__getstructoffset())->getInitrwgtSize());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_575_0_118(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) ((Pythia8::Info*) G__getstructoffset())->getGeneratorSize());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_575_0_119(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      {
         string* pobj;
         string xobj = ((Pythia8::Info*) G__getstructoffset())->getGeneratorValue((unsigned int) G__int(libp->para[0]));
         pobj = new string(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
      break;
   case 0:
      {
         string* pobj;
         string xobj = ((Pythia8::Info*) G__getstructoffset())->getGeneratorValue();
         pobj = new string(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_575_0_120(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 3:
      {
         string* pobj;
         string xobj = ((Pythia8::Info*) G__getstructoffset())->getGeneratorAttribute((unsigned int) G__int(libp->para[0]), *((string*) G__int(libp->para[1]))
, (bool) G__int(libp->para[2]));
         pobj = new string(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
      break;
   case 2:
      {
         string* pobj;
         string xobj = ((Pythia8::Info*) G__getstructoffset())->getGeneratorAttribute((unsigned int) G__int(libp->para[0]), *((string*) G__int(libp->para[1])));
         pobj = new string(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_575_0_121(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) ((Pythia8::Info*) G__getstructoffset())->getWeightsDetailedSize());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_575_0_122(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((Pythia8::Info*) G__getstructoffset())->getWeightsDetailedValue(*((string*) G__int(libp->para[0]))));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_575_0_123(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 3:
      {
         string* pobj;
         string xobj = ((Pythia8::Info*) G__getstructoffset())->getWeightsDetailedAttribute(*((string*) G__int(libp->para[0])), *((string*) G__int(libp->para[1]))
, (bool) G__int(libp->para[2]));
         pobj = new string(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
      break;
   case 2:
      {
         string* pobj;
         string xobj = ((Pythia8::Info*) G__getstructoffset())->getWeightsDetailedAttribute(*((string*) G__int(libp->para[0])), *((string*) G__int(libp->para[1])));
         pobj = new string(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_575_0_124(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) ((Pythia8::Info*) G__getstructoffset())->getWeightsCompressedSize());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_575_0_125(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((Pythia8::Info*) G__getstructoffset())->getWeightsCompressedValue((unsigned int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_575_0_126(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      {
         string* pobj;
         string xobj = ((Pythia8::Info*) G__getstructoffset())->getWeightsCompressedAttribute(*((string*) G__int(libp->para[0])), (bool) G__int(libp->para[1]));
         pobj = new string(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
      break;
   case 1:
      {
         string* pobj;
         string xobj = ((Pythia8::Info*) G__getstructoffset())->getWeightsCompressedAttribute(*((string*) G__int(libp->para[0])));
         pobj = new string(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_575_0_127(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      {
         string* pobj;
         string xobj = ((Pythia8::Info*) G__getstructoffset())->getScalesValue((bool) G__int(libp->para[0]));
         pobj = new string(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
      break;
   case 0:
      {
         string* pobj;
         string xobj = ((Pythia8::Info*) G__getstructoffset())->getScalesValue();
         pobj = new string(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_575_0_128(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((Pythia8::Info*) G__getstructoffset())->getScalesAttribute(*((string*) G__int(libp->para[0]))));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_575_0_129(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Pythia8::Info*) G__getstructoffset())->setHeader(*(string*) libp->para[0].ref, *(string*) libp->para[1].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__main92Dct_575_0_152(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   Pythia8::Info* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new Pythia8::Info(*(Pythia8::Info*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__main92DctLN_Pythia8cLcLInfo));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef Pythia8::Info G__TPythia8cLcLInfo;
static int G__main92Dct_575_0_153(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (Pythia8::Info*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((Pythia8::Info*) (soff+(sizeof(Pythia8::Info)*i)))->~G__TPythia8cLcLInfo();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (Pythia8::Info*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((Pythia8::Info*) (soff))->~G__TPythia8cLcLInfo();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__main92Dct_575_0_154(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   Pythia8::Info* dest = (Pythia8::Info*) G__getstructoffset();
   *dest = *(Pythia8::Info*) libp->para[0].ref;
   const Pythia8::Info& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* Pythia8::Settings */
static int G__main92Dct_622_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   Pythia8::Settings* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new Pythia8::Settings[n];
     } else {
       p = new((void*) gvp) Pythia8::Settings[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new Pythia8::Settings;
     } else {
       p = new((void*) gvp) Pythia8::Settings;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__main92DctLN_Pythia8cLcLSettings));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_622_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Pythia8::Settings*) G__getstructoffset())->initPtr((Pythia8::Info*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_622_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 3:
      G__letint(result7, 103, (long) ((Pythia8::Settings*) G__getstructoffset())->init(*((string*) G__int(libp->para[0])), (bool) G__int(libp->para[1])
, *(ostream*) libp->para[2].ref));
      break;
   case 2:
      G__letint(result7, 103, (long) ((Pythia8::Settings*) G__getstructoffset())->init(*((string*) G__int(libp->para[0])), (bool) G__int(libp->para[1])));
      break;
   case 1:
      G__letint(result7, 103, (long) ((Pythia8::Settings*) G__getstructoffset())->init(*((string*) G__int(libp->para[0]))));
      break;
   case 0:
      G__letint(result7, 103, (long) ((Pythia8::Settings*) G__getstructoffset())->init());
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_622_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      G__letint(result7, 103, (long) ((Pythia8::Settings*) G__getstructoffset())->reInit(*((string*) G__int(libp->para[0])), *(ostream*) libp->para[1].ref));
      break;
   case 1:
      G__letint(result7, 103, (long) ((Pythia8::Settings*) G__getstructoffset())->reInit(*((string*) G__int(libp->para[0]))));
      break;
   case 0:
      G__letint(result7, 103, (long) ((Pythia8::Settings*) G__getstructoffset())->reInit());
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_622_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 3:
      G__letint(result7, 103, (long) ((Pythia8::Settings*) G__getstructoffset())->readString(*((string*) G__int(libp->para[0])), (bool) G__int(libp->para[1])
, *(ostream*) libp->para[2].ref));
      break;
   case 2:
      G__letint(result7, 103, (long) ((Pythia8::Settings*) G__getstructoffset())->readString(*((string*) G__int(libp->para[0])), (bool) G__int(libp->para[1])));
      break;
   case 1:
      G__letint(result7, 103, (long) ((Pythia8::Settings*) G__getstructoffset())->readString(*((string*) G__int(libp->para[0]))));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_622_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((Pythia8::Settings*) G__getstructoffset())->readingFailed());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_622_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      G__letint(result7, 103, (long) ((Pythia8::Settings*) G__getstructoffset())->writeFile(*((string*) G__int(libp->para[0])), (bool) G__int(libp->para[1])));
      break;
   case 1:
      G__letint(result7, 103, (long) ((Pythia8::Settings*) G__getstructoffset())->writeFile(*((string*) G__int(libp->para[0]))));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_622_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      G__letint(result7, 103, (long) ((Pythia8::Settings*) G__getstructoffset())->writeFile(*(ostream*) libp->para[0].ref, (bool) G__int(libp->para[1])));
      break;
   case 1:
      G__letint(result7, 103, (long) ((Pythia8::Settings*) G__getstructoffset())->writeFile(*(ostream*) libp->para[0].ref));
      break;
   case 0:
      G__letint(result7, 103, (long) ((Pythia8::Settings*) G__getstructoffset())->writeFile());
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_622_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      ((Pythia8::Settings*) G__getstructoffset())->listAll(*(ostream*) libp->para[0].ref);
      G__setnull(result7);
      break;
   case 0:
      ((Pythia8::Settings*) G__getstructoffset())->listAll();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_622_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      ((Pythia8::Settings*) G__getstructoffset())->listChanged(*(ostream*) libp->para[0].ref);
      G__setnull(result7);
      break;
   case 0:
      ((Pythia8::Settings*) G__getstructoffset())->listChanged();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_622_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      ((Pythia8::Settings*) G__getstructoffset())->list(*((string*) G__int(libp->para[0])), *(ostream*) libp->para[1].ref);
      G__setnull(result7);
      break;
   case 1:
      ((Pythia8::Settings*) G__getstructoffset())->list(*((string*) G__int(libp->para[0])));
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_622_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Pythia8::Settings*) G__getstructoffset())->resetAll();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_622_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((Pythia8::Settings*) G__getstructoffset())->isFlag(*((string*) G__int(libp->para[0]))));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_622_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((Pythia8::Settings*) G__getstructoffset())->isMode(*((string*) G__int(libp->para[0]))));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_622_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((Pythia8::Settings*) G__getstructoffset())->isParm(*((string*) G__int(libp->para[0]))));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_622_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((Pythia8::Settings*) G__getstructoffset())->isWord(*((string*) G__int(libp->para[0]))));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_622_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((Pythia8::Settings*) G__getstructoffset())->isFVec(*((string*) G__int(libp->para[0]))));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_622_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((Pythia8::Settings*) G__getstructoffset())->isMVec(*((string*) G__int(libp->para[0]))));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_622_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((Pythia8::Settings*) G__getstructoffset())->isPVec(*((string*) G__int(libp->para[0]))));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_622_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Pythia8::Settings*) G__getstructoffset())->addFlag(*((string*) G__int(libp->para[0])), (bool) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_622_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Pythia8::Settings*) G__getstructoffset())->addMode(*((string*) G__int(libp->para[0])), (int) G__int(libp->para[1])
, (bool) G__int(libp->para[2]), (bool) G__int(libp->para[3])
, (int) G__int(libp->para[4]), (int) G__int(libp->para[5]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_622_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Pythia8::Settings*) G__getstructoffset())->addParm(*((string*) G__int(libp->para[0])), (double) G__double(libp->para[1])
, (bool) G__int(libp->para[2]), (bool) G__int(libp->para[3])
, (double) G__double(libp->para[4]), (double) G__double(libp->para[5]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_622_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Pythia8::Settings*) G__getstructoffset())->addWord(*((string*) G__int(libp->para[0])), *((string*) G__int(libp->para[1])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_622_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Pythia8::Settings*) G__getstructoffset())->addFVec(*((string*) G__int(libp->para[0])), *((vector<bool>*) G__int(libp->para[1])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_622_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Pythia8::Settings*) G__getstructoffset())->addMVec(*((string*) G__int(libp->para[0])), *((vector<int>*) G__int(libp->para[1]))
, (bool) G__int(libp->para[2]), (bool) G__int(libp->para[3])
, (int) G__int(libp->para[4]), (int) G__int(libp->para[5]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_622_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Pythia8::Settings*) G__getstructoffset())->addPVec(*((string*) G__int(libp->para[0])), *((vector<double>*) G__int(libp->para[1]))
, (bool) G__int(libp->para[2]), (bool) G__int(libp->para[3])
, (double) G__double(libp->para[4]), (double) G__double(libp->para[5]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_622_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((Pythia8::Settings*) G__getstructoffset())->flag(*((string*) G__int(libp->para[0]))));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_622_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((Pythia8::Settings*) G__getstructoffset())->mode(*((string*) G__int(libp->para[0]))));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_622_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((Pythia8::Settings*) G__getstructoffset())->parm(*((string*) G__int(libp->para[0]))));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_622_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         string* pobj;
         string xobj = ((Pythia8::Settings*) G__getstructoffset())->word(*((string*) G__int(libp->para[0])));
         pobj = new string(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_622_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<bool>* pobj;
         vector<bool> xobj = ((Pythia8::Settings*) G__getstructoffset())->fvec(*((string*) G__int(libp->para[0])));
         pobj = new vector<bool>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_622_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<int>* pobj;
         vector<int> xobj = ((Pythia8::Settings*) G__getstructoffset())->mvec(*((string*) G__int(libp->para[0])));
         pobj = new vector<int>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_622_0_33(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<double>* pobj;
         vector<double> xobj = ((Pythia8::Settings*) G__getstructoffset())->pvec(*((string*) G__int(libp->para[0])));
         pobj = new vector<double>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_622_0_34(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((Pythia8::Settings*) G__getstructoffset())->flagDefault(*((string*) G__int(libp->para[0]))));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_622_0_35(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((Pythia8::Settings*) G__getstructoffset())->modeDefault(*((string*) G__int(libp->para[0]))));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_622_0_36(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((Pythia8::Settings*) G__getstructoffset())->parmDefault(*((string*) G__int(libp->para[0]))));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_622_0_37(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         string* pobj;
         string xobj = ((Pythia8::Settings*) G__getstructoffset())->wordDefault(*((string*) G__int(libp->para[0])));
         pobj = new string(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_622_0_38(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<bool>* pobj;
         vector<bool> xobj = ((Pythia8::Settings*) G__getstructoffset())->fvecDefault(*((string*) G__int(libp->para[0])));
         pobj = new vector<bool>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_622_0_39(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<int>* pobj;
         vector<int> xobj = ((Pythia8::Settings*) G__getstructoffset())->mvecDefault(*((string*) G__int(libp->para[0])));
         pobj = new vector<int>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_622_0_40(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<double>* pobj;
         vector<double> xobj = ((Pythia8::Settings*) G__getstructoffset())->pvecDefault(*((string*) G__int(libp->para[0])));
         pobj = new vector<double>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_622_0_41(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         map<string,Flag>* pobj;
         map<string,Flag> xobj = ((Pythia8::Settings*) G__getstructoffset())->getFlagMap(*((string*) G__int(libp->para[0])));
         pobj = new map<string,Flag>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_622_0_42(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         map<string,Mode>* pobj;
         map<string,Mode> xobj = ((Pythia8::Settings*) G__getstructoffset())->getModeMap(*((string*) G__int(libp->para[0])));
         pobj = new map<string,Mode>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_622_0_43(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         map<string,Parm>* pobj;
         map<string,Parm> xobj = ((Pythia8::Settings*) G__getstructoffset())->getParmMap(*((string*) G__int(libp->para[0])));
         pobj = new map<string,Parm>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_622_0_44(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         map<string,Word>* pobj;
         map<string,Word> xobj = ((Pythia8::Settings*) G__getstructoffset())->getWordMap(*((string*) G__int(libp->para[0])));
         pobj = new map<string,Word>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_622_0_45(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         map<string,FVec>* pobj;
         map<string,FVec> xobj = ((Pythia8::Settings*) G__getstructoffset())->getFVecMap(*((string*) G__int(libp->para[0])));
         pobj = new map<string,FVec>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_622_0_46(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         map<string,MVec>* pobj;
         map<string,MVec> xobj = ((Pythia8::Settings*) G__getstructoffset())->getMVecMap(*((string*) G__int(libp->para[0])));
         pobj = new map<string,MVec>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_622_0_47(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         map<string,PVec>* pobj;
         map<string,PVec> xobj = ((Pythia8::Settings*) G__getstructoffset())->getPVecMap(*((string*) G__int(libp->para[0])));
         pobj = new map<string,PVec>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_622_0_48(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Pythia8::Settings*) G__getstructoffset())->flag(*((string*) G__int(libp->para[0])), (bool) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_622_0_49(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Pythia8::Settings*) G__getstructoffset())->mode(*((string*) G__int(libp->para[0])), (int) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_622_0_50(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Pythia8::Settings*) G__getstructoffset())->parm(*((string*) G__int(libp->para[0])), (double) G__double(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_622_0_51(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Pythia8::Settings*) G__getstructoffset())->word(*((string*) G__int(libp->para[0])), *((string*) G__int(libp->para[1])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_622_0_52(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Pythia8::Settings*) G__getstructoffset())->fvec(*((string*) G__int(libp->para[0])), *((vector<bool>*) G__int(libp->para[1])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_622_0_53(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Pythia8::Settings*) G__getstructoffset())->mvec(*((string*) G__int(libp->para[0])), *((vector<int>*) G__int(libp->para[1])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_622_0_54(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Pythia8::Settings*) G__getstructoffset())->pvec(*((string*) G__int(libp->para[0])), *((vector<double>*) G__int(libp->para[1])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_622_0_55(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Pythia8::Settings*) G__getstructoffset())->forceMode(*((string*) G__int(libp->para[0])), (int) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_622_0_56(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Pythia8::Settings*) G__getstructoffset())->forceParm(*((string*) G__int(libp->para[0])), (double) G__double(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_622_0_57(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Pythia8::Settings*) G__getstructoffset())->forceMVec(*((string*) G__int(libp->para[0])), *((vector<int>*) G__int(libp->para[1])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_622_0_58(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Pythia8::Settings*) G__getstructoffset())->forcePVec(*((string*) G__int(libp->para[0])), *((vector<double>*) G__int(libp->para[1])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_622_0_59(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Pythia8::Settings*) G__getstructoffset())->resetFlag(*((string*) G__int(libp->para[0])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_622_0_60(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Pythia8::Settings*) G__getstructoffset())->resetMode(*((string*) G__int(libp->para[0])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_622_0_61(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Pythia8::Settings*) G__getstructoffset())->resetParm(*((string*) G__int(libp->para[0])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_622_0_62(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Pythia8::Settings*) G__getstructoffset())->resetWord(*((string*) G__int(libp->para[0])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_622_0_63(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Pythia8::Settings*) G__getstructoffset())->resetFVec(*((string*) G__int(libp->para[0])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_622_0_64(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Pythia8::Settings*) G__getstructoffset())->resetMVec(*((string*) G__int(libp->para[0])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_622_0_65(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Pythia8::Settings*) G__getstructoffset())->resetPVec(*((string*) G__int(libp->para[0])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__main92Dct_622_0_81(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   Pythia8::Settings* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new Pythia8::Settings(*(Pythia8::Settings*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__main92DctLN_Pythia8cLcLSettings));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef Pythia8::Settings G__TPythia8cLcLSettings;
static int G__main92Dct_622_0_82(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (Pythia8::Settings*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((Pythia8::Settings*) (soff+(sizeof(Pythia8::Settings)*i)))->~G__TPythia8cLcLSettings();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (Pythia8::Settings*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((Pythia8::Settings*) (soff))->~G__TPythia8cLcLSettings();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__main92Dct_622_0_83(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   Pythia8::Settings* dest = (Pythia8::Settings*) G__getstructoffset();
   *dest = *(Pythia8::Settings*) libp->para[0].ref;
   const Pythia8::Settings& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* Pythia8::AlphaStrong */
static int G__main92Dct_672_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   Pythia8::AlphaStrong* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new Pythia8::AlphaStrong[n];
     } else {
       p = new((void*) gvp) Pythia8::AlphaStrong[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new Pythia8::AlphaStrong;
     } else {
       p = new((void*) gvp) Pythia8::AlphaStrong;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__main92DctLN_Pythia8cLcLAlphaStrong));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_672_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   Pythia8::AlphaStrong* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 2:
     //m: 2
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new Pythia8::AlphaStrong((double) G__double(libp->para[0]), (int) G__int(libp->para[1]));
     } else {
       p = new((void*) gvp) Pythia8::AlphaStrong((double) G__double(libp->para[0]), (int) G__int(libp->para[1]));
     }
     break;
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new Pythia8::AlphaStrong((double) G__double(libp->para[0]));
     } else {
       p = new((void*) gvp) Pythia8::AlphaStrong((double) G__double(libp->para[0]));
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__main92DctLN_Pythia8cLcLAlphaStrong));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_672_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 4:
      ((Pythia8::AlphaStrong*) G__getstructoffset())->init((double) G__double(libp->para[0]), (int) G__int(libp->para[1])
, (int) G__int(libp->para[2]), (bool) G__int(libp->para[3]));
      G__setnull(result7);
      break;
   case 3:
      ((Pythia8::AlphaStrong*) G__getstructoffset())->init((double) G__double(libp->para[0]), (int) G__int(libp->para[1])
, (int) G__int(libp->para[2]));
      G__setnull(result7);
      break;
   case 2:
      ((Pythia8::AlphaStrong*) G__getstructoffset())->init((double) G__double(libp->para[0]), (int) G__int(libp->para[1]));
      G__setnull(result7);
      break;
   case 1:
      ((Pythia8::AlphaStrong*) G__getstructoffset())->init((double) G__double(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((Pythia8::AlphaStrong*) G__getstructoffset())->init();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_672_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((Pythia8::AlphaStrong*) G__getstructoffset())->alphaS((double) G__double(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_672_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((Pythia8::AlphaStrong*) G__getstructoffset())->alphaS1Ord((double) G__double(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_672_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((Pythia8::AlphaStrong*) G__getstructoffset())->alphaS2OrdCorr((double) G__double(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_672_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const Pythia8::AlphaStrong*) G__getstructoffset())->Lambda3());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_672_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const Pythia8::AlphaStrong*) G__getstructoffset())->Lambda4());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_672_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const Pythia8::AlphaStrong*) G__getstructoffset())->Lambda5());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_672_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const Pythia8::AlphaStrong*) G__getstructoffset())->Lambda6());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_672_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((Pythia8::AlphaStrong*) G__getstructoffset())->muThres((int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_672_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((Pythia8::AlphaStrong*) G__getstructoffset())->muThres2((int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_672_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((Pythia8::AlphaStrong*) G__getstructoffset())->facCMW((int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__main92Dct_672_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   Pythia8::AlphaStrong* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new Pythia8::AlphaStrong(*(Pythia8::AlphaStrong*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__main92DctLN_Pythia8cLcLAlphaStrong));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef Pythia8::AlphaStrong G__TPythia8cLcLAlphaStrong;
static int G__main92Dct_672_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (Pythia8::AlphaStrong*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((Pythia8::AlphaStrong*) (soff+(sizeof(Pythia8::AlphaStrong)*i)))->~G__TPythia8cLcLAlphaStrong();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (Pythia8::AlphaStrong*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((Pythia8::AlphaStrong*) (soff))->~G__TPythia8cLcLAlphaStrong();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__main92Dct_672_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   Pythia8::AlphaStrong* dest = (Pythia8::AlphaStrong*) G__getstructoffset();
   *dest = *(Pythia8::AlphaStrong*) libp->para[0].ref;
   const Pythia8::AlphaStrong& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* Pythia8::AlphaEM */
static int G__main92Dct_673_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   Pythia8::AlphaEM* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new Pythia8::AlphaEM[n];
     } else {
       p = new((void*) gvp) Pythia8::AlphaEM[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new Pythia8::AlphaEM;
     } else {
       p = new((void*) gvp) Pythia8::AlphaEM;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__main92DctLN_Pythia8cLcLAlphaEM));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_673_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Pythia8::AlphaEM*) G__getstructoffset())->init((int) G__int(libp->para[0]), (Pythia8::Settings*) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_673_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((Pythia8::AlphaEM*) G__getstructoffset())->alphaEM((double) G__double(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__main92Dct_673_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   Pythia8::AlphaEM* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new Pythia8::AlphaEM(*(Pythia8::AlphaEM*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__main92DctLN_Pythia8cLcLAlphaEM));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef Pythia8::AlphaEM G__TPythia8cLcLAlphaEM;
static int G__main92Dct_673_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (Pythia8::AlphaEM*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((Pythia8::AlphaEM*) (soff+(sizeof(Pythia8::AlphaEM)*i)))->~G__TPythia8cLcLAlphaEM();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (Pythia8::AlphaEM*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((Pythia8::AlphaEM*) (soff))->~G__TPythia8cLcLAlphaEM();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__main92Dct_673_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   Pythia8::AlphaEM* dest = (Pythia8::AlphaEM*) G__getstructoffset();
   *dest = *(Pythia8::AlphaEM*) libp->para[0].ref;
   const Pythia8::AlphaEM& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* Pythia8::CoupSM */
static int G__main92Dct_674_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   Pythia8::CoupSM* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new Pythia8::CoupSM[n];
     } else {
       p = new((void*) gvp) Pythia8::CoupSM[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new Pythia8::CoupSM;
     } else {
       p = new((void*) gvp) Pythia8::CoupSM;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__main92DctLN_Pythia8cLcLCoupSM));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_674_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Pythia8::CoupSM*) G__getstructoffset())->init(*(Pythia8::Settings*) libp->para[0].ref, (Pythia8::Rndm*) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_674_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((Pythia8::CoupSM*) G__getstructoffset())->alphaS((double) G__double(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_674_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((Pythia8::CoupSM*) G__getstructoffset())->alphaS1Ord((double) G__double(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_674_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((Pythia8::CoupSM*) G__getstructoffset())->alphaS2OrdCorr((double) G__double(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_674_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const Pythia8::CoupSM*) G__getstructoffset())->Lambda3());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_674_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const Pythia8::CoupSM*) G__getstructoffset())->Lambda4());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_674_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const Pythia8::CoupSM*) G__getstructoffset())->Lambda5());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_674_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((Pythia8::CoupSM*) G__getstructoffset())->alphaEM((double) G__double(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_674_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((Pythia8::CoupSM*) G__getstructoffset())->sin2thetaW());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_674_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((Pythia8::CoupSM*) G__getstructoffset())->cos2thetaW());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_674_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((Pythia8::CoupSM*) G__getstructoffset())->sin2thetaWbar());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_674_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((Pythia8::CoupSM*) G__getstructoffset())->GF());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_674_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((Pythia8::CoupSM*) G__getstructoffset())->ef((int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_674_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((Pythia8::CoupSM*) G__getstructoffset())->vf((int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_674_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((Pythia8::CoupSM*) G__getstructoffset())->af((int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_674_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((Pythia8::CoupSM*) G__getstructoffset())->t3f((int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_674_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((Pythia8::CoupSM*) G__getstructoffset())->lf((int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_674_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((Pythia8::CoupSM*) G__getstructoffset())->rf((int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_674_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((Pythia8::CoupSM*) G__getstructoffset())->ef2((int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_674_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((Pythia8::CoupSM*) G__getstructoffset())->vf2((int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_674_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((Pythia8::CoupSM*) G__getstructoffset())->af2((int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_674_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((Pythia8::CoupSM*) G__getstructoffset())->efvf((int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_674_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((Pythia8::CoupSM*) G__getstructoffset())->vf2af2((int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_674_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((Pythia8::CoupSM*) G__getstructoffset())->VCKMgen((int) G__int(libp->para[0]), (int) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_674_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((Pythia8::CoupSM*) G__getstructoffset())->V2CKMgen((int) G__int(libp->para[0]), (int) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_674_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((Pythia8::CoupSM*) G__getstructoffset())->VCKMid((int) G__int(libp->para[0]), (int) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_674_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((Pythia8::CoupSM*) G__getstructoffset())->V2CKMid((int) G__int(libp->para[0]), (int) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_674_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((Pythia8::CoupSM*) G__getstructoffset())->V2CKMsum((int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_674_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((Pythia8::CoupSM*) G__getstructoffset())->V2CKMpick((int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__main92Dct_674_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   Pythia8::CoupSM* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new Pythia8::CoupSM(*(Pythia8::CoupSM*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__main92DctLN_Pythia8cLcLCoupSM));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef Pythia8::CoupSM G__TPythia8cLcLCoupSM;
static int G__main92Dct_674_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (Pythia8::CoupSM*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((Pythia8::CoupSM*) (soff+(sizeof(Pythia8::CoupSM)*i)))->~G__TPythia8cLcLCoupSM();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (Pythia8::CoupSM*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((Pythia8::CoupSM*) (soff))->~G__TPythia8cLcLCoupSM();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__main92Dct_674_0_33(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   Pythia8::CoupSM* dest = (Pythia8::CoupSM*) G__getstructoffset();
   *dest = *(Pythia8::CoupSM*) libp->para[0].ref;
   const Pythia8::CoupSM& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* Pythia8::Couplings */
static int G__main92Dct_675_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   Pythia8::Couplings* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new Pythia8::Couplings[n];
     } else {
       p = new((void*) gvp) Pythia8::Couplings[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new Pythia8::Couplings;
     } else {
       p = new((void*) gvp) Pythia8::Couplings;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__main92DctLN_Pythia8cLcLCouplings));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__main92Dct_675_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   Pythia8::Couplings* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new Pythia8::Couplings(*(Pythia8::Couplings*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__main92DctLN_Pythia8cLcLCouplings));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef Pythia8::Couplings G__TPythia8cLcLCouplings;
static int G__main92Dct_675_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (Pythia8::Couplings*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((Pythia8::Couplings*) (soff+(sizeof(Pythia8::Couplings)*i)))->~G__TPythia8cLcLCouplings();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (Pythia8::Couplings*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((Pythia8::Couplings*) (soff))->~G__TPythia8cLcLCouplings();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__main92Dct_675_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   Pythia8::Couplings* dest = (Pythia8::Couplings*) G__getstructoffset();
   *dest = *(Pythia8::Couplings*) libp->para[0].ref;
   const Pythia8::Couplings& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* Pythia8::ParticleData */
static int G__main92Dct_676_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   Pythia8::ParticleData* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new Pythia8::ParticleData[n];
     } else {
       p = new((void*) gvp) Pythia8::ParticleData[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new Pythia8::ParticleData;
     } else {
       p = new((void*) gvp) Pythia8::ParticleData;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__main92DctLN_Pythia8cLcLParticleData));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_676_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Pythia8::ParticleData*) G__getstructoffset())->initPtr((Pythia8::Info*) G__int(libp->para[0]), (Pythia8::Settings*) G__int(libp->para[1])
, (Pythia8::Rndm*) G__int(libp->para[2]), (Pythia8::Couplings*) G__int(libp->para[3]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_676_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      G__letint(result7, 103, (long) ((Pythia8::ParticleData*) G__getstructoffset())->init(*((string*) G__int(libp->para[0]))));
      break;
   case 0:
      G__letint(result7, 103, (long) ((Pythia8::ParticleData*) G__getstructoffset())->init());
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_676_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      G__letint(result7, 103, (long) ((Pythia8::ParticleData*) G__getstructoffset())->reInit(*((string*) G__int(libp->para[0])), (bool) G__int(libp->para[1])));
      break;
   case 1:
      G__letint(result7, 103, (long) ((Pythia8::ParticleData*) G__getstructoffset())->reInit(*((string*) G__int(libp->para[0]))));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_676_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Pythia8::ParticleData*) G__getstructoffset())->initWidths(*((vector<ResonanceWidths*>*) G__int(libp->para[0])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_676_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      G__letint(result7, 103, (long) ((Pythia8::ParticleData*) G__getstructoffset())->readXML(*((string*) G__int(libp->para[0])), (bool) G__int(libp->para[1])));
      break;
   case 1:
      G__letint(result7, 103, (long) ((Pythia8::ParticleData*) G__getstructoffset())->readXML(*((string*) G__int(libp->para[0]))));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_676_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Pythia8::ParticleData*) G__getstructoffset())->listXML(*((string*) G__int(libp->para[0])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_676_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      G__letint(result7, 103, (long) ((Pythia8::ParticleData*) G__getstructoffset())->readFF(*((string*) G__int(libp->para[0])), (bool) G__int(libp->para[1])));
      break;
   case 1:
      G__letint(result7, 103, (long) ((Pythia8::ParticleData*) G__getstructoffset())->readFF(*((string*) G__int(libp->para[0]))));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_676_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Pythia8::ParticleData*) G__getstructoffset())->listFF(*((string*) G__int(libp->para[0])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_676_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 3:
      G__letint(result7, 103, (long) ((Pythia8::ParticleData*) G__getstructoffset())->readString(*((string*) G__int(libp->para[0])), (bool) G__int(libp->para[1])
, *(ostream*) libp->para[2].ref));
      break;
   case 2:
      G__letint(result7, 103, (long) ((Pythia8::ParticleData*) G__getstructoffset())->readString(*((string*) G__int(libp->para[0])), (bool) G__int(libp->para[1])));
      break;
   case 1:
      G__letint(result7, 103, (long) ((Pythia8::ParticleData*) G__getstructoffset())->readString(*((string*) G__int(libp->para[0]))));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_676_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((Pythia8::ParticleData*) G__getstructoffset())->readingFailed());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_676_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      ((Pythia8::ParticleData*) G__getstructoffset())->listAll(*(ostream*) libp->para[0].ref);
      G__setnull(result7);
      break;
   case 0:
      ((Pythia8::ParticleData*) G__getstructoffset())->listAll();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_676_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      ((Pythia8::ParticleData*) G__getstructoffset())->listChanged(*(ostream*) libp->para[0].ref);
      G__setnull(result7);
      break;
   case 0:
      ((Pythia8::ParticleData*) G__getstructoffset())->listChanged();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_676_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      ((Pythia8::ParticleData*) G__getstructoffset())->listChanged((bool) G__int(libp->para[0]), *(ostream*) libp->para[1].ref);
      G__setnull(result7);
      break;
   case 1:
      ((Pythia8::ParticleData*) G__getstructoffset())->listChanged((bool) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_676_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 3:
      ((Pythia8::ParticleData*) G__getstructoffset())->list((bool) G__int(libp->para[0]), (bool) G__int(libp->para[1])
, *(ostream*) libp->para[2].ref);
      G__setnull(result7);
      break;
   case 2:
      ((Pythia8::ParticleData*) G__getstructoffset())->list((bool) G__int(libp->para[0]), (bool) G__int(libp->para[1]));
      G__setnull(result7);
      break;
   case 1:
      ((Pythia8::ParticleData*) G__getstructoffset())->list((bool) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((Pythia8::ParticleData*) G__getstructoffset())->list();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_676_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      ((Pythia8::ParticleData*) G__getstructoffset())->list((int) G__int(libp->para[0]), *(ostream*) libp->para[1].ref);
      G__setnull(result7);
      break;
   case 1:
      ((Pythia8::ParticleData*) G__getstructoffset())->list((int) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_676_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      ((Pythia8::ParticleData*) G__getstructoffset())->list(*((vector<int>*) G__int(libp->para[0])), *(ostream*) libp->para[1].ref);
      G__setnull(result7);
      break;
   case 1:
      ((Pythia8::ParticleData*) G__getstructoffset())->list(*((vector<int>*) G__int(libp->para[0])));
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_676_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      ((Pythia8::ParticleData*) G__getstructoffset())->checkTable(*(ostream*) libp->para[0].ref);
      G__setnull(result7);
      break;
   case 0:
      ((Pythia8::ParticleData*) G__getstructoffset())->checkTable();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_676_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      ((Pythia8::ParticleData*) G__getstructoffset())->checkTable((int) G__int(libp->para[0]), *(ostream*) libp->para[1].ref);
      G__setnull(result7);
      break;
   case 1:
      ((Pythia8::ParticleData*) G__getstructoffset())->checkTable((int) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_676_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 10:
      ((Pythia8::ParticleData*) G__getstructoffset())->addParticle(
(int) G__int(libp->para[0]), *((string*) G__int(libp->para[1]))
, (int) G__int(libp->para[2]), (int) G__int(libp->para[3])
, (int) G__int(libp->para[4]), (double) G__double(libp->para[5])
, (double) G__double(libp->para[6]), (double) G__double(libp->para[7])
, (double) G__double(libp->para[8]), (double) G__double(libp->para[9]));
      G__setnull(result7);
      break;
   case 9:
      ((Pythia8::ParticleData*) G__getstructoffset())->addParticle(
(int) G__int(libp->para[0]), *((string*) G__int(libp->para[1]))
, (int) G__int(libp->para[2]), (int) G__int(libp->para[3])
, (int) G__int(libp->para[4]), (double) G__double(libp->para[5])
, (double) G__double(libp->para[6]), (double) G__double(libp->para[7])
, (double) G__double(libp->para[8]));
      G__setnull(result7);
      break;
   case 8:
      ((Pythia8::ParticleData*) G__getstructoffset())->addParticle(
(int) G__int(libp->para[0]), *((string*) G__int(libp->para[1]))
, (int) G__int(libp->para[2]), (int) G__int(libp->para[3])
, (int) G__int(libp->para[4]), (double) G__double(libp->para[5])
, (double) G__double(libp->para[6]), (double) G__double(libp->para[7]));
      G__setnull(result7);
      break;
   case 7:
      ((Pythia8::ParticleData*) G__getstructoffset())->addParticle(
(int) G__int(libp->para[0]), *((string*) G__int(libp->para[1]))
, (int) G__int(libp->para[2]), (int) G__int(libp->para[3])
, (int) G__int(libp->para[4]), (double) G__double(libp->para[5])
, (double) G__double(libp->para[6]));
      G__setnull(result7);
      break;
   case 6:
      ((Pythia8::ParticleData*) G__getstructoffset())->addParticle((int) G__int(libp->para[0]), *((string*) G__int(libp->para[1]))
, (int) G__int(libp->para[2]), (int) G__int(libp->para[3])
, (int) G__int(libp->para[4]), (double) G__double(libp->para[5]));
      G__setnull(result7);
      break;
   case 5:
      ((Pythia8::ParticleData*) G__getstructoffset())->addParticle((int) G__int(libp->para[0]), *((string*) G__int(libp->para[1]))
, (int) G__int(libp->para[2]), (int) G__int(libp->para[3])
, (int) G__int(libp->para[4]));
      G__setnull(result7);
      break;
   case 4:
      ((Pythia8::ParticleData*) G__getstructoffset())->addParticle((int) G__int(libp->para[0]), *((string*) G__int(libp->para[1]))
, (int) G__int(libp->para[2]), (int) G__int(libp->para[3]));
      G__setnull(result7);
      break;
   case 3:
      ((Pythia8::ParticleData*) G__getstructoffset())->addParticle((int) G__int(libp->para[0]), *((string*) G__int(libp->para[1]))
, (int) G__int(libp->para[2]));
      G__setnull(result7);
      break;
   case 2:
      ((Pythia8::ParticleData*) G__getstructoffset())->addParticle((int) G__int(libp->para[0]), *((string*) G__int(libp->para[1])));
      G__setnull(result7);
      break;
   case 1:
      ((Pythia8::ParticleData*) G__getstructoffset())->addParticle((int) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_676_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 11:
      ((Pythia8::ParticleData*) G__getstructoffset())->addParticle(
(int) G__int(libp->para[0]), *((string*) G__int(libp->para[1]))
, *((string*) G__int(libp->para[2])), (int) G__int(libp->para[3])
, (int) G__int(libp->para[4]), (int) G__int(libp->para[5])
, (double) G__double(libp->para[6]), (double) G__double(libp->para[7])
, (double) G__double(libp->para[8]), (double) G__double(libp->para[9])
, (double) G__double(libp->para[10]));
      G__setnull(result7);
      break;
   case 10:
      ((Pythia8::ParticleData*) G__getstructoffset())->addParticle(
(int) G__int(libp->para[0]), *((string*) G__int(libp->para[1]))
, *((string*) G__int(libp->para[2])), (int) G__int(libp->para[3])
, (int) G__int(libp->para[4]), (int) G__int(libp->para[5])
, (double) G__double(libp->para[6]), (double) G__double(libp->para[7])
, (double) G__double(libp->para[8]), (double) G__double(libp->para[9]));
      G__setnull(result7);
      break;
   case 9:
      ((Pythia8::ParticleData*) G__getstructoffset())->addParticle(
(int) G__int(libp->para[0]), *((string*) G__int(libp->para[1]))
, *((string*) G__int(libp->para[2])), (int) G__int(libp->para[3])
, (int) G__int(libp->para[4]), (int) G__int(libp->para[5])
, (double) G__double(libp->para[6]), (double) G__double(libp->para[7])
, (double) G__double(libp->para[8]));
      G__setnull(result7);
      break;
   case 8:
      ((Pythia8::ParticleData*) G__getstructoffset())->addParticle(
(int) G__int(libp->para[0]), *((string*) G__int(libp->para[1]))
, *((string*) G__int(libp->para[2])), (int) G__int(libp->para[3])
, (int) G__int(libp->para[4]), (int) G__int(libp->para[5])
, (double) G__double(libp->para[6]), (double) G__double(libp->para[7]));
      G__setnull(result7);
      break;
   case 7:
      ((Pythia8::ParticleData*) G__getstructoffset())->addParticle(
(int) G__int(libp->para[0]), *((string*) G__int(libp->para[1]))
, *((string*) G__int(libp->para[2])), (int) G__int(libp->para[3])
, (int) G__int(libp->para[4]), (int) G__int(libp->para[5])
, (double) G__double(libp->para[6]));
      G__setnull(result7);
      break;
   case 6:
      ((Pythia8::ParticleData*) G__getstructoffset())->addParticle((int) G__int(libp->para[0]), *((string*) G__int(libp->para[1]))
, *((string*) G__int(libp->para[2])), (int) G__int(libp->para[3])
, (int) G__int(libp->para[4]), (int) G__int(libp->para[5]));
      G__setnull(result7);
      break;
   case 5:
      ((Pythia8::ParticleData*) G__getstructoffset())->addParticle((int) G__int(libp->para[0]), *((string*) G__int(libp->para[1]))
, *((string*) G__int(libp->para[2])), (int) G__int(libp->para[3])
, (int) G__int(libp->para[4]));
      G__setnull(result7);
      break;
   case 4:
      ((Pythia8::ParticleData*) G__getstructoffset())->addParticle((int) G__int(libp->para[0]), *((string*) G__int(libp->para[1]))
, *((string*) G__int(libp->para[2])), (int) G__int(libp->para[3]));
      G__setnull(result7);
      break;
   case 3:
      ((Pythia8::ParticleData*) G__getstructoffset())->addParticle((int) G__int(libp->para[0]), *((string*) G__int(libp->para[1]))
, *((string*) G__int(libp->para[2])));
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_676_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 11:
      ((Pythia8::ParticleData*) G__getstructoffset())->setAll(
(int) G__int(libp->para[0]), *((string*) G__int(libp->para[1]))
, *((string*) G__int(libp->para[2])), (int) G__int(libp->para[3])
, (int) G__int(libp->para[4]), (int) G__int(libp->para[5])
, (double) G__double(libp->para[6]), (double) G__double(libp->para[7])
, (double) G__double(libp->para[8]), (double) G__double(libp->para[9])
, (double) G__double(libp->para[10]));
      G__setnull(result7);
      break;
   case 10:
      ((Pythia8::ParticleData*) G__getstructoffset())->setAll(
(int) G__int(libp->para[0]), *((string*) G__int(libp->para[1]))
, *((string*) G__int(libp->para[2])), (int) G__int(libp->para[3])
, (int) G__int(libp->para[4]), (int) G__int(libp->para[5])
, (double) G__double(libp->para[6]), (double) G__double(libp->para[7])
, (double) G__double(libp->para[8]), (double) G__double(libp->para[9]));
      G__setnull(result7);
      break;
   case 9:
      ((Pythia8::ParticleData*) G__getstructoffset())->setAll(
(int) G__int(libp->para[0]), *((string*) G__int(libp->para[1]))
, *((string*) G__int(libp->para[2])), (int) G__int(libp->para[3])
, (int) G__int(libp->para[4]), (int) G__int(libp->para[5])
, (double) G__double(libp->para[6]), (double) G__double(libp->para[7])
, (double) G__double(libp->para[8]));
      G__setnull(result7);
      break;
   case 8:
      ((Pythia8::ParticleData*) G__getstructoffset())->setAll(
(int) G__int(libp->para[0]), *((string*) G__int(libp->para[1]))
, *((string*) G__int(libp->para[2])), (int) G__int(libp->para[3])
, (int) G__int(libp->para[4]), (int) G__int(libp->para[5])
, (double) G__double(libp->para[6]), (double) G__double(libp->para[7]));
      G__setnull(result7);
      break;
   case 7:
      ((Pythia8::ParticleData*) G__getstructoffset())->setAll(
(int) G__int(libp->para[0]), *((string*) G__int(libp->para[1]))
, *((string*) G__int(libp->para[2])), (int) G__int(libp->para[3])
, (int) G__int(libp->para[4]), (int) G__int(libp->para[5])
, (double) G__double(libp->para[6]));
      G__setnull(result7);
      break;
   case 6:
      ((Pythia8::ParticleData*) G__getstructoffset())->setAll((int) G__int(libp->para[0]), *((string*) G__int(libp->para[1]))
, *((string*) G__int(libp->para[2])), (int) G__int(libp->para[3])
, (int) G__int(libp->para[4]), (int) G__int(libp->para[5]));
      G__setnull(result7);
      break;
   case 5:
      ((Pythia8::ParticleData*) G__getstructoffset())->setAll((int) G__int(libp->para[0]), *((string*) G__int(libp->para[1]))
, *((string*) G__int(libp->para[2])), (int) G__int(libp->para[3])
, (int) G__int(libp->para[4]));
      G__setnull(result7);
      break;
   case 4:
      ((Pythia8::ParticleData*) G__getstructoffset())->setAll((int) G__int(libp->para[0]), *((string*) G__int(libp->para[1]))
, *((string*) G__int(libp->para[2])), (int) G__int(libp->para[3]));
      G__setnull(result7);
      break;
   case 3:
      ((Pythia8::ParticleData*) G__getstructoffset())->setAll((int) G__int(libp->para[0]), *((string*) G__int(libp->para[1]))
, *((string*) G__int(libp->para[2])));
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_676_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((Pythia8::ParticleData*) G__getstructoffset())->isParticle((int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_676_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((Pythia8::ParticleData*) G__getstructoffset())->nextId((int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_676_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Pythia8::ParticleData*) G__getstructoffset())->name((int) G__int(libp->para[0]), *((string*) G__int(libp->para[1])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_676_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Pythia8::ParticleData*) G__getstructoffset())->antiName((int) G__int(libp->para[0]), *((string*) G__int(libp->para[1])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_676_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Pythia8::ParticleData*) G__getstructoffset())->names((int) G__int(libp->para[0]), *((string*) G__int(libp->para[1]))
, *((string*) G__int(libp->para[2])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_676_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Pythia8::ParticleData*) G__getstructoffset())->spinType((int) G__int(libp->para[0]), (int) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_676_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Pythia8::ParticleData*) G__getstructoffset())->chargeType((int) G__int(libp->para[0]), (int) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_676_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Pythia8::ParticleData*) G__getstructoffset())->colType((int) G__int(libp->para[0]), (int) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_676_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Pythia8::ParticleData*) G__getstructoffset())->m0((int) G__int(libp->para[0]), (double) G__double(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_676_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Pythia8::ParticleData*) G__getstructoffset())->mWidth((int) G__int(libp->para[0]), (double) G__double(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_676_0_33(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Pythia8::ParticleData*) G__getstructoffset())->mMin((int) G__int(libp->para[0]), (double) G__double(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_676_0_34(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Pythia8::ParticleData*) G__getstructoffset())->mMax((int) G__int(libp->para[0]), (double) G__double(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_676_0_35(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Pythia8::ParticleData*) G__getstructoffset())->tau0((int) G__int(libp->para[0]), (double) G__double(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_676_0_36(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Pythia8::ParticleData*) G__getstructoffset())->isResonance((int) G__int(libp->para[0]), (bool) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_676_0_37(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Pythia8::ParticleData*) G__getstructoffset())->mayDecay((int) G__int(libp->para[0]), (bool) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_676_0_38(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Pythia8::ParticleData*) G__getstructoffset())->doExternalDecay((int) G__int(libp->para[0]), (bool) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_676_0_39(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Pythia8::ParticleData*) G__getstructoffset())->isVisible((int) G__int(libp->para[0]), (bool) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_676_0_40(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Pythia8::ParticleData*) G__getstructoffset())->doForceWidth((int) G__int(libp->para[0]), (bool) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_676_0_41(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Pythia8::ParticleData*) G__getstructoffset())->hasChanged((int) G__int(libp->para[0]), (bool) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_676_0_42(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((Pythia8::ParticleData*) G__getstructoffset())->hasAnti((int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_676_0_43(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         string* pobj;
         string xobj = ((Pythia8::ParticleData*) G__getstructoffset())->name((int) G__int(libp->para[0]));
         pobj = new string(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_676_0_44(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((Pythia8::ParticleData*) G__getstructoffset())->spinType((int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_676_0_45(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((Pythia8::ParticleData*) G__getstructoffset())->chargeType((int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_676_0_46(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((Pythia8::ParticleData*) G__getstructoffset())->charge((int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_676_0_47(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((Pythia8::ParticleData*) G__getstructoffset())->colType((int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_676_0_48(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((Pythia8::ParticleData*) G__getstructoffset())->m0((int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_676_0_49(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((Pythia8::ParticleData*) G__getstructoffset())->mWidth((int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_676_0_50(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((Pythia8::ParticleData*) G__getstructoffset())->mMin((int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_676_0_51(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((Pythia8::ParticleData*) G__getstructoffset())->m0Min((int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_676_0_52(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((Pythia8::ParticleData*) G__getstructoffset())->mMax((int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_676_0_53(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((Pythia8::ParticleData*) G__getstructoffset())->m0Max((int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_676_0_54(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((Pythia8::ParticleData*) G__getstructoffset())->tau0((int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_676_0_55(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((Pythia8::ParticleData*) G__getstructoffset())->isResonance((int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_676_0_56(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((Pythia8::ParticleData*) G__getstructoffset())->mayDecay((int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_676_0_57(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((Pythia8::ParticleData*) G__getstructoffset())->doExternalDecay((int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_676_0_58(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((Pythia8::ParticleData*) G__getstructoffset())->isVisible((int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_676_0_59(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((Pythia8::ParticleData*) G__getstructoffset())->doForceWidth((int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_676_0_60(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((Pythia8::ParticleData*) G__getstructoffset())->hasChanged((int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_676_0_61(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((Pythia8::ParticleData*) G__getstructoffset())->useBreitWigner((int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_676_0_62(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((Pythia8::ParticleData*) G__getstructoffset())->constituentMass((int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_676_0_63(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((Pythia8::ParticleData*) G__getstructoffset())->mSel((int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_676_0_64(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((Pythia8::ParticleData*) G__getstructoffset())->mRun((int) G__int(libp->para[0]), (double) G__double(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_676_0_65(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((Pythia8::ParticleData*) G__getstructoffset())->canDecay((int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_676_0_66(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((Pythia8::ParticleData*) G__getstructoffset())->isLepton((int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_676_0_67(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((Pythia8::ParticleData*) G__getstructoffset())->isQuark((int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_676_0_68(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((Pythia8::ParticleData*) G__getstructoffset())->isGluon((int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_676_0_69(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((Pythia8::ParticleData*) G__getstructoffset())->isDiquark((int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_676_0_70(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((Pythia8::ParticleData*) G__getstructoffset())->isParton((int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_676_0_71(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((Pythia8::ParticleData*) G__getstructoffset())->isHadron((int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_676_0_72(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((Pythia8::ParticleData*) G__getstructoffset())->isMeson((int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_676_0_73(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((Pythia8::ParticleData*) G__getstructoffset())->isBaryon((int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_676_0_74(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((Pythia8::ParticleData*) G__getstructoffset())->isOctetHadron((int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_676_0_75(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((Pythia8::ParticleData*) G__getstructoffset())->heaviestQuark((int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_676_0_76(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((Pythia8::ParticleData*) G__getstructoffset())->baryonNumberType((int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_676_0_77(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      ((Pythia8::ParticleData*) G__getstructoffset())->rescaleBR((int) G__int(libp->para[0]), (double) G__double(libp->para[1]));
      G__setnull(result7);
      break;
   case 1:
      ((Pythia8::ParticleData*) G__getstructoffset())->rescaleBR((int) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_676_0_78(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Pythia8::ParticleData*) G__getstructoffset())->setResonancePtr((int) G__int(libp->para[0]), (Pythia8::ResonanceWidths*) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_676_0_79(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Pythia8::ParticleData*) G__getstructoffset())->resInit((int) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_676_0_80(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 5:
      G__letdouble(result7, 100, (double) ((Pythia8::ParticleData*) G__getstructoffset())->resWidth((int) G__int(libp->para[0]), (double) G__double(libp->para[1])
, (int) G__int(libp->para[2]), (bool) G__int(libp->para[3])
, (bool) G__int(libp->para[4])));
      break;
   case 4:
      G__letdouble(result7, 100, (double) ((Pythia8::ParticleData*) G__getstructoffset())->resWidth((int) G__int(libp->para[0]), (double) G__double(libp->para[1])
, (int) G__int(libp->para[2]), (bool) G__int(libp->para[3])));
      break;
   case 3:
      G__letdouble(result7, 100, (double) ((Pythia8::ParticleData*) G__getstructoffset())->resWidth((int) G__int(libp->para[0]), (double) G__double(libp->para[1])
, (int) G__int(libp->para[2])));
      break;
   case 2:
      G__letdouble(result7, 100, (double) ((Pythia8::ParticleData*) G__getstructoffset())->resWidth((int) G__int(libp->para[0]), (double) G__double(libp->para[1])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_676_0_81(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 3:
      G__letdouble(result7, 100, (double) ((Pythia8::ParticleData*) G__getstructoffset())->resWidthOpen((int) G__int(libp->para[0]), (double) G__double(libp->para[1])
, (int) G__int(libp->para[2])));
      break;
   case 2:
      G__letdouble(result7, 100, (double) ((Pythia8::ParticleData*) G__getstructoffset())->resWidthOpen((int) G__int(libp->para[0]), (double) G__double(libp->para[1])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_676_0_82(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 3:
      G__letdouble(result7, 100, (double) ((Pythia8::ParticleData*) G__getstructoffset())->resWidthStore((int) G__int(libp->para[0]), (double) G__double(libp->para[1])
, (int) G__int(libp->para[2])));
      break;
   case 2:
      G__letdouble(result7, 100, (double) ((Pythia8::ParticleData*) G__getstructoffset())->resWidthStore((int) G__int(libp->para[0]), (double) G__double(libp->para[1])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_676_0_83(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 3:
      G__letdouble(result7, 100, (double) ((Pythia8::ParticleData*) G__getstructoffset())->resOpenFrac((int) G__int(libp->para[0]), (int) G__int(libp->para[1])
, (int) G__int(libp->para[2])));
      break;
   case 2:
      G__letdouble(result7, 100, (double) ((Pythia8::ParticleData*) G__getstructoffset())->resOpenFrac((int) G__int(libp->para[0]), (int) G__int(libp->para[1])));
      break;
   case 1:
      G__letdouble(result7, 100, (double) ((Pythia8::ParticleData*) G__getstructoffset())->resOpenFrac((int) G__int(libp->para[0])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_676_0_84(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((Pythia8::ParticleData*) G__getstructoffset())->resWidthRescaleFactor((int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_676_0_85(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 4:
      G__letdouble(result7, 100, (double) ((Pythia8::ParticleData*) G__getstructoffset())->resWidthChan((int) G__int(libp->para[0]), (double) G__double(libp->para[1])
, (int) G__int(libp->para[2]), (int) G__int(libp->para[3])));
      break;
   case 3:
      G__letdouble(result7, 100, (double) ((Pythia8::ParticleData*) G__getstructoffset())->resWidthChan((int) G__int(libp->para[0]), (double) G__double(libp->para[1])
, (int) G__int(libp->para[2])));
      break;
   case 2:
      G__letdouble(result7, 100, (double) ((Pythia8::ParticleData*) G__getstructoffset())->resWidthChan((int) G__int(libp->para[0]), (double) G__double(libp->para[1])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_676_0_86(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((Pythia8::ParticleData*) G__getstructoffset())->particleDataEntryPtr((int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__main92Dct_676_0_94(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   Pythia8::ParticleData* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new Pythia8::ParticleData(*(Pythia8::ParticleData*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__main92DctLN_Pythia8cLcLParticleData));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef Pythia8::ParticleData G__TPythia8cLcLParticleData;
static int G__main92Dct_676_0_95(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (Pythia8::ParticleData*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((Pythia8::ParticleData*) (soff+(sizeof(Pythia8::ParticleData)*i)))->~G__TPythia8cLcLParticleData();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (Pythia8::ParticleData*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((Pythia8::ParticleData*) (soff))->~G__TPythia8cLcLParticleData();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__main92Dct_676_0_96(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   Pythia8::ParticleData* dest = (Pythia8::ParticleData*) G__getstructoffset();
   *dest = *(Pythia8::ParticleData*) libp->para[0].ref;
   const Pythia8::ParticleData& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* Pythia8::ResonanceWidths */
static int G__main92Dct_677_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      ((Pythia8::ResonanceWidths*) G__getstructoffset())->initBasic((int) G__int(libp->para[0]), (bool) G__int(libp->para[1]));
      G__setnull(result7);
      break;
   case 1:
      ((Pythia8::ResonanceWidths*) G__getstructoffset())->initBasic((int) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_677_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((Pythia8::ResonanceWidths*) G__getstructoffset())->init((Pythia8::Info*) G__int(libp->para[0]), (Pythia8::Settings*) G__int(libp->para[1])
, (Pythia8::ParticleData*) G__int(libp->para[2]), (Pythia8::Couplings*) G__int(libp->para[3])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_677_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const Pythia8::ResonanceWidths*) G__getstructoffset())->id());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_677_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 7:
      G__letdouble(result7, 100, (double) ((Pythia8::ResonanceWidths*) G__getstructoffset())->width(
(int) G__int(libp->para[0]), (double) G__double(libp->para[1])
, (int) G__int(libp->para[2]), (bool) G__int(libp->para[3])
, (bool) G__int(libp->para[4]), (int) G__int(libp->para[5])
, (int) G__int(libp->para[6])));
      break;
   case 6:
      G__letdouble(result7, 100, (double) ((Pythia8::ResonanceWidths*) G__getstructoffset())->width((int) G__int(libp->para[0]), (double) G__double(libp->para[1])
, (int) G__int(libp->para[2]), (bool) G__int(libp->para[3])
, (bool) G__int(libp->para[4]), (int) G__int(libp->para[5])));
      break;
   case 5:
      G__letdouble(result7, 100, (double) ((Pythia8::ResonanceWidths*) G__getstructoffset())->width((int) G__int(libp->para[0]), (double) G__double(libp->para[1])
, (int) G__int(libp->para[2]), (bool) G__int(libp->para[3])
, (bool) G__int(libp->para[4])));
      break;
   case 4:
      G__letdouble(result7, 100, (double) ((Pythia8::ResonanceWidths*) G__getstructoffset())->width((int) G__int(libp->para[0]), (double) G__double(libp->para[1])
, (int) G__int(libp->para[2]), (bool) G__int(libp->para[3])));
      break;
   case 3:
      G__letdouble(result7, 100, (double) ((Pythia8::ResonanceWidths*) G__getstructoffset())->width((int) G__int(libp->para[0]), (double) G__double(libp->para[1])
, (int) G__int(libp->para[2])));
      break;
   case 2:
      G__letdouble(result7, 100, (double) ((Pythia8::ResonanceWidths*) G__getstructoffset())->width((int) G__int(libp->para[0]), (double) G__double(libp->para[1])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_677_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 3:
      G__letdouble(result7, 100, (double) ((Pythia8::ResonanceWidths*) G__getstructoffset())->widthOpen((int) G__int(libp->para[0]), (double) G__double(libp->para[1])
, (int) G__int(libp->para[2])));
      break;
   case 2:
      G__letdouble(result7, 100, (double) ((Pythia8::ResonanceWidths*) G__getstructoffset())->widthOpen((int) G__int(libp->para[0]), (double) G__double(libp->para[1])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_677_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 3:
      G__letdouble(result7, 100, (double) ((Pythia8::ResonanceWidths*) G__getstructoffset())->widthStore((int) G__int(libp->para[0]), (double) G__double(libp->para[1])
, (int) G__int(libp->para[2])));
      break;
   case 2:
      G__letdouble(result7, 100, (double) ((Pythia8::ResonanceWidths*) G__getstructoffset())->widthStore((int) G__int(libp->para[0]), (double) G__double(libp->para[1])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_677_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((Pythia8::ResonanceWidths*) G__getstructoffset())->openFrac((int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_677_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((Pythia8::ResonanceWidths*) G__getstructoffset())->widthRescaleFactor());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_677_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((Pythia8::ResonanceWidths*) G__getstructoffset())->widthChan((double) G__double(libp->para[0]), (int) G__int(libp->para[1])
, (int) G__int(libp->para[2])));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__main92Dct_677_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   Pythia8::ResonanceWidths* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new Pythia8::ResonanceWidths(*(Pythia8::ResonanceWidths*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__main92DctLN_Pythia8cLcLResonanceWidths));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef Pythia8::ResonanceWidths G__TPythia8cLcLResonanceWidths;
static int G__main92Dct_677_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (Pythia8::ResonanceWidths*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((Pythia8::ResonanceWidths*) (soff+(sizeof(Pythia8::ResonanceWidths)*i)))->~G__TPythia8cLcLResonanceWidths();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (Pythia8::ResonanceWidths*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((Pythia8::ResonanceWidths*) (soff))->~G__TPythia8cLcLResonanceWidths();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__main92Dct_677_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   Pythia8::ResonanceWidths* dest = (Pythia8::ResonanceWidths*) G__getstructoffset();
   *dest = *(Pythia8::ResonanceWidths*) libp->para[0].ref;
   const Pythia8::ResonanceWidths& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* Pythia8::DecayChannel */
static int G__main92Dct_680_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   Pythia8::DecayChannel* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 11:
     //m: 11
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new Pythia8::DecayChannel(
(int) G__int(libp->para[0]), (double) G__double(libp->para[1])
, (int) G__int(libp->para[2]), (int) G__int(libp->para[3])
, (int) G__int(libp->para[4]), (int) G__int(libp->para[5])
, (int) G__int(libp->para[6]), (int) G__int(libp->para[7])
, (int) G__int(libp->para[8]), (int) G__int(libp->para[9])
, (int) G__int(libp->para[10]));
     } else {
       p = new((void*) gvp) Pythia8::DecayChannel(
(int) G__int(libp->para[0]), (double) G__double(libp->para[1])
, (int) G__int(libp->para[2]), (int) G__int(libp->para[3])
, (int) G__int(libp->para[4]), (int) G__int(libp->para[5])
, (int) G__int(libp->para[6]), (int) G__int(libp->para[7])
, (int) G__int(libp->para[8]), (int) G__int(libp->para[9])
, (int) G__int(libp->para[10]));
     }
     break;
   case 10:
     //m: 10
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new Pythia8::DecayChannel(
(int) G__int(libp->para[0]), (double) G__double(libp->para[1])
, (int) G__int(libp->para[2]), (int) G__int(libp->para[3])
, (int) G__int(libp->para[4]), (int) G__int(libp->para[5])
, (int) G__int(libp->para[6]), (int) G__int(libp->para[7])
, (int) G__int(libp->para[8]), (int) G__int(libp->para[9]));
     } else {
       p = new((void*) gvp) Pythia8::DecayChannel(
(int) G__int(libp->para[0]), (double) G__double(libp->para[1])
, (int) G__int(libp->para[2]), (int) G__int(libp->para[3])
, (int) G__int(libp->para[4]), (int) G__int(libp->para[5])
, (int) G__int(libp->para[6]), (int) G__int(libp->para[7])
, (int) G__int(libp->para[8]), (int) G__int(libp->para[9]));
     }
     break;
   case 9:
     //m: 9
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new Pythia8::DecayChannel(
(int) G__int(libp->para[0]), (double) G__double(libp->para[1])
, (int) G__int(libp->para[2]), (int) G__int(libp->para[3])
, (int) G__int(libp->para[4]), (int) G__int(libp->para[5])
, (int) G__int(libp->para[6]), (int) G__int(libp->para[7])
, (int) G__int(libp->para[8]));
     } else {
       p = new((void*) gvp) Pythia8::DecayChannel(
(int) G__int(libp->para[0]), (double) G__double(libp->para[1])
, (int) G__int(libp->para[2]), (int) G__int(libp->para[3])
, (int) G__int(libp->para[4]), (int) G__int(libp->para[5])
, (int) G__int(libp->para[6]), (int) G__int(libp->para[7])
, (int) G__int(libp->para[8]));
     }
     break;
   case 8:
     //m: 8
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new Pythia8::DecayChannel(
(int) G__int(libp->para[0]), (double) G__double(libp->para[1])
, (int) G__int(libp->para[2]), (int) G__int(libp->para[3])
, (int) G__int(libp->para[4]), (int) G__int(libp->para[5])
, (int) G__int(libp->para[6]), (int) G__int(libp->para[7]));
     } else {
       p = new((void*) gvp) Pythia8::DecayChannel(
(int) G__int(libp->para[0]), (double) G__double(libp->para[1])
, (int) G__int(libp->para[2]), (int) G__int(libp->para[3])
, (int) G__int(libp->para[4]), (int) G__int(libp->para[5])
, (int) G__int(libp->para[6]), (int) G__int(libp->para[7]));
     }
     break;
   case 7:
     //m: 7
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new Pythia8::DecayChannel(
(int) G__int(libp->para[0]), (double) G__double(libp->para[1])
, (int) G__int(libp->para[2]), (int) G__int(libp->para[3])
, (int) G__int(libp->para[4]), (int) G__int(libp->para[5])
, (int) G__int(libp->para[6]));
     } else {
       p = new((void*) gvp) Pythia8::DecayChannel(
(int) G__int(libp->para[0]), (double) G__double(libp->para[1])
, (int) G__int(libp->para[2]), (int) G__int(libp->para[3])
, (int) G__int(libp->para[4]), (int) G__int(libp->para[5])
, (int) G__int(libp->para[6]));
     }
     break;
   case 6:
     //m: 6
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new Pythia8::DecayChannel(
(int) G__int(libp->para[0]), (double) G__double(libp->para[1])
, (int) G__int(libp->para[2]), (int) G__int(libp->para[3])
, (int) G__int(libp->para[4]), (int) G__int(libp->para[5]));
     } else {
       p = new((void*) gvp) Pythia8::DecayChannel(
(int) G__int(libp->para[0]), (double) G__double(libp->para[1])
, (int) G__int(libp->para[2]), (int) G__int(libp->para[3])
, (int) G__int(libp->para[4]), (int) G__int(libp->para[5]));
     }
     break;
   case 5:
     //m: 5
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new Pythia8::DecayChannel(
(int) G__int(libp->para[0]), (double) G__double(libp->para[1])
, (int) G__int(libp->para[2]), (int) G__int(libp->para[3])
, (int) G__int(libp->para[4]));
     } else {
       p = new((void*) gvp) Pythia8::DecayChannel(
(int) G__int(libp->para[0]), (double) G__double(libp->para[1])
, (int) G__int(libp->para[2]), (int) G__int(libp->para[3])
, (int) G__int(libp->para[4]));
     }
     break;
   case 4:
     //m: 4
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new Pythia8::DecayChannel(
(int) G__int(libp->para[0]), (double) G__double(libp->para[1])
, (int) G__int(libp->para[2]), (int) G__int(libp->para[3]));
     } else {
       p = new((void*) gvp) Pythia8::DecayChannel(
(int) G__int(libp->para[0]), (double) G__double(libp->para[1])
, (int) G__int(libp->para[2]), (int) G__int(libp->para[3]));
     }
     break;
   case 3:
     //m: 3
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new Pythia8::DecayChannel(
(int) G__int(libp->para[0]), (double) G__double(libp->para[1])
, (int) G__int(libp->para[2]));
     } else {
       p = new((void*) gvp) Pythia8::DecayChannel(
(int) G__int(libp->para[0]), (double) G__double(libp->para[1])
, (int) G__int(libp->para[2]));
     }
     break;
   case 2:
     //m: 2
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new Pythia8::DecayChannel((int) G__int(libp->para[0]), (double) G__double(libp->para[1]));
     } else {
       p = new((void*) gvp) Pythia8::DecayChannel((int) G__int(libp->para[0]), (double) G__double(libp->para[1]));
     }
     break;
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new Pythia8::DecayChannel((int) G__int(libp->para[0]));
     } else {
       p = new((void*) gvp) Pythia8::DecayChannel((int) G__int(libp->para[0]));
     }
     break;
   case 0:
     int n = G__getaryconstruct();
     if (n) {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new Pythia8::DecayChannel[n];
       } else {
         p = new((void*) gvp) Pythia8::DecayChannel[n];
       }
     } else {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new Pythia8::DecayChannel;
       } else {
         p = new((void*) gvp) Pythia8::DecayChannel;
       }
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__main92DctLN_Pythia8cLcLDecayChannel));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_680_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Pythia8::DecayChannel*) G__getstructoffset())->onMode((int) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_680_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      ((Pythia8::DecayChannel*) G__getstructoffset())->bRatio((double) G__double(libp->para[0]), (bool) G__int(libp->para[1]));
      G__setnull(result7);
      break;
   case 1:
      ((Pythia8::DecayChannel*) G__getstructoffset())->bRatio((double) G__double(libp->para[0]));
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_680_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Pythia8::DecayChannel*) G__getstructoffset())->rescaleBR((double) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_680_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Pythia8::DecayChannel*) G__getstructoffset())->meMode((int) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_680_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Pythia8::DecayChannel*) G__getstructoffset())->multiplicity((int) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_680_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Pythia8::DecayChannel*) G__getstructoffset())->product((int) G__int(libp->para[0]), (int) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_680_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Pythia8::DecayChannel*) G__getstructoffset())->setHasChanged((bool) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_680_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const Pythia8::DecayChannel*) G__getstructoffset())->onMode());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_680_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const Pythia8::DecayChannel*) G__getstructoffset())->bRatio());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_680_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const Pythia8::DecayChannel*) G__getstructoffset())->meMode());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_680_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const Pythia8::DecayChannel*) G__getstructoffset())->multiplicity());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_680_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const Pythia8::DecayChannel*) G__getstructoffset())->product((int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_680_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const Pythia8::DecayChannel*) G__getstructoffset())->hasChanged());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_680_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const Pythia8::DecayChannel*) G__getstructoffset())->contains((int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_680_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const Pythia8::DecayChannel*) G__getstructoffset())->contains((int) G__int(libp->para[0]), (int) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_680_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const Pythia8::DecayChannel*) G__getstructoffset())->contains((int) G__int(libp->para[0]), (int) G__int(libp->para[1])
, (int) G__int(libp->para[2])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_680_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Pythia8::DecayChannel*) G__getstructoffset())->currentBR((double) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_680_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const Pythia8::DecayChannel*) G__getstructoffset())->currentBR());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_680_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Pythia8::DecayChannel*) G__getstructoffset())->onShellWidth((double) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_680_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const Pythia8::DecayChannel*) G__getstructoffset())->onShellWidth());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_680_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Pythia8::DecayChannel*) G__getstructoffset())->onShellWidthFactor((double) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_680_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Pythia8::DecayChannel*) G__getstructoffset())->openSec((int) G__int(libp->para[0]), (double) G__double(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_680_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const Pythia8::DecayChannel*) G__getstructoffset())->openSec((int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__main92Dct_680_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   Pythia8::DecayChannel* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new Pythia8::DecayChannel(*(Pythia8::DecayChannel*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__main92DctLN_Pythia8cLcLDecayChannel));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef Pythia8::DecayChannel G__TPythia8cLcLDecayChannel;
static int G__main92Dct_680_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (Pythia8::DecayChannel*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((Pythia8::DecayChannel*) (soff+(sizeof(Pythia8::DecayChannel)*i)))->~G__TPythia8cLcLDecayChannel();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (Pythia8::DecayChannel*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((Pythia8::DecayChannel*) (soff))->~G__TPythia8cLcLDecayChannel();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__main92Dct_680_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   Pythia8::DecayChannel* dest = (Pythia8::DecayChannel*) G__getstructoffset();
   *dest = *(Pythia8::DecayChannel*) libp->para[0].ref;
   const Pythia8::DecayChannel& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* Pythia8::ParticleDataEntry */
static int G__main92Dct_681_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   Pythia8::ParticleDataEntry* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 10:
     //m: 10
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new Pythia8::ParticleDataEntry(
(int) G__int(libp->para[0]), *((string*) G__int(libp->para[1]))
, (int) G__int(libp->para[2]), (int) G__int(libp->para[3])
, (int) G__int(libp->para[4]), (double) G__double(libp->para[5])
, (double) G__double(libp->para[6]), (double) G__double(libp->para[7])
, (double) G__double(libp->para[8]), (double) G__double(libp->para[9]));
     } else {
       p = new((void*) gvp) Pythia8::ParticleDataEntry(
(int) G__int(libp->para[0]), *((string*) G__int(libp->para[1]))
, (int) G__int(libp->para[2]), (int) G__int(libp->para[3])
, (int) G__int(libp->para[4]), (double) G__double(libp->para[5])
, (double) G__double(libp->para[6]), (double) G__double(libp->para[7])
, (double) G__double(libp->para[8]), (double) G__double(libp->para[9]));
     }
     break;
   case 9:
     //m: 9
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new Pythia8::ParticleDataEntry(
(int) G__int(libp->para[0]), *((string*) G__int(libp->para[1]))
, (int) G__int(libp->para[2]), (int) G__int(libp->para[3])
, (int) G__int(libp->para[4]), (double) G__double(libp->para[5])
, (double) G__double(libp->para[6]), (double) G__double(libp->para[7])
, (double) G__double(libp->para[8]));
     } else {
       p = new((void*) gvp) Pythia8::ParticleDataEntry(
(int) G__int(libp->para[0]), *((string*) G__int(libp->para[1]))
, (int) G__int(libp->para[2]), (int) G__int(libp->para[3])
, (int) G__int(libp->para[4]), (double) G__double(libp->para[5])
, (double) G__double(libp->para[6]), (double) G__double(libp->para[7])
, (double) G__double(libp->para[8]));
     }
     break;
   case 8:
     //m: 8
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new Pythia8::ParticleDataEntry(
(int) G__int(libp->para[0]), *((string*) G__int(libp->para[1]))
, (int) G__int(libp->para[2]), (int) G__int(libp->para[3])
, (int) G__int(libp->para[4]), (double) G__double(libp->para[5])
, (double) G__double(libp->para[6]), (double) G__double(libp->para[7]));
     } else {
       p = new((void*) gvp) Pythia8::ParticleDataEntry(
(int) G__int(libp->para[0]), *((string*) G__int(libp->para[1]))
, (int) G__int(libp->para[2]), (int) G__int(libp->para[3])
, (int) G__int(libp->para[4]), (double) G__double(libp->para[5])
, (double) G__double(libp->para[6]), (double) G__double(libp->para[7]));
     }
     break;
   case 7:
     //m: 7
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new Pythia8::ParticleDataEntry(
(int) G__int(libp->para[0]), *((string*) G__int(libp->para[1]))
, (int) G__int(libp->para[2]), (int) G__int(libp->para[3])
, (int) G__int(libp->para[4]), (double) G__double(libp->para[5])
, (double) G__double(libp->para[6]));
     } else {
       p = new((void*) gvp) Pythia8::ParticleDataEntry(
(int) G__int(libp->para[0]), *((string*) G__int(libp->para[1]))
, (int) G__int(libp->para[2]), (int) G__int(libp->para[3])
, (int) G__int(libp->para[4]), (double) G__double(libp->para[5])
, (double) G__double(libp->para[6]));
     }
     break;
   case 6:
     //m: 6
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new Pythia8::ParticleDataEntry(
(int) G__int(libp->para[0]), *((string*) G__int(libp->para[1]))
, (int) G__int(libp->para[2]), (int) G__int(libp->para[3])
, (int) G__int(libp->para[4]), (double) G__double(libp->para[5]));
     } else {
       p = new((void*) gvp) Pythia8::ParticleDataEntry(
(int) G__int(libp->para[0]), *((string*) G__int(libp->para[1]))
, (int) G__int(libp->para[2]), (int) G__int(libp->para[3])
, (int) G__int(libp->para[4]), (double) G__double(libp->para[5]));
     }
     break;
   case 5:
     //m: 5
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new Pythia8::ParticleDataEntry(
(int) G__int(libp->para[0]), *((string*) G__int(libp->para[1]))
, (int) G__int(libp->para[2]), (int) G__int(libp->para[3])
, (int) G__int(libp->para[4]));
     } else {
       p = new((void*) gvp) Pythia8::ParticleDataEntry(
(int) G__int(libp->para[0]), *((string*) G__int(libp->para[1]))
, (int) G__int(libp->para[2]), (int) G__int(libp->para[3])
, (int) G__int(libp->para[4]));
     }
     break;
   case 4:
     //m: 4
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new Pythia8::ParticleDataEntry(
(int) G__int(libp->para[0]), *((string*) G__int(libp->para[1]))
, (int) G__int(libp->para[2]), (int) G__int(libp->para[3]));
     } else {
       p = new((void*) gvp) Pythia8::ParticleDataEntry(
(int) G__int(libp->para[0]), *((string*) G__int(libp->para[1]))
, (int) G__int(libp->para[2]), (int) G__int(libp->para[3]));
     }
     break;
   case 3:
     //m: 3
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new Pythia8::ParticleDataEntry(
(int) G__int(libp->para[0]), *((string*) G__int(libp->para[1]))
, (int) G__int(libp->para[2]));
     } else {
       p = new((void*) gvp) Pythia8::ParticleDataEntry(
(int) G__int(libp->para[0]), *((string*) G__int(libp->para[1]))
, (int) G__int(libp->para[2]));
     }
     break;
   case 2:
     //m: 2
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new Pythia8::ParticleDataEntry((int) G__int(libp->para[0]), *((string*) G__int(libp->para[1])));
     } else {
       p = new((void*) gvp) Pythia8::ParticleDataEntry((int) G__int(libp->para[0]), *((string*) G__int(libp->para[1])));
     }
     break;
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new Pythia8::ParticleDataEntry((int) G__int(libp->para[0]));
     } else {
       p = new((void*) gvp) Pythia8::ParticleDataEntry((int) G__int(libp->para[0]));
     }
     break;
   case 0:
     int n = G__getaryconstruct();
     if (n) {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new Pythia8::ParticleDataEntry[n];
       } else {
         p = new((void*) gvp) Pythia8::ParticleDataEntry[n];
       }
     } else {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new Pythia8::ParticleDataEntry;
       } else {
         p = new((void*) gvp) Pythia8::ParticleDataEntry;
       }
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__main92DctLN_Pythia8cLcLParticleDataEntry));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_681_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   Pythia8::ParticleDataEntry* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 11:
     //m: 11
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new Pythia8::ParticleDataEntry(
(int) G__int(libp->para[0]), *((string*) G__int(libp->para[1]))
, *((string*) G__int(libp->para[2])), (int) G__int(libp->para[3])
, (int) G__int(libp->para[4]), (int) G__int(libp->para[5])
, (double) G__double(libp->para[6]), (double) G__double(libp->para[7])
, (double) G__double(libp->para[8]), (double) G__double(libp->para[9])
, (double) G__double(libp->para[10]));
     } else {
       p = new((void*) gvp) Pythia8::ParticleDataEntry(
(int) G__int(libp->para[0]), *((string*) G__int(libp->para[1]))
, *((string*) G__int(libp->para[2])), (int) G__int(libp->para[3])
, (int) G__int(libp->para[4]), (int) G__int(libp->para[5])
, (double) G__double(libp->para[6]), (double) G__double(libp->para[7])
, (double) G__double(libp->para[8]), (double) G__double(libp->para[9])
, (double) G__double(libp->para[10]));
     }
     break;
   case 10:
     //m: 10
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new Pythia8::ParticleDataEntry(
(int) G__int(libp->para[0]), *((string*) G__int(libp->para[1]))
, *((string*) G__int(libp->para[2])), (int) G__int(libp->para[3])
, (int) G__int(libp->para[4]), (int) G__int(libp->para[5])
, (double) G__double(libp->para[6]), (double) G__double(libp->para[7])
, (double) G__double(libp->para[8]), (double) G__double(libp->para[9]));
     } else {
       p = new((void*) gvp) Pythia8::ParticleDataEntry(
(int) G__int(libp->para[0]), *((string*) G__int(libp->para[1]))
, *((string*) G__int(libp->para[2])), (int) G__int(libp->para[3])
, (int) G__int(libp->para[4]), (int) G__int(libp->para[5])
, (double) G__double(libp->para[6]), (double) G__double(libp->para[7])
, (double) G__double(libp->para[8]), (double) G__double(libp->para[9]));
     }
     break;
   case 9:
     //m: 9
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new Pythia8::ParticleDataEntry(
(int) G__int(libp->para[0]), *((string*) G__int(libp->para[1]))
, *((string*) G__int(libp->para[2])), (int) G__int(libp->para[3])
, (int) G__int(libp->para[4]), (int) G__int(libp->para[5])
, (double) G__double(libp->para[6]), (double) G__double(libp->para[7])
, (double) G__double(libp->para[8]));
     } else {
       p = new((void*) gvp) Pythia8::ParticleDataEntry(
(int) G__int(libp->para[0]), *((string*) G__int(libp->para[1]))
, *((string*) G__int(libp->para[2])), (int) G__int(libp->para[3])
, (int) G__int(libp->para[4]), (int) G__int(libp->para[5])
, (double) G__double(libp->para[6]), (double) G__double(libp->para[7])
, (double) G__double(libp->para[8]));
     }
     break;
   case 8:
     //m: 8
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new Pythia8::ParticleDataEntry(
(int) G__int(libp->para[0]), *((string*) G__int(libp->para[1]))
, *((string*) G__int(libp->para[2])), (int) G__int(libp->para[3])
, (int) G__int(libp->para[4]), (int) G__int(libp->para[5])
, (double) G__double(libp->para[6]), (double) G__double(libp->para[7]));
     } else {
       p = new((void*) gvp) Pythia8::ParticleDataEntry(
(int) G__int(libp->para[0]), *((string*) G__int(libp->para[1]))
, *((string*) G__int(libp->para[2])), (int) G__int(libp->para[3])
, (int) G__int(libp->para[4]), (int) G__int(libp->para[5])
, (double) G__double(libp->para[6]), (double) G__double(libp->para[7]));
     }
     break;
   case 7:
     //m: 7
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new Pythia8::ParticleDataEntry(
(int) G__int(libp->para[0]), *((string*) G__int(libp->para[1]))
, *((string*) G__int(libp->para[2])), (int) G__int(libp->para[3])
, (int) G__int(libp->para[4]), (int) G__int(libp->para[5])
, (double) G__double(libp->para[6]));
     } else {
       p = new((void*) gvp) Pythia8::ParticleDataEntry(
(int) G__int(libp->para[0]), *((string*) G__int(libp->para[1]))
, *((string*) G__int(libp->para[2])), (int) G__int(libp->para[3])
, (int) G__int(libp->para[4]), (int) G__int(libp->para[5])
, (double) G__double(libp->para[6]));
     }
     break;
   case 6:
     //m: 6
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new Pythia8::ParticleDataEntry(
(int) G__int(libp->para[0]), *((string*) G__int(libp->para[1]))
, *((string*) G__int(libp->para[2])), (int) G__int(libp->para[3])
, (int) G__int(libp->para[4]), (int) G__int(libp->para[5]));
     } else {
       p = new((void*) gvp) Pythia8::ParticleDataEntry(
(int) G__int(libp->para[0]), *((string*) G__int(libp->para[1]))
, *((string*) G__int(libp->para[2])), (int) G__int(libp->para[3])
, (int) G__int(libp->para[4]), (int) G__int(libp->para[5]));
     }
     break;
   case 5:
     //m: 5
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new Pythia8::ParticleDataEntry(
(int) G__int(libp->para[0]), *((string*) G__int(libp->para[1]))
, *((string*) G__int(libp->para[2])), (int) G__int(libp->para[3])
, (int) G__int(libp->para[4]));
     } else {
       p = new((void*) gvp) Pythia8::ParticleDataEntry(
(int) G__int(libp->para[0]), *((string*) G__int(libp->para[1]))
, *((string*) G__int(libp->para[2])), (int) G__int(libp->para[3])
, (int) G__int(libp->para[4]));
     }
     break;
   case 4:
     //m: 4
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new Pythia8::ParticleDataEntry(
(int) G__int(libp->para[0]), *((string*) G__int(libp->para[1]))
, *((string*) G__int(libp->para[2])), (int) G__int(libp->para[3]));
     } else {
       p = new((void*) gvp) Pythia8::ParticleDataEntry(
(int) G__int(libp->para[0]), *((string*) G__int(libp->para[1]))
, *((string*) G__int(libp->para[2])), (int) G__int(libp->para[3]));
     }
     break;
   case 3:
     //m: 3
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new Pythia8::ParticleDataEntry(
(int) G__int(libp->para[0]), *((string*) G__int(libp->para[1]))
, *((string*) G__int(libp->para[2])));
     } else {
       p = new((void*) gvp) Pythia8::ParticleDataEntry(
(int) G__int(libp->para[0]), *((string*) G__int(libp->para[1]))
, *((string*) G__int(libp->para[2])));
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__main92DctLN_Pythia8cLcLParticleDataEntry));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_681_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Pythia8::ParticleDataEntry*) G__getstructoffset())->setDefaults();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_681_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Pythia8::ParticleDataEntry*) G__getstructoffset())->initPtr((Pythia8::ParticleData*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_681_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 10:
      ((Pythia8::ParticleDataEntry*) G__getstructoffset())->setAll(
*((string*) G__int(libp->para[0])), *((string*) G__int(libp->para[1]))
, (int) G__int(libp->para[2]), (int) G__int(libp->para[3])
, (int) G__int(libp->para[4]), (double) G__double(libp->para[5])
, (double) G__double(libp->para[6]), (double) G__double(libp->para[7])
, (double) G__double(libp->para[8]), (double) G__double(libp->para[9]));
      G__setnull(result7);
      break;
   case 9:
      ((Pythia8::ParticleDataEntry*) G__getstructoffset())->setAll(
*((string*) G__int(libp->para[0])), *((string*) G__int(libp->para[1]))
, (int) G__int(libp->para[2]), (int) G__int(libp->para[3])
, (int) G__int(libp->para[4]), (double) G__double(libp->para[5])
, (double) G__double(libp->para[6]), (double) G__double(libp->para[7])
, (double) G__double(libp->para[8]));
      G__setnull(result7);
      break;
   case 8:
      ((Pythia8::ParticleDataEntry*) G__getstructoffset())->setAll(
*((string*) G__int(libp->para[0])), *((string*) G__int(libp->para[1]))
, (int) G__int(libp->para[2]), (int) G__int(libp->para[3])
, (int) G__int(libp->para[4]), (double) G__double(libp->para[5])
, (double) G__double(libp->para[6]), (double) G__double(libp->para[7]));
      G__setnull(result7);
      break;
   case 7:
      ((Pythia8::ParticleDataEntry*) G__getstructoffset())->setAll(
*((string*) G__int(libp->para[0])), *((string*) G__int(libp->para[1]))
, (int) G__int(libp->para[2]), (int) G__int(libp->para[3])
, (int) G__int(libp->para[4]), (double) G__double(libp->para[5])
, (double) G__double(libp->para[6]));
      G__setnull(result7);
      break;
   case 6:
      ((Pythia8::ParticleDataEntry*) G__getstructoffset())->setAll(*((string*) G__int(libp->para[0])), *((string*) G__int(libp->para[1]))
, (int) G__int(libp->para[2]), (int) G__int(libp->para[3])
, (int) G__int(libp->para[4]), (double) G__double(libp->para[5]));
      G__setnull(result7);
      break;
   case 5:
      ((Pythia8::ParticleDataEntry*) G__getstructoffset())->setAll(*((string*) G__int(libp->para[0])), *((string*) G__int(libp->para[1]))
, (int) G__int(libp->para[2]), (int) G__int(libp->para[3])
, (int) G__int(libp->para[4]));
      G__setnull(result7);
      break;
   case 4:
      ((Pythia8::ParticleDataEntry*) G__getstructoffset())->setAll(*((string*) G__int(libp->para[0])), *((string*) G__int(libp->para[1]))
, (int) G__int(libp->para[2]), (int) G__int(libp->para[3]));
      G__setnull(result7);
      break;
   case 3:
      ((Pythia8::ParticleDataEntry*) G__getstructoffset())->setAll(*((string*) G__int(libp->para[0])), *((string*) G__int(libp->para[1]))
, (int) G__int(libp->para[2]));
      G__setnull(result7);
      break;
   case 2:
      ((Pythia8::ParticleDataEntry*) G__getstructoffset())->setAll(*((string*) G__int(libp->para[0])), *((string*) G__int(libp->para[1])));
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_681_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Pythia8::ParticleDataEntry*) G__getstructoffset())->setName(*((string*) G__int(libp->para[0])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_681_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Pythia8::ParticleDataEntry*) G__getstructoffset())->setAntiName(*((string*) G__int(libp->para[0])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_681_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Pythia8::ParticleDataEntry*) G__getstructoffset())->setNames(*((string*) G__int(libp->para[0])), *((string*) G__int(libp->para[1])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_681_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Pythia8::ParticleDataEntry*) G__getstructoffset())->setSpinType((int) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_681_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Pythia8::ParticleDataEntry*) G__getstructoffset())->setChargeType((int) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_681_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Pythia8::ParticleDataEntry*) G__getstructoffset())->setColType((int) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_681_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Pythia8::ParticleDataEntry*) G__getstructoffset())->setM0((double) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_681_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      ((Pythia8::ParticleDataEntry*) G__getstructoffset())->setMWidth((double) G__double(libp->para[0]), (bool) G__int(libp->para[1]));
      G__setnull(result7);
      break;
   case 1:
      ((Pythia8::ParticleDataEntry*) G__getstructoffset())->setMWidth((double) G__double(libp->para[0]));
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_681_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Pythia8::ParticleDataEntry*) G__getstructoffset())->setMMin((double) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_681_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Pythia8::ParticleDataEntry*) G__getstructoffset())->setMMax((double) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_681_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Pythia8::ParticleDataEntry*) G__getstructoffset())->setMMinNoChange((double) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_681_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Pythia8::ParticleDataEntry*) G__getstructoffset())->setMMaxNoChange((double) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_681_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Pythia8::ParticleDataEntry*) G__getstructoffset())->setTau0((double) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_681_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Pythia8::ParticleDataEntry*) G__getstructoffset())->setIsResonance((bool) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_681_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      ((Pythia8::ParticleDataEntry*) G__getstructoffset())->setMayDecay((bool) G__int(libp->para[0]), (bool) G__int(libp->para[1]));
      G__setnull(result7);
      break;
   case 1:
      ((Pythia8::ParticleDataEntry*) G__getstructoffset())->setMayDecay((bool) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_681_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Pythia8::ParticleDataEntry*) G__getstructoffset())->setDoExternalDecay((bool) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_681_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Pythia8::ParticleDataEntry*) G__getstructoffset())->setIsVisible((bool) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_681_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Pythia8::ParticleDataEntry*) G__getstructoffset())->setDoForceWidth((bool) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_681_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Pythia8::ParticleDataEntry*) G__getstructoffset())->setHasChanged((bool) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_681_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const Pythia8::ParticleDataEntry*) G__getstructoffset())->id());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_681_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const Pythia8::ParticleDataEntry*) G__getstructoffset())->hasAnti());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_681_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      {
         const string* pobj;
         const string xobj = ((const Pythia8::ParticleDataEntry*) G__getstructoffset())->name((int) G__int(libp->para[0]));
         pobj = new string(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
      break;
   case 0:
      {
         const string* pobj;
         const string xobj = ((const Pythia8::ParticleDataEntry*) G__getstructoffset())->name();
         pobj = new string(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_681_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const Pythia8::ParticleDataEntry*) G__getstructoffset())->spinType());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_681_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      G__letint(result7, 105, (long) ((const Pythia8::ParticleDataEntry*) G__getstructoffset())->chargeType((int) G__int(libp->para[0])));
      break;
   case 0:
      G__letint(result7, 105, (long) ((const Pythia8::ParticleDataEntry*) G__getstructoffset())->chargeType());
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_681_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      G__letdouble(result7, 100, (double) ((const Pythia8::ParticleDataEntry*) G__getstructoffset())->charge((int) G__int(libp->para[0])));
      break;
   case 0:
      G__letdouble(result7, 100, (double) ((const Pythia8::ParticleDataEntry*) G__getstructoffset())->charge());
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_681_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      G__letint(result7, 105, (long) ((const Pythia8::ParticleDataEntry*) G__getstructoffset())->colType((int) G__int(libp->para[0])));
      break;
   case 0:
      G__letint(result7, 105, (long) ((const Pythia8::ParticleDataEntry*) G__getstructoffset())->colType());
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_681_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const Pythia8::ParticleDataEntry*) G__getstructoffset())->m0());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_681_0_33(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const Pythia8::ParticleDataEntry*) G__getstructoffset())->mWidth());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_681_0_34(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const Pythia8::ParticleDataEntry*) G__getstructoffset())->mMin());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_681_0_35(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const Pythia8::ParticleDataEntry*) G__getstructoffset())->mMax());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_681_0_36(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const Pythia8::ParticleDataEntry*) G__getstructoffset())->m0Min());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_681_0_37(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const Pythia8::ParticleDataEntry*) G__getstructoffset())->m0Max());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_681_0_38(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const Pythia8::ParticleDataEntry*) G__getstructoffset())->tau0());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_681_0_39(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const Pythia8::ParticleDataEntry*) G__getstructoffset())->isResonance());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_681_0_40(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const Pythia8::ParticleDataEntry*) G__getstructoffset())->mayDecay());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_681_0_41(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const Pythia8::ParticleDataEntry*) G__getstructoffset())->doExternalDecay());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_681_0_42(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const Pythia8::ParticleDataEntry*) G__getstructoffset())->isVisible());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_681_0_43(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const Pythia8::ParticleDataEntry*) G__getstructoffset())->doForceWidth());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_681_0_44(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const Pythia8::ParticleDataEntry*) G__getstructoffset())->hasChanged());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_681_0_45(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Pythia8::ParticleDataEntry*) G__getstructoffset())->initBWmass();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_681_0_46(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const Pythia8::ParticleDataEntry*) G__getstructoffset())->constituentMass());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_681_0_47(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((Pythia8::ParticleDataEntry*) G__getstructoffset())->mSel());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_681_0_48(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((Pythia8::ParticleDataEntry*) G__getstructoffset())->mRun((double) G__double(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_681_0_49(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const Pythia8::ParticleDataEntry*) G__getstructoffset())->useBreitWigner());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_681_0_50(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const Pythia8::ParticleDataEntry*) G__getstructoffset())->canDecay());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_681_0_51(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const Pythia8::ParticleDataEntry*) G__getstructoffset())->isLepton());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_681_0_52(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const Pythia8::ParticleDataEntry*) G__getstructoffset())->isQuark());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_681_0_53(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const Pythia8::ParticleDataEntry*) G__getstructoffset())->isGluon());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_681_0_54(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const Pythia8::ParticleDataEntry*) G__getstructoffset())->isDiquark());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_681_0_55(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const Pythia8::ParticleDataEntry*) G__getstructoffset())->isParton());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_681_0_56(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const Pythia8::ParticleDataEntry*) G__getstructoffset())->isHadron());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_681_0_57(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const Pythia8::ParticleDataEntry*) G__getstructoffset())->isMeson());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_681_0_58(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const Pythia8::ParticleDataEntry*) G__getstructoffset())->isBaryon());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_681_0_59(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const Pythia8::ParticleDataEntry*) G__getstructoffset())->isOctetHadron());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_681_0_60(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      G__letint(result7, 105, (long) ((const Pythia8::ParticleDataEntry*) G__getstructoffset())->heaviestQuark((int) G__int(libp->para[0])));
      break;
   case 0:
      G__letint(result7, 105, (long) ((const Pythia8::ParticleDataEntry*) G__getstructoffset())->heaviestQuark());
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_681_0_61(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      G__letint(result7, 105, (long) ((const Pythia8::ParticleDataEntry*) G__getstructoffset())->baryonNumberType((int) G__int(libp->para[0])));
      break;
   case 0:
      G__letint(result7, 105, (long) ((const Pythia8::ParticleDataEntry*) G__getstructoffset())->baryonNumberType());
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_681_0_62(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Pythia8::ParticleDataEntry*) G__getstructoffset())->clearChannels();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_681_0_63(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 11:
      ((Pythia8::ParticleDataEntry*) G__getstructoffset())->addChannel(
(int) G__int(libp->para[0]), (double) G__double(libp->para[1])
, (int) G__int(libp->para[2]), (int) G__int(libp->para[3])
, (int) G__int(libp->para[4]), (int) G__int(libp->para[5])
, (int) G__int(libp->para[6]), (int) G__int(libp->para[7])
, (int) G__int(libp->para[8]), (int) G__int(libp->para[9])
, (int) G__int(libp->para[10]));
      G__setnull(result7);
      break;
   case 10:
      ((Pythia8::ParticleDataEntry*) G__getstructoffset())->addChannel(
(int) G__int(libp->para[0]), (double) G__double(libp->para[1])
, (int) G__int(libp->para[2]), (int) G__int(libp->para[3])
, (int) G__int(libp->para[4]), (int) G__int(libp->para[5])
, (int) G__int(libp->para[6]), (int) G__int(libp->para[7])
, (int) G__int(libp->para[8]), (int) G__int(libp->para[9]));
      G__setnull(result7);
      break;
   case 9:
      ((Pythia8::ParticleDataEntry*) G__getstructoffset())->addChannel(
(int) G__int(libp->para[0]), (double) G__double(libp->para[1])
, (int) G__int(libp->para[2]), (int) G__int(libp->para[3])
, (int) G__int(libp->para[4]), (int) G__int(libp->para[5])
, (int) G__int(libp->para[6]), (int) G__int(libp->para[7])
, (int) G__int(libp->para[8]));
      G__setnull(result7);
      break;
   case 8:
      ((Pythia8::ParticleDataEntry*) G__getstructoffset())->addChannel(
(int) G__int(libp->para[0]), (double) G__double(libp->para[1])
, (int) G__int(libp->para[2]), (int) G__int(libp->para[3])
, (int) G__int(libp->para[4]), (int) G__int(libp->para[5])
, (int) G__int(libp->para[6]), (int) G__int(libp->para[7]));
      G__setnull(result7);
      break;
   case 7:
      ((Pythia8::ParticleDataEntry*) G__getstructoffset())->addChannel(
(int) G__int(libp->para[0]), (double) G__double(libp->para[1])
, (int) G__int(libp->para[2]), (int) G__int(libp->para[3])
, (int) G__int(libp->para[4]), (int) G__int(libp->para[5])
, (int) G__int(libp->para[6]));
      G__setnull(result7);
      break;
   case 6:
      ((Pythia8::ParticleDataEntry*) G__getstructoffset())->addChannel((int) G__int(libp->para[0]), (double) G__double(libp->para[1])
, (int) G__int(libp->para[2]), (int) G__int(libp->para[3])
, (int) G__int(libp->para[4]), (int) G__int(libp->para[5]));
      G__setnull(result7);
      break;
   case 5:
      ((Pythia8::ParticleDataEntry*) G__getstructoffset())->addChannel((int) G__int(libp->para[0]), (double) G__double(libp->para[1])
, (int) G__int(libp->para[2]), (int) G__int(libp->para[3])
, (int) G__int(libp->para[4]));
      G__setnull(result7);
      break;
   case 4:
      ((Pythia8::ParticleDataEntry*) G__getstructoffset())->addChannel((int) G__int(libp->para[0]), (double) G__double(libp->para[1])
, (int) G__int(libp->para[2]), (int) G__int(libp->para[3]));
      G__setnull(result7);
      break;
   case 3:
      ((Pythia8::ParticleDataEntry*) G__getstructoffset())->addChannel((int) G__int(libp->para[0]), (double) G__double(libp->para[1])
, (int) G__int(libp->para[2]));
      G__setnull(result7);
      break;
   case 2:
      ((Pythia8::ParticleDataEntry*) G__getstructoffset())->addChannel((int) G__int(libp->para[0]), (double) G__double(libp->para[1]));
      G__setnull(result7);
      break;
   case 1:
      ((Pythia8::ParticleDataEntry*) G__getstructoffset())->addChannel((int) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((Pythia8::ParticleDataEntry*) G__getstructoffset())->addChannel();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_681_0_64(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const Pythia8::ParticleDataEntry*) G__getstructoffset())->sizeChannels());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_681_0_65(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const Pythia8::DecayChannel& obj = ((Pythia8::ParticleDataEntry*) G__getstructoffset())->channel((int) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_681_0_66(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const Pythia8::DecayChannel& obj = ((const Pythia8::ParticleDataEntry*) G__getstructoffset())->channel((int) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_681_0_67(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      ((Pythia8::ParticleDataEntry*) G__getstructoffset())->rescaleBR((double) G__double(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((Pythia8::ParticleDataEntry*) G__getstructoffset())->rescaleBR();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_681_0_68(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 3:
      G__letint(result7, 103, (long) ((Pythia8::ParticleDataEntry*) G__getstructoffset())->preparePick((int) G__int(libp->para[0]), (double) G__double(libp->para[1])
, (int) G__int(libp->para[2])));
      break;
   case 2:
      G__letint(result7, 103, (long) ((Pythia8::ParticleDataEntry*) G__getstructoffset())->preparePick((int) G__int(libp->para[0]), (double) G__double(libp->para[1])));
      break;
   case 1:
      G__letint(result7, 103, (long) ((Pythia8::ParticleDataEntry*) G__getstructoffset())->preparePick((int) G__int(libp->para[0])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_681_0_69(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const Pythia8::DecayChannel& obj = ((Pythia8::ParticleDataEntry*) G__getstructoffset())->pickChannel();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_681_0_70(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Pythia8::ParticleDataEntry*) G__getstructoffset())->setResonancePtr((Pythia8::ResonanceWidths*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_681_0_71(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((Pythia8::ParticleDataEntry*) G__getstructoffset())->getResonancePtr());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_681_0_72(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Pythia8::ParticleDataEntry*) G__getstructoffset())->resInit((Pythia8::Info*) G__int(libp->para[0]), (Pythia8::Settings*) G__int(libp->para[1])
, (Pythia8::ParticleData*) G__int(libp->para[2]), (Pythia8::Couplings*) G__int(libp->para[3]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_681_0_73(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 5:
      G__letdouble(result7, 100, (double) ((Pythia8::ParticleDataEntry*) G__getstructoffset())->resWidth((int) G__int(libp->para[0]), (double) G__double(libp->para[1])
, (int) G__int(libp->para[2]), (bool) G__int(libp->para[3])
, (bool) G__int(libp->para[4])));
      break;
   case 4:
      G__letdouble(result7, 100, (double) ((Pythia8::ParticleDataEntry*) G__getstructoffset())->resWidth((int) G__int(libp->para[0]), (double) G__double(libp->para[1])
, (int) G__int(libp->para[2]), (bool) G__int(libp->para[3])));
      break;
   case 3:
      G__letdouble(result7, 100, (double) ((Pythia8::ParticleDataEntry*) G__getstructoffset())->resWidth((int) G__int(libp->para[0]), (double) G__double(libp->para[1])
, (int) G__int(libp->para[2])));
      break;
   case 2:
      G__letdouble(result7, 100, (double) ((Pythia8::ParticleDataEntry*) G__getstructoffset())->resWidth((int) G__int(libp->para[0]), (double) G__double(libp->para[1])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_681_0_74(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 3:
      G__letdouble(result7, 100, (double) ((Pythia8::ParticleDataEntry*) G__getstructoffset())->resWidthOpen((int) G__int(libp->para[0]), (double) G__double(libp->para[1])
, (int) G__int(libp->para[2])));
      break;
   case 2:
      G__letdouble(result7, 100, (double) ((Pythia8::ParticleDataEntry*) G__getstructoffset())->resWidthOpen((int) G__int(libp->para[0]), (double) G__double(libp->para[1])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_681_0_75(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 3:
      G__letdouble(result7, 100, (double) ((Pythia8::ParticleDataEntry*) G__getstructoffset())->resWidthStore((int) G__int(libp->para[0]), (double) G__double(libp->para[1])
, (int) G__int(libp->para[2])));
      break;
   case 2:
      G__letdouble(result7, 100, (double) ((Pythia8::ParticleDataEntry*) G__getstructoffset())->resWidthStore((int) G__int(libp->para[0]), (double) G__double(libp->para[1])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_681_0_76(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((Pythia8::ParticleDataEntry*) G__getstructoffset())->resOpenFrac((int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_681_0_77(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((Pythia8::ParticleDataEntry*) G__getstructoffset())->resWidthRescaleFactor());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_681_0_78(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 3:
      G__letdouble(result7, 100, (double) ((Pythia8::ParticleDataEntry*) G__getstructoffset())->resWidthChan((double) G__double(libp->para[0]), (int) G__int(libp->para[1])
, (int) G__int(libp->para[2])));
      break;
   case 2:
      G__letdouble(result7, 100, (double) ((Pythia8::ParticleDataEntry*) G__getstructoffset())->resWidthChan((double) G__double(libp->para[0]), (int) G__int(libp->para[1])));
      break;
   case 1:
      G__letdouble(result7, 100, (double) ((Pythia8::ParticleDataEntry*) G__getstructoffset())->resWidthChan((double) G__double(libp->para[0])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__main92Dct_681_0_81(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   Pythia8::ParticleDataEntry* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new Pythia8::ParticleDataEntry(*(Pythia8::ParticleDataEntry*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__main92DctLN_Pythia8cLcLParticleDataEntry));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef Pythia8::ParticleDataEntry G__TPythia8cLcLParticleDataEntry;
static int G__main92Dct_681_0_82(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (Pythia8::ParticleDataEntry*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((Pythia8::ParticleDataEntry*) (soff+(sizeof(Pythia8::ParticleDataEntry)*i)))->~G__TPythia8cLcLParticleDataEntry();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (Pythia8::ParticleDataEntry*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((Pythia8::ParticleDataEntry*) (soff))->~G__TPythia8cLcLParticleDataEntry();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__main92Dct_681_0_83(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   Pythia8::ParticleDataEntry* dest = (Pythia8::ParticleDataEntry*) G__getstructoffset();
   *dest = *(Pythia8::ParticleDataEntry*) libp->para[0].ref;
   const Pythia8::ParticleDataEntry& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* pair<int,Pythia8::ParticleDataEntry> */
static int G__main92Dct_693_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   pair<int,Pythia8::ParticleDataEntry>* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new pair<int,Pythia8::ParticleDataEntry>[n];
     } else {
       p = new((void*) gvp) pair<int,Pythia8::ParticleDataEntry>[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new pair<int,Pythia8::ParticleDataEntry>;
     } else {
       p = new((void*) gvp) pair<int,Pythia8::ParticleDataEntry>;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__main92DctLN_pairlEintcOPythia8cLcLParticleDataEntrygR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_693_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   pair<int,Pythia8::ParticleDataEntry>* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 2
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new pair<int,Pythia8::ParticleDataEntry>(*(int*) G__Intref(&libp->para[0]), *(Pythia8::ParticleDataEntry*) libp->para[1].ref);
   } else {
     p = new((void*) gvp) pair<int,Pythia8::ParticleDataEntry>(*(int*) G__Intref(&libp->para[0]), *(Pythia8::ParticleDataEntry*) libp->para[1].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__main92DctLN_pairlEintcOPythia8cLcLParticleDataEntrygR));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__main92Dct_693_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   pair<int,Pythia8::ParticleDataEntry>* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new pair<int,Pythia8::ParticleDataEntry>(*(pair<int,Pythia8::ParticleDataEntry>*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__main92DctLN_pairlEintcOPythia8cLcLParticleDataEntrygR));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef pair<int,Pythia8::ParticleDataEntry> G__TpairlEintcOPythia8cLcLParticleDataEntrygR;
static int G__main92Dct_693_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (pair<int,Pythia8::ParticleDataEntry>*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((pair<int,Pythia8::ParticleDataEntry>*) (soff+(sizeof(pair<int,Pythia8::ParticleDataEntry>)*i)))->~G__TpairlEintcOPythia8cLcLParticleDataEntrygR();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (pair<int,Pythia8::ParticleDataEntry>*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((pair<int,Pythia8::ParticleDataEntry>*) (soff))->~G__TpairlEintcOPythia8cLcLParticleDataEntrygR();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* Pythia8::Event */
static int G__main92Dct_697_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   Pythia8::Event* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new Pythia8::Event((int) G__int(libp->para[0]));
     } else {
       p = new((void*) gvp) Pythia8::Event((int) G__int(libp->para[0]));
     }
     break;
   case 0:
     int n = G__getaryconstruct();
     if (n) {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new Pythia8::Event[n];
       } else {
         p = new((void*) gvp) Pythia8::Event[n];
       }
     } else {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new Pythia8::Event;
       } else {
         p = new((void*) gvp) Pythia8::Event;
       }
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__main92DctLN_Pythia8cLcLEvent));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_697_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const Pythia8::Event& obj = ((Pythia8::Event*) G__getstructoffset())->operator=(*(Pythia8::Event*) libp->para[0].ref);
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_697_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   Pythia8::Event* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new Pythia8::Event(*(Pythia8::Event*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) Pythia8::Event(*(Pythia8::Event*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__main92DctLN_Pythia8cLcLEvent));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_697_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 3:
      ((Pythia8::Event*) G__getstructoffset())->init(*((string*) G__int(libp->para[0])), (Pythia8::ParticleData*) G__int(libp->para[1])
, (int) G__int(libp->para[2]));
      G__setnull(result7);
      break;
   case 2:
      ((Pythia8::Event*) G__getstructoffset())->init(*((string*) G__int(libp->para[0])), (Pythia8::ParticleData*) G__int(libp->para[1]));
      G__setnull(result7);
      break;
   case 1:
      ((Pythia8::Event*) G__getstructoffset())->init(*((string*) G__int(libp->para[0])));
      G__setnull(result7);
      break;
   case 0:
      ((Pythia8::Event*) G__getstructoffset())->init();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_697_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Pythia8::Event*) G__getstructoffset())->clear();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_697_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Pythia8::Event*) G__getstructoffset())->reset();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_697_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const Pythia8::Particle& obj = ((Pythia8::Event*) G__getstructoffset())->operator[]((int) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_697_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const Pythia8::Particle& obj = ((const Pythia8::Event*) G__getstructoffset())->operator[]((int) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_697_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const Pythia8::Particle& obj = ((Pythia8::Event*) G__getstructoffset())->front();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_697_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const Pythia8::Particle& obj = ((Pythia8::Event*) G__getstructoffset())->at((int) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_697_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const Pythia8::Particle& obj = ((Pythia8::Event*) G__getstructoffset())->back();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_697_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const Pythia8::Event*) G__getstructoffset())->size());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_697_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((Pythia8::Event*) G__getstructoffset())->append(*((Pythia8::Particle*) G__int(libp->para[0]))));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_697_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 15:
      G__letint(result7, 105, (long) ((Pythia8::Event*) G__getstructoffset())->append(
(int) G__int(libp->para[0]), (int) G__int(libp->para[1])
, (int) G__int(libp->para[2]), (int) G__int(libp->para[3])
, (int) G__int(libp->para[4]), (int) G__int(libp->para[5])
, (int) G__int(libp->para[6]), (int) G__int(libp->para[7])
, (double) G__double(libp->para[8]), (double) G__double(libp->para[9])
, (double) G__double(libp->para[10]), (double) G__double(libp->para[11])
, (double) G__double(libp->para[12]), (double) G__double(libp->para[13])
, (double) G__double(libp->para[14])));
      break;
   case 14:
      G__letint(result7, 105, (long) ((Pythia8::Event*) G__getstructoffset())->append(
(int) G__int(libp->para[0]), (int) G__int(libp->para[1])
, (int) G__int(libp->para[2]), (int) G__int(libp->para[3])
, (int) G__int(libp->para[4]), (int) G__int(libp->para[5])
, (int) G__int(libp->para[6]), (int) G__int(libp->para[7])
, (double) G__double(libp->para[8]), (double) G__double(libp->para[9])
, (double) G__double(libp->para[10]), (double) G__double(libp->para[11])
, (double) G__double(libp->para[12]), (double) G__double(libp->para[13])));
      break;
   case 13:
      G__letint(result7, 105, (long) ((Pythia8::Event*) G__getstructoffset())->append(
(int) G__int(libp->para[0]), (int) G__int(libp->para[1])
, (int) G__int(libp->para[2]), (int) G__int(libp->para[3])
, (int) G__int(libp->para[4]), (int) G__int(libp->para[5])
, (int) G__int(libp->para[6]), (int) G__int(libp->para[7])
, (double) G__double(libp->para[8]), (double) G__double(libp->para[9])
, (double) G__double(libp->para[10]), (double) G__double(libp->para[11])
, (double) G__double(libp->para[12])));
      break;
   case 12:
      G__letint(result7, 105, (long) ((Pythia8::Event*) G__getstructoffset())->append(
(int) G__int(libp->para[0]), (int) G__int(libp->para[1])
, (int) G__int(libp->para[2]), (int) G__int(libp->para[3])
, (int) G__int(libp->para[4]), (int) G__int(libp->para[5])
, (int) G__int(libp->para[6]), (int) G__int(libp->para[7])
, (double) G__double(libp->para[8]), (double) G__double(libp->para[9])
, (double) G__double(libp->para[10]), (double) G__double(libp->para[11])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_697_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 12:
      G__letint(result7, 105, (long) ((Pythia8::Event*) G__getstructoffset())->append(
(int) G__int(libp->para[0]), (int) G__int(libp->para[1])
, (int) G__int(libp->para[2]), (int) G__int(libp->para[3])
, (int) G__int(libp->para[4]), (int) G__int(libp->para[5])
, (int) G__int(libp->para[6]), (int) G__int(libp->para[7])
, *((Pythia8::Vec4*) G__int(libp->para[8])), (double) G__double(libp->para[9])
, (double) G__double(libp->para[10]), (double) G__double(libp->para[11])));
      break;
   case 11:
      G__letint(result7, 105, (long) ((Pythia8::Event*) G__getstructoffset())->append(
(int) G__int(libp->para[0]), (int) G__int(libp->para[1])
, (int) G__int(libp->para[2]), (int) G__int(libp->para[3])
, (int) G__int(libp->para[4]), (int) G__int(libp->para[5])
, (int) G__int(libp->para[6]), (int) G__int(libp->para[7])
, *((Pythia8::Vec4*) G__int(libp->para[8])), (double) G__double(libp->para[9])
, (double) G__double(libp->para[10])));
      break;
   case 10:
      G__letint(result7, 105, (long) ((Pythia8::Event*) G__getstructoffset())->append(
(int) G__int(libp->para[0]), (int) G__int(libp->para[1])
, (int) G__int(libp->para[2]), (int) G__int(libp->para[3])
, (int) G__int(libp->para[4]), (int) G__int(libp->para[5])
, (int) G__int(libp->para[6]), (int) G__int(libp->para[7])
, *((Pythia8::Vec4*) G__int(libp->para[8])), (double) G__double(libp->para[9])));
      break;
   case 9:
      G__letint(result7, 105, (long) ((Pythia8::Event*) G__getstructoffset())->append(
(int) G__int(libp->para[0]), (int) G__int(libp->para[1])
, (int) G__int(libp->para[2]), (int) G__int(libp->para[3])
, (int) G__int(libp->para[4]), (int) G__int(libp->para[5])
, (int) G__int(libp->para[6]), (int) G__int(libp->para[7])
, *((Pythia8::Vec4*) G__int(libp->para[8]))));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_697_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 11:
      G__letint(result7, 105, (long) ((Pythia8::Event*) G__getstructoffset())->append(
(int) G__int(libp->para[0]), (int) G__int(libp->para[1])
, (int) G__int(libp->para[2]), (int) G__int(libp->para[3])
, (double) G__double(libp->para[4]), (double) G__double(libp->para[5])
, (double) G__double(libp->para[6]), (double) G__double(libp->para[7])
, (double) G__double(libp->para[8]), (double) G__double(libp->para[9])
, (double) G__double(libp->para[10])));
      break;
   case 10:
      G__letint(result7, 105, (long) ((Pythia8::Event*) G__getstructoffset())->append(
(int) G__int(libp->para[0]), (int) G__int(libp->para[1])
, (int) G__int(libp->para[2]), (int) G__int(libp->para[3])
, (double) G__double(libp->para[4]), (double) G__double(libp->para[5])
, (double) G__double(libp->para[6]), (double) G__double(libp->para[7])
, (double) G__double(libp->para[8]), (double) G__double(libp->para[9])));
      break;
   case 9:
      G__letint(result7, 105, (long) ((Pythia8::Event*) G__getstructoffset())->append(
(int) G__int(libp->para[0]), (int) G__int(libp->para[1])
, (int) G__int(libp->para[2]), (int) G__int(libp->para[3])
, (double) G__double(libp->para[4]), (double) G__double(libp->para[5])
, (double) G__double(libp->para[6]), (double) G__double(libp->para[7])
, (double) G__double(libp->para[8])));
      break;
   case 8:
      G__letint(result7, 105, (long) ((Pythia8::Event*) G__getstructoffset())->append(
(int) G__int(libp->para[0]), (int) G__int(libp->para[1])
, (int) G__int(libp->para[2]), (int) G__int(libp->para[3])
, (double) G__double(libp->para[4]), (double) G__double(libp->para[5])
, (double) G__double(libp->para[6]), (double) G__double(libp->para[7])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_697_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 8:
      G__letint(result7, 105, (long) ((Pythia8::Event*) G__getstructoffset())->append(
(int) G__int(libp->para[0]), (int) G__int(libp->para[1])
, (int) G__int(libp->para[2]), (int) G__int(libp->para[3])
, *((Pythia8::Vec4*) G__int(libp->para[4])), (double) G__double(libp->para[5])
, (double) G__double(libp->para[6]), (double) G__double(libp->para[7])));
      break;
   case 7:
      G__letint(result7, 105, (long) ((Pythia8::Event*) G__getstructoffset())->append(
(int) G__int(libp->para[0]), (int) G__int(libp->para[1])
, (int) G__int(libp->para[2]), (int) G__int(libp->para[3])
, *((Pythia8::Vec4*) G__int(libp->para[4])), (double) G__double(libp->para[5])
, (double) G__double(libp->para[6])));
      break;
   case 6:
      G__letint(result7, 105, (long) ((Pythia8::Event*) G__getstructoffset())->append((int) G__int(libp->para[0]), (int) G__int(libp->para[1])
, (int) G__int(libp->para[2]), (int) G__int(libp->para[3])
, *((Pythia8::Vec4*) G__int(libp->para[4])), (double) G__double(libp->para[5])));
      break;
   case 5:
      G__letint(result7, 105, (long) ((Pythia8::Event*) G__getstructoffset())->append((int) G__int(libp->para[0]), (int) G__int(libp->para[1])
, (int) G__int(libp->para[2]), (int) G__int(libp->para[3])
, *((Pythia8::Vec4*) G__int(libp->para[4]))));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_697_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      ((Pythia8::Event*) G__getstructoffset())->setEvtPtr((int) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((Pythia8::Event*) G__getstructoffset())->setEvtPtr();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_697_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      G__letint(result7, 105, (long) ((Pythia8::Event*) G__getstructoffset())->copy((int) G__int(libp->para[0]), (int) G__int(libp->para[1])));
      break;
   case 1:
      G__letint(result7, 105, (long) ((Pythia8::Event*) G__getstructoffset())->copy((int) G__int(libp->para[0])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_697_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((const Pythia8::Event*) G__getstructoffset())->list();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_697_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((const Pythia8::Event*) G__getstructoffset())->list(*(ostream*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_697_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      ((const Pythia8::Event*) G__getstructoffset())->list((bool) G__int(libp->para[0]), (bool) G__int(libp->para[1]));
      G__setnull(result7);
      break;
   case 1:
      ((const Pythia8::Event*) G__getstructoffset())->list((bool) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_697_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((const Pythia8::Event*) G__getstructoffset())->list((bool) G__int(libp->para[0]), (bool) G__int(libp->para[1])
, *(ostream*) libp->para[2].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_697_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      ((Pythia8::Event*) G__getstructoffset())->popBack((int) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((Pythia8::Event*) G__getstructoffset())->popBack();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_697_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Pythia8::Event*) G__getstructoffset())->remove((int) G__int(libp->para[0]), (int) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_697_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Pythia8::Event*) G__getstructoffset())->restorePtrs();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_697_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Pythia8::Event*) G__getstructoffset())->saveSize();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_697_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Pythia8::Event*) G__getstructoffset())->restoreSize();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_697_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((Pythia8::Event*) G__getstructoffset())->savedSizeValue());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_697_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      ((Pythia8::Event*) G__getstructoffset())->initColTag((int) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((Pythia8::Event*) G__getstructoffset())->initColTag();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_697_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const Pythia8::Event*) G__getstructoffset())->lastColTag());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_697_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((Pythia8::Event*) G__getstructoffset())->nextColTag());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_697_0_33(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Pythia8::Event*) G__getstructoffset())->scale((double) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_697_0_34(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const Pythia8::Event*) G__getstructoffset())->scale());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_697_0_35(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Pythia8::Event*) G__getstructoffset())->scaleSecond((double) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_697_0_36(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const Pythia8::Event*) G__getstructoffset())->scaleSecond());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_697_0_37(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<int>* pobj;
         const vector<int> xobj = ((const Pythia8::Event*) G__getstructoffset())->daughterList((int) G__int(libp->para[0]));
         pobj = new vector<int>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_697_0_38(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Pythia8::Event*) G__getstructoffset())->rot((double) G__double(libp->para[0]), (double) G__double(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_697_0_39(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Pythia8::Event*) G__getstructoffset())->bst((double) G__double(libp->para[0]), (double) G__double(libp->para[1])
, (double) G__double(libp->para[2]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_697_0_40(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Pythia8::Event*) G__getstructoffset())->bst((double) G__double(libp->para[0]), (double) G__double(libp->para[1])
, (double) G__double(libp->para[2]), (double) G__double(libp->para[3]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_697_0_41(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Pythia8::Event*) G__getstructoffset())->bst(*(Pythia8::Vec4*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_697_0_42(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Pythia8::Event*) G__getstructoffset())->rotbst(*(Pythia8::RotBstMatrix*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_697_0_43(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Pythia8::Event*) G__getstructoffset())->clearJunctions();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_697_0_44(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((Pythia8::Event*) G__getstructoffset())->appendJunction((int) G__int(libp->para[0]), (int) G__int(libp->para[1])
, (int) G__int(libp->para[2]), (int) G__int(libp->para[3])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_697_0_45(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((Pythia8::Event*) G__getstructoffset())->appendJunction(*((Pythia8::Junction*) G__int(libp->para[0]))));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_697_0_46(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const Pythia8::Event*) G__getstructoffset())->sizeJunction());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_697_0_47(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const Pythia8::Event*) G__getstructoffset())->remainsJunction((int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_697_0_48(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Pythia8::Event*) G__getstructoffset())->remainsJunction((int) G__int(libp->para[0]), (bool) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_697_0_49(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const Pythia8::Event*) G__getstructoffset())->kindJunction((int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_697_0_50(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const Pythia8::Event*) G__getstructoffset())->colJunction((int) G__int(libp->para[0]), (int) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_697_0_51(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Pythia8::Event*) G__getstructoffset())->colJunction((int) G__int(libp->para[0]), (int) G__int(libp->para[1])
, (int) G__int(libp->para[2]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_697_0_52(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const Pythia8::Event*) G__getstructoffset())->endColJunction((int) G__int(libp->para[0]), (int) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_697_0_53(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Pythia8::Event*) G__getstructoffset())->endColJunction((int) G__int(libp->para[0]), (int) G__int(libp->para[1])
, (int) G__int(libp->para[2]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_697_0_54(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const Pythia8::Event*) G__getstructoffset())->statusJunction((int) G__int(libp->para[0]), (int) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_697_0_55(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Pythia8::Event*) G__getstructoffset())->statusJunction((int) G__int(libp->para[0]), (int) G__int(libp->para[1])
, (int) G__int(libp->para[2]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_697_0_56(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const Pythia8::Junction& obj = ((Pythia8::Event*) G__getstructoffset())->getJunction((int) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_697_0_57(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const Pythia8::Junction& obj = ((const Pythia8::Event*) G__getstructoffset())->getJunction((int) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_697_0_58(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Pythia8::Event*) G__getstructoffset())->eraseJunction((int) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_697_0_59(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Pythia8::Event*) G__getstructoffset())->saveJunctionSize();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_697_0_60(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Pythia8::Event*) G__getstructoffset())->restoreJunctionSize();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_697_0_61(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      ((const Pythia8::Event*) G__getstructoffset())->listJunctions(*(ostream*) libp->para[0].ref);
      G__setnull(result7);
      break;
   case 0:
      ((const Pythia8::Event*) G__getstructoffset())->listJunctions();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_697_0_62(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const Pythia8::Event& obj = ((Pythia8::Event*) G__getstructoffset())->operator+=(*(Pythia8::Event*) libp->para[0].ref);
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef Pythia8::Event G__TPythia8cLcLEvent;
static int G__main92Dct_697_0_63(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (Pythia8::Event*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((Pythia8::Event*) (soff+(sizeof(Pythia8::Event)*i)))->~G__TPythia8cLcLEvent();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (Pythia8::Event*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((Pythia8::Event*) (soff))->~G__TPythia8cLcLEvent();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* Pythia8::Particle */
static int G__main92Dct_698_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   Pythia8::Particle* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new Pythia8::Particle[n];
     } else {
       p = new((void*) gvp) Pythia8::Particle[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new Pythia8::Particle;
     } else {
       p = new((void*) gvp) Pythia8::Particle;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__main92DctLN_Pythia8cLcLParticle));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_698_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   Pythia8::Particle* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 15:
     //m: 15
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new Pythia8::Particle(
(int) G__int(libp->para[0]), (int) G__int(libp->para[1])
, (int) G__int(libp->para[2]), (int) G__int(libp->para[3])
, (int) G__int(libp->para[4]), (int) G__int(libp->para[5])
, (int) G__int(libp->para[6]), (int) G__int(libp->para[7])
, (double) G__double(libp->para[8]), (double) G__double(libp->para[9])
, (double) G__double(libp->para[10]), (double) G__double(libp->para[11])
, (double) G__double(libp->para[12]), (double) G__double(libp->para[13])
, (double) G__double(libp->para[14]));
     } else {
       p = new((void*) gvp) Pythia8::Particle(
(int) G__int(libp->para[0]), (int) G__int(libp->para[1])
, (int) G__int(libp->para[2]), (int) G__int(libp->para[3])
, (int) G__int(libp->para[4]), (int) G__int(libp->para[5])
, (int) G__int(libp->para[6]), (int) G__int(libp->para[7])
, (double) G__double(libp->para[8]), (double) G__double(libp->para[9])
, (double) G__double(libp->para[10]), (double) G__double(libp->para[11])
, (double) G__double(libp->para[12]), (double) G__double(libp->para[13])
, (double) G__double(libp->para[14]));
     }
     break;
   case 14:
     //m: 14
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new Pythia8::Particle(
(int) G__int(libp->para[0]), (int) G__int(libp->para[1])
, (int) G__int(libp->para[2]), (int) G__int(libp->para[3])
, (int) G__int(libp->para[4]), (int) G__int(libp->para[5])
, (int) G__int(libp->para[6]), (int) G__int(libp->para[7])
, (double) G__double(libp->para[8]), (double) G__double(libp->para[9])
, (double) G__double(libp->para[10]), (double) G__double(libp->para[11])
, (double) G__double(libp->para[12]), (double) G__double(libp->para[13]));
     } else {
       p = new((void*) gvp) Pythia8::Particle(
(int) G__int(libp->para[0]), (int) G__int(libp->para[1])
, (int) G__int(libp->para[2]), (int) G__int(libp->para[3])
, (int) G__int(libp->para[4]), (int) G__int(libp->para[5])
, (int) G__int(libp->para[6]), (int) G__int(libp->para[7])
, (double) G__double(libp->para[8]), (double) G__double(libp->para[9])
, (double) G__double(libp->para[10]), (double) G__double(libp->para[11])
, (double) G__double(libp->para[12]), (double) G__double(libp->para[13]));
     }
     break;
   case 13:
     //m: 13
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new Pythia8::Particle(
(int) G__int(libp->para[0]), (int) G__int(libp->para[1])
, (int) G__int(libp->para[2]), (int) G__int(libp->para[3])
, (int) G__int(libp->para[4]), (int) G__int(libp->para[5])
, (int) G__int(libp->para[6]), (int) G__int(libp->para[7])
, (double) G__double(libp->para[8]), (double) G__double(libp->para[9])
, (double) G__double(libp->para[10]), (double) G__double(libp->para[11])
, (double) G__double(libp->para[12]));
     } else {
       p = new((void*) gvp) Pythia8::Particle(
(int) G__int(libp->para[0]), (int) G__int(libp->para[1])
, (int) G__int(libp->para[2]), (int) G__int(libp->para[3])
, (int) G__int(libp->para[4]), (int) G__int(libp->para[5])
, (int) G__int(libp->para[6]), (int) G__int(libp->para[7])
, (double) G__double(libp->para[8]), (double) G__double(libp->para[9])
, (double) G__double(libp->para[10]), (double) G__double(libp->para[11])
, (double) G__double(libp->para[12]));
     }
     break;
   case 12:
     //m: 12
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new Pythia8::Particle(
(int) G__int(libp->para[0]), (int) G__int(libp->para[1])
, (int) G__int(libp->para[2]), (int) G__int(libp->para[3])
, (int) G__int(libp->para[4]), (int) G__int(libp->para[5])
, (int) G__int(libp->para[6]), (int) G__int(libp->para[7])
, (double) G__double(libp->para[8]), (double) G__double(libp->para[9])
, (double) G__double(libp->para[10]), (double) G__double(libp->para[11]));
     } else {
       p = new((void*) gvp) Pythia8::Particle(
(int) G__int(libp->para[0]), (int) G__int(libp->para[1])
, (int) G__int(libp->para[2]), (int) G__int(libp->para[3])
, (int) G__int(libp->para[4]), (int) G__int(libp->para[5])
, (int) G__int(libp->para[6]), (int) G__int(libp->para[7])
, (double) G__double(libp->para[8]), (double) G__double(libp->para[9])
, (double) G__double(libp->para[10]), (double) G__double(libp->para[11]));
     }
     break;
   case 11:
     //m: 11
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new Pythia8::Particle(
(int) G__int(libp->para[0]), (int) G__int(libp->para[1])
, (int) G__int(libp->para[2]), (int) G__int(libp->para[3])
, (int) G__int(libp->para[4]), (int) G__int(libp->para[5])
, (int) G__int(libp->para[6]), (int) G__int(libp->para[7])
, (double) G__double(libp->para[8]), (double) G__double(libp->para[9])
, (double) G__double(libp->para[10]));
     } else {
       p = new((void*) gvp) Pythia8::Particle(
(int) G__int(libp->para[0]), (int) G__int(libp->para[1])
, (int) G__int(libp->para[2]), (int) G__int(libp->para[3])
, (int) G__int(libp->para[4]), (int) G__int(libp->para[5])
, (int) G__int(libp->para[6]), (int) G__int(libp->para[7])
, (double) G__double(libp->para[8]), (double) G__double(libp->para[9])
, (double) G__double(libp->para[10]));
     }
     break;
   case 10:
     //m: 10
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new Pythia8::Particle(
(int) G__int(libp->para[0]), (int) G__int(libp->para[1])
, (int) G__int(libp->para[2]), (int) G__int(libp->para[3])
, (int) G__int(libp->para[4]), (int) G__int(libp->para[5])
, (int) G__int(libp->para[6]), (int) G__int(libp->para[7])
, (double) G__double(libp->para[8]), (double) G__double(libp->para[9]));
     } else {
       p = new((void*) gvp) Pythia8::Particle(
(int) G__int(libp->para[0]), (int) G__int(libp->para[1])
, (int) G__int(libp->para[2]), (int) G__int(libp->para[3])
, (int) G__int(libp->para[4]), (int) G__int(libp->para[5])
, (int) G__int(libp->para[6]), (int) G__int(libp->para[7])
, (double) G__double(libp->para[8]), (double) G__double(libp->para[9]));
     }
     break;
   case 9:
     //m: 9
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new Pythia8::Particle(
(int) G__int(libp->para[0]), (int) G__int(libp->para[1])
, (int) G__int(libp->para[2]), (int) G__int(libp->para[3])
, (int) G__int(libp->para[4]), (int) G__int(libp->para[5])
, (int) G__int(libp->para[6]), (int) G__int(libp->para[7])
, (double) G__double(libp->para[8]));
     } else {
       p = new((void*) gvp) Pythia8::Particle(
(int) G__int(libp->para[0]), (int) G__int(libp->para[1])
, (int) G__int(libp->para[2]), (int) G__int(libp->para[3])
, (int) G__int(libp->para[4]), (int) G__int(libp->para[5])
, (int) G__int(libp->para[6]), (int) G__int(libp->para[7])
, (double) G__double(libp->para[8]));
     }
     break;
   case 8:
     //m: 8
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new Pythia8::Particle(
(int) G__int(libp->para[0]), (int) G__int(libp->para[1])
, (int) G__int(libp->para[2]), (int) G__int(libp->para[3])
, (int) G__int(libp->para[4]), (int) G__int(libp->para[5])
, (int) G__int(libp->para[6]), (int) G__int(libp->para[7]));
     } else {
       p = new((void*) gvp) Pythia8::Particle(
(int) G__int(libp->para[0]), (int) G__int(libp->para[1])
, (int) G__int(libp->para[2]), (int) G__int(libp->para[3])
, (int) G__int(libp->para[4]), (int) G__int(libp->para[5])
, (int) G__int(libp->para[6]), (int) G__int(libp->para[7]));
     }
     break;
   case 7:
     //m: 7
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new Pythia8::Particle(
(int) G__int(libp->para[0]), (int) G__int(libp->para[1])
, (int) G__int(libp->para[2]), (int) G__int(libp->para[3])
, (int) G__int(libp->para[4]), (int) G__int(libp->para[5])
, (int) G__int(libp->para[6]));
     } else {
       p = new((void*) gvp) Pythia8::Particle(
(int) G__int(libp->para[0]), (int) G__int(libp->para[1])
, (int) G__int(libp->para[2]), (int) G__int(libp->para[3])
, (int) G__int(libp->para[4]), (int) G__int(libp->para[5])
, (int) G__int(libp->para[6]));
     }
     break;
   case 6:
     //m: 6
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new Pythia8::Particle(
(int) G__int(libp->para[0]), (int) G__int(libp->para[1])
, (int) G__int(libp->para[2]), (int) G__int(libp->para[3])
, (int) G__int(libp->para[4]), (int) G__int(libp->para[5]));
     } else {
       p = new((void*) gvp) Pythia8::Particle(
(int) G__int(libp->para[0]), (int) G__int(libp->para[1])
, (int) G__int(libp->para[2]), (int) G__int(libp->para[3])
, (int) G__int(libp->para[4]), (int) G__int(libp->para[5]));
     }
     break;
   case 5:
     //m: 5
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new Pythia8::Particle(
(int) G__int(libp->para[0]), (int) G__int(libp->para[1])
, (int) G__int(libp->para[2]), (int) G__int(libp->para[3])
, (int) G__int(libp->para[4]));
     } else {
       p = new((void*) gvp) Pythia8::Particle(
(int) G__int(libp->para[0]), (int) G__int(libp->para[1])
, (int) G__int(libp->para[2]), (int) G__int(libp->para[3])
, (int) G__int(libp->para[4]));
     }
     break;
   case 4:
     //m: 4
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new Pythia8::Particle(
(int) G__int(libp->para[0]), (int) G__int(libp->para[1])
, (int) G__int(libp->para[2]), (int) G__int(libp->para[3]));
     } else {
       p = new((void*) gvp) Pythia8::Particle(
(int) G__int(libp->para[0]), (int) G__int(libp->para[1])
, (int) G__int(libp->para[2]), (int) G__int(libp->para[3]));
     }
     break;
   case 3:
     //m: 3
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new Pythia8::Particle(
(int) G__int(libp->para[0]), (int) G__int(libp->para[1])
, (int) G__int(libp->para[2]));
     } else {
       p = new((void*) gvp) Pythia8::Particle(
(int) G__int(libp->para[0]), (int) G__int(libp->para[1])
, (int) G__int(libp->para[2]));
     }
     break;
   case 2:
     //m: 2
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new Pythia8::Particle((int) G__int(libp->para[0]), (int) G__int(libp->para[1]));
     } else {
       p = new((void*) gvp) Pythia8::Particle((int) G__int(libp->para[0]), (int) G__int(libp->para[1]));
     }
     break;
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new Pythia8::Particle((int) G__int(libp->para[0]));
     } else {
       p = new((void*) gvp) Pythia8::Particle((int) G__int(libp->para[0]));
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__main92DctLN_Pythia8cLcLParticle));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_698_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   Pythia8::Particle* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 12:
     //m: 12
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new Pythia8::Particle(
(int) G__int(libp->para[0]), (int) G__int(libp->para[1])
, (int) G__int(libp->para[2]), (int) G__int(libp->para[3])
, (int) G__int(libp->para[4]), (int) G__int(libp->para[5])
, (int) G__int(libp->para[6]), (int) G__int(libp->para[7])
, *((Pythia8::Vec4*) G__int(libp->para[8])), (double) G__double(libp->para[9])
, (double) G__double(libp->para[10]), (double) G__double(libp->para[11]));
     } else {
       p = new((void*) gvp) Pythia8::Particle(
(int) G__int(libp->para[0]), (int) G__int(libp->para[1])
, (int) G__int(libp->para[2]), (int) G__int(libp->para[3])
, (int) G__int(libp->para[4]), (int) G__int(libp->para[5])
, (int) G__int(libp->para[6]), (int) G__int(libp->para[7])
, *((Pythia8::Vec4*) G__int(libp->para[8])), (double) G__double(libp->para[9])
, (double) G__double(libp->para[10]), (double) G__double(libp->para[11]));
     }
     break;
   case 11:
     //m: 11
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new Pythia8::Particle(
(int) G__int(libp->para[0]), (int) G__int(libp->para[1])
, (int) G__int(libp->para[2]), (int) G__int(libp->para[3])
, (int) G__int(libp->para[4]), (int) G__int(libp->para[5])
, (int) G__int(libp->para[6]), (int) G__int(libp->para[7])
, *((Pythia8::Vec4*) G__int(libp->para[8])), (double) G__double(libp->para[9])
, (double) G__double(libp->para[10]));
     } else {
       p = new((void*) gvp) Pythia8::Particle(
(int) G__int(libp->para[0]), (int) G__int(libp->para[1])
, (int) G__int(libp->para[2]), (int) G__int(libp->para[3])
, (int) G__int(libp->para[4]), (int) G__int(libp->para[5])
, (int) G__int(libp->para[6]), (int) G__int(libp->para[7])
, *((Pythia8::Vec4*) G__int(libp->para[8])), (double) G__double(libp->para[9])
, (double) G__double(libp->para[10]));
     }
     break;
   case 10:
     //m: 10
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new Pythia8::Particle(
(int) G__int(libp->para[0]), (int) G__int(libp->para[1])
, (int) G__int(libp->para[2]), (int) G__int(libp->para[3])
, (int) G__int(libp->para[4]), (int) G__int(libp->para[5])
, (int) G__int(libp->para[6]), (int) G__int(libp->para[7])
, *((Pythia8::Vec4*) G__int(libp->para[8])), (double) G__double(libp->para[9]));
     } else {
       p = new((void*) gvp) Pythia8::Particle(
(int) G__int(libp->para[0]), (int) G__int(libp->para[1])
, (int) G__int(libp->para[2]), (int) G__int(libp->para[3])
, (int) G__int(libp->para[4]), (int) G__int(libp->para[5])
, (int) G__int(libp->para[6]), (int) G__int(libp->para[7])
, *((Pythia8::Vec4*) G__int(libp->para[8])), (double) G__double(libp->para[9]));
     }
     break;
   case 9:
     //m: 9
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new Pythia8::Particle(
(int) G__int(libp->para[0]), (int) G__int(libp->para[1])
, (int) G__int(libp->para[2]), (int) G__int(libp->para[3])
, (int) G__int(libp->para[4]), (int) G__int(libp->para[5])
, (int) G__int(libp->para[6]), (int) G__int(libp->para[7])
, *((Pythia8::Vec4*) G__int(libp->para[8])));
     } else {
       p = new((void*) gvp) Pythia8::Particle(
(int) G__int(libp->para[0]), (int) G__int(libp->para[1])
, (int) G__int(libp->para[2]), (int) G__int(libp->para[3])
, (int) G__int(libp->para[4]), (int) G__int(libp->para[5])
, (int) G__int(libp->para[6]), (int) G__int(libp->para[7])
, *((Pythia8::Vec4*) G__int(libp->para[8])));
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__main92DctLN_Pythia8cLcLParticle));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_698_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   Pythia8::Particle* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new Pythia8::Particle(*(Pythia8::Particle*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) Pythia8::Particle(*(Pythia8::Particle*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__main92DctLN_Pythia8cLcLParticle));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_698_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const Pythia8::Particle& obj = ((Pythia8::Particle*) G__getstructoffset())->operator=(*(Pythia8::Particle*) libp->para[0].ref);
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_698_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Pythia8::Particle*) G__getstructoffset())->setEvtPtr((Pythia8::Event*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_698_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      ((Pythia8::Particle*) G__getstructoffset())->setPDEPtr((Pythia8::ParticleDataEntry*) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((Pythia8::Particle*) G__getstructoffset())->setPDEPtr();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_698_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Pythia8::Particle*) G__getstructoffset())->id((int) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_698_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Pythia8::Particle*) G__getstructoffset())->status((int) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_698_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Pythia8::Particle*) G__getstructoffset())->statusPos();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_698_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Pythia8::Particle*) G__getstructoffset())->statusNeg();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_698_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Pythia8::Particle*) G__getstructoffset())->statusCode((int) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_698_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Pythia8::Particle*) G__getstructoffset())->mother1((int) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_698_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Pythia8::Particle*) G__getstructoffset())->mother2((int) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_698_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      ((Pythia8::Particle*) G__getstructoffset())->mothers((int) G__int(libp->para[0]), (int) G__int(libp->para[1]));
      G__setnull(result7);
      break;
   case 1:
      ((Pythia8::Particle*) G__getstructoffset())->mothers((int) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((Pythia8::Particle*) G__getstructoffset())->mothers();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_698_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Pythia8::Particle*) G__getstructoffset())->daughter1((int) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_698_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Pythia8::Particle*) G__getstructoffset())->daughter2((int) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_698_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      ((Pythia8::Particle*) G__getstructoffset())->daughters((int) G__int(libp->para[0]), (int) G__int(libp->para[1]));
      G__setnull(result7);
      break;
   case 1:
      ((Pythia8::Particle*) G__getstructoffset())->daughters((int) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((Pythia8::Particle*) G__getstructoffset())->daughters();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_698_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Pythia8::Particle*) G__getstructoffset())->col((int) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_698_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Pythia8::Particle*) G__getstructoffset())->acol((int) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_698_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      ((Pythia8::Particle*) G__getstructoffset())->cols((int) G__int(libp->para[0]), (int) G__int(libp->para[1]));
      G__setnull(result7);
      break;
   case 1:
      ((Pythia8::Particle*) G__getstructoffset())->cols((int) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((Pythia8::Particle*) G__getstructoffset())->cols();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_698_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Pythia8::Particle*) G__getstructoffset())->p(*((Pythia8::Vec4*) G__int(libp->para[0])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_698_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Pythia8::Particle*) G__getstructoffset())->p((double) G__double(libp->para[0]), (double) G__double(libp->para[1])
, (double) G__double(libp->para[2]), (double) G__double(libp->para[3]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_698_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Pythia8::Particle*) G__getstructoffset())->px((double) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_698_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Pythia8::Particle*) G__getstructoffset())->py((double) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_698_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Pythia8::Particle*) G__getstructoffset())->pz((double) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_698_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Pythia8::Particle*) G__getstructoffset())->e((double) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_698_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Pythia8::Particle*) G__getstructoffset())->m((double) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_698_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Pythia8::Particle*) G__getstructoffset())->scale((double) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_698_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Pythia8::Particle*) G__getstructoffset())->pol((double) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_698_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Pythia8::Particle*) G__getstructoffset())->vProd(*((Pythia8::Vec4*) G__int(libp->para[0])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_698_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Pythia8::Particle*) G__getstructoffset())->vProd((double) G__double(libp->para[0]), (double) G__double(libp->para[1])
, (double) G__double(libp->para[2]), (double) G__double(libp->para[3]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_698_0_33(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Pythia8::Particle*) G__getstructoffset())->xProd((double) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_698_0_34(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Pythia8::Particle*) G__getstructoffset())->yProd((double) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_698_0_35(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Pythia8::Particle*) G__getstructoffset())->zProd((double) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_698_0_36(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Pythia8::Particle*) G__getstructoffset())->tProd((double) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_698_0_37(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Pythia8::Particle*) G__getstructoffset())->tau((double) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_698_0_38(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const Pythia8::Particle*) G__getstructoffset())->id());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_698_0_39(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const Pythia8::Particle*) G__getstructoffset())->status());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_698_0_40(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const Pythia8::Particle*) G__getstructoffset())->mother1());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_698_0_41(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const Pythia8::Particle*) G__getstructoffset())->mother2());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_698_0_42(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const Pythia8::Particle*) G__getstructoffset())->daughter1());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_698_0_43(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const Pythia8::Particle*) G__getstructoffset())->daughter2());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_698_0_44(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const Pythia8::Particle*) G__getstructoffset())->col());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_698_0_45(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const Pythia8::Particle*) G__getstructoffset())->acol());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_698_0_46(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const Pythia8::Vec4* pobj;
         const Pythia8::Vec4 xobj = ((const Pythia8::Particle*) G__getstructoffset())->p();
         pobj = new Pythia8::Vec4(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_698_0_47(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const Pythia8::Particle*) G__getstructoffset())->px());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_698_0_48(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const Pythia8::Particle*) G__getstructoffset())->py());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_698_0_49(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const Pythia8::Particle*) G__getstructoffset())->pz());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_698_0_50(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const Pythia8::Particle*) G__getstructoffset())->e());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_698_0_51(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const Pythia8::Particle*) G__getstructoffset())->m());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_698_0_52(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const Pythia8::Particle*) G__getstructoffset())->scale());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_698_0_53(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const Pythia8::Particle*) G__getstructoffset())->pol());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_698_0_54(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const Pythia8::Particle*) G__getstructoffset())->hasVertex());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_698_0_55(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const Pythia8::Vec4* pobj;
         const Pythia8::Vec4 xobj = ((const Pythia8::Particle*) G__getstructoffset())->vProd();
         pobj = new Pythia8::Vec4(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_698_0_56(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const Pythia8::Particle*) G__getstructoffset())->xProd());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_698_0_57(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const Pythia8::Particle*) G__getstructoffset())->yProd());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_698_0_58(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const Pythia8::Particle*) G__getstructoffset())->zProd());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_698_0_59(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const Pythia8::Particle*) G__getstructoffset())->tProd());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_698_0_60(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const Pythia8::Particle*) G__getstructoffset())->tau());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_698_0_61(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const Pythia8::Particle*) G__getstructoffset())->idAbs());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_698_0_62(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const Pythia8::Particle*) G__getstructoffset())->statusAbs());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_698_0_63(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const Pythia8::Particle*) G__getstructoffset())->isFinal());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_698_0_64(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const Pythia8::Particle*) G__getstructoffset())->isRescatteredIncoming());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_698_0_65(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const Pythia8::Particle*) G__getstructoffset())->m2());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_698_0_66(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const Pythia8::Particle*) G__getstructoffset())->mCalc());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_698_0_67(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const Pythia8::Particle*) G__getstructoffset())->m2Calc());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_698_0_68(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const Pythia8::Particle*) G__getstructoffset())->eCalc());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_698_0_69(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const Pythia8::Particle*) G__getstructoffset())->pT());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_698_0_70(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const Pythia8::Particle*) G__getstructoffset())->pT2());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_698_0_71(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const Pythia8::Particle*) G__getstructoffset())->mT());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_698_0_72(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const Pythia8::Particle*) G__getstructoffset())->mT2());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_698_0_73(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const Pythia8::Particle*) G__getstructoffset())->pAbs());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_698_0_74(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const Pythia8::Particle*) G__getstructoffset())->pAbs2());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_698_0_75(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const Pythia8::Particle*) G__getstructoffset())->eT());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_698_0_76(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const Pythia8::Particle*) G__getstructoffset())->eT2());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_698_0_77(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const Pythia8::Particle*) G__getstructoffset())->theta());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_698_0_78(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const Pythia8::Particle*) G__getstructoffset())->phi());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_698_0_79(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const Pythia8::Particle*) G__getstructoffset())->thetaXZ());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_698_0_80(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const Pythia8::Particle*) G__getstructoffset())->pPos());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_698_0_81(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const Pythia8::Particle*) G__getstructoffset())->pNeg());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_698_0_82(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const Pythia8::Particle*) G__getstructoffset())->y());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_698_0_83(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const Pythia8::Particle*) G__getstructoffset())->eta());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_698_0_84(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const Pythia8::Vec4* pobj;
         const Pythia8::Vec4 xobj = ((const Pythia8::Particle*) G__getstructoffset())->vDec();
         pobj = new Pythia8::Vec4(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_698_0_85(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const Pythia8::Particle*) G__getstructoffset())->xDec());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_698_0_86(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const Pythia8::Particle*) G__getstructoffset())->yDec());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_698_0_87(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const Pythia8::Particle*) G__getstructoffset())->zDec());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_698_0_88(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const Pythia8::Particle*) G__getstructoffset())->tDec());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_698_0_89(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const Pythia8::Particle*) G__getstructoffset())->index());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_698_0_90(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const Pythia8::Particle*) G__getstructoffset())->iTopCopy());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_698_0_91(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const Pythia8::Particle*) G__getstructoffset())->iBotCopy());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_698_0_92(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const Pythia8::Particle*) G__getstructoffset())->iTopCopyId());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_698_0_93(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const Pythia8::Particle*) G__getstructoffset())->iBotCopyId());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_698_0_94(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<int>* pobj;
         const vector<int> xobj = ((const Pythia8::Particle*) G__getstructoffset())->motherList();
         pobj = new vector<int>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_698_0_95(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<int>* pobj;
         const vector<int> xobj = ((const Pythia8::Particle*) G__getstructoffset())->daughterList();
         pobj = new vector<int>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_698_0_96(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      {
         const vector<int>* pobj;
         const vector<int> xobj = ((const Pythia8::Particle*) G__getstructoffset())->sisterList((bool) G__int(libp->para[0]));
         pobj = new vector<int>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
      break;
   case 0:
      {
         const vector<int>* pobj;
         const vector<int> xobj = ((const Pythia8::Particle*) G__getstructoffset())->sisterList();
         pobj = new vector<int>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_698_0_97(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const Pythia8::Particle*) G__getstructoffset())->isAncestor((int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_698_0_98(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const Pythia8::Particle*) G__getstructoffset())->statusHepMC());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_698_0_99(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((Pythia8::Particle*) G__getstructoffset())->undoDecay());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_698_0_100(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const string* pobj;
         const string xobj = ((const Pythia8::Particle*) G__getstructoffset())->name();
         pobj = new string(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_698_0_101(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      {
         const string* pobj;
         const string xobj = ((const Pythia8::Particle*) G__getstructoffset())->nameWithStatus((int) G__int(libp->para[0]));
         pobj = new string(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
      break;
   case 0:
      {
         const string* pobj;
         const string xobj = ((const Pythia8::Particle*) G__getstructoffset())->nameWithStatus();
         pobj = new string(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_698_0_102(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const Pythia8::Particle*) G__getstructoffset())->spinType());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_698_0_103(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const Pythia8::Particle*) G__getstructoffset())->chargeType());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_698_0_104(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const Pythia8::Particle*) G__getstructoffset())->charge());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_698_0_105(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const Pythia8::Particle*) G__getstructoffset())->isCharged());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_698_0_106(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const Pythia8::Particle*) G__getstructoffset())->isNeutral());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_698_0_107(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const Pythia8::Particle*) G__getstructoffset())->colType());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_698_0_108(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const Pythia8::Particle*) G__getstructoffset())->m0());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_698_0_109(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const Pythia8::Particle*) G__getstructoffset())->mWidth());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_698_0_110(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const Pythia8::Particle*) G__getstructoffset())->mMin());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_698_0_111(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const Pythia8::Particle*) G__getstructoffset())->mMax());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_698_0_112(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const Pythia8::Particle*) G__getstructoffset())->mSel());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_698_0_113(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const Pythia8::Particle*) G__getstructoffset())->constituentMass());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_698_0_114(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const Pythia8::Particle*) G__getstructoffset())->tau0());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_698_0_115(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const Pythia8::Particle*) G__getstructoffset())->mayDecay());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_698_0_116(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const Pythia8::Particle*) G__getstructoffset())->canDecay());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_698_0_117(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const Pythia8::Particle*) G__getstructoffset())->doExternalDecay());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_698_0_118(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const Pythia8::Particle*) G__getstructoffset())->isResonance());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_698_0_119(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const Pythia8::Particle*) G__getstructoffset())->isVisible());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_698_0_120(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const Pythia8::Particle*) G__getstructoffset())->isLepton());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_698_0_121(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const Pythia8::Particle*) G__getstructoffset())->isQuark());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_698_0_122(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const Pythia8::Particle*) G__getstructoffset())->isGluon());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_698_0_123(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const Pythia8::Particle*) G__getstructoffset())->isDiquark());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_698_0_124(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const Pythia8::Particle*) G__getstructoffset())->isParton());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_698_0_125(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const Pythia8::Particle*) G__getstructoffset())->isHadron());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_698_0_126(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const Pythia8::ParticleDataEntry& obj = ((const Pythia8::Particle*) G__getstructoffset())->particleDataEntry();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_698_0_127(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Pythia8::Particle*) G__getstructoffset())->rescale3((double) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_698_0_128(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Pythia8::Particle*) G__getstructoffset())->rescale4((double) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_698_0_129(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Pythia8::Particle*) G__getstructoffset())->rescale5((double) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_698_0_130(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Pythia8::Particle*) G__getstructoffset())->rot((double) G__double(libp->para[0]), (double) G__double(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_698_0_131(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Pythia8::Particle*) G__getstructoffset())->bst((double) G__double(libp->para[0]), (double) G__double(libp->para[1])
, (double) G__double(libp->para[2]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_698_0_132(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Pythia8::Particle*) G__getstructoffset())->bst((double) G__double(libp->para[0]), (double) G__double(libp->para[1])
, (double) G__double(libp->para[2]), (double) G__double(libp->para[3]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_698_0_133(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Pythia8::Particle*) G__getstructoffset())->bst(*(Pythia8::Vec4*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_698_0_134(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Pythia8::Particle*) G__getstructoffset())->bst(*(Pythia8::Vec4*) libp->para[0].ref, (double) G__double(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_698_0_135(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Pythia8::Particle*) G__getstructoffset())->bstback(*(Pythia8::Vec4*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_698_0_136(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Pythia8::Particle*) G__getstructoffset())->bstback(*(Pythia8::Vec4*) libp->para[0].ref, (double) G__double(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_698_0_137(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Pythia8::Particle*) G__getstructoffset())->rotbst(*(Pythia8::RotBstMatrix*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_698_0_138(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Pythia8::Particle*) G__getstructoffset())->offsetHistory((int) G__int(libp->para[0]), (int) G__int(libp->para[1])
, (int) G__int(libp->para[2]), (int) G__int(libp->para[3]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_698_0_139(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Pythia8::Particle*) G__getstructoffset())->offsetCol((int) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef Pythia8::Particle G__TPythia8cLcLParticle;
static int G__main92Dct_698_0_140(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (Pythia8::Particle*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((Pythia8::Particle*) (soff+(sizeof(Pythia8::Particle)*i)))->~G__TPythia8cLcLParticle();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (Pythia8::Particle*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((Pythia8::Particle*) (soff))->~G__TPythia8cLcLParticle();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* Pythia8::Junction */
static int G__main92Dct_699_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   Pythia8::Junction* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new Pythia8::Junction[n];
     } else {
       p = new((void*) gvp) Pythia8::Junction[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new Pythia8::Junction;
     } else {
       p = new((void*) gvp) Pythia8::Junction;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__main92DctLN_Pythia8cLcLJunction));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_699_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   Pythia8::Junction* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 4
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new Pythia8::Junction(
(int) G__int(libp->para[0]), (int) G__int(libp->para[1])
, (int) G__int(libp->para[2]), (int) G__int(libp->para[3]));
   } else {
     p = new((void*) gvp) Pythia8::Junction(
(int) G__int(libp->para[0]), (int) G__int(libp->para[1])
, (int) G__int(libp->para[2]), (int) G__int(libp->para[3]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__main92DctLN_Pythia8cLcLJunction));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_699_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   Pythia8::Junction* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new Pythia8::Junction(*(Pythia8::Junction*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) Pythia8::Junction(*(Pythia8::Junction*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__main92DctLN_Pythia8cLcLJunction));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_699_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const Pythia8::Junction& obj = ((Pythia8::Junction*) G__getstructoffset())->operator=(*(Pythia8::Junction*) libp->para[0].ref);
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_699_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Pythia8::Junction*) G__getstructoffset())->remains((bool) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_699_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Pythia8::Junction*) G__getstructoffset())->col((int) G__int(libp->para[0]), (int) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_699_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Pythia8::Junction*) G__getstructoffset())->cols((int) G__int(libp->para[0]), (int) G__int(libp->para[1])
, (int) G__int(libp->para[2]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_699_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Pythia8::Junction*) G__getstructoffset())->endCol((int) G__int(libp->para[0]), (int) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_699_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Pythia8::Junction*) G__getstructoffset())->status((int) G__int(libp->para[0]), (int) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_699_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const Pythia8::Junction*) G__getstructoffset())->remains());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_699_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const Pythia8::Junction*) G__getstructoffset())->kind());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_699_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const Pythia8::Junction*) G__getstructoffset())->col((int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_699_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const Pythia8::Junction*) G__getstructoffset())->endCol((int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_699_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const Pythia8::Junction*) G__getstructoffset())->status((int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef Pythia8::Junction G__TPythia8cLcLJunction;
static int G__main92Dct_699_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (Pythia8::Junction*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((Pythia8::Junction*) (soff+(sizeof(Pythia8::Junction)*i)))->~G__TPythia8cLcLJunction();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (Pythia8::Junction*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((Pythia8::Junction*) (soff))->~G__TPythia8cLcLJunction();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* Pythia8::ResonanceGeneric */
static int G__main92Dct_874_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   Pythia8::ResonanceGeneric* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new Pythia8::ResonanceGeneric((int) G__int(libp->para[0]));
   } else {
     p = new((void*) gvp) Pythia8::ResonanceGeneric((int) G__int(libp->para[0]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__main92DctLN_Pythia8cLcLResonanceGeneric));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__main92Dct_874_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   Pythia8::ResonanceGeneric* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new Pythia8::ResonanceGeneric(*(Pythia8::ResonanceGeneric*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__main92DctLN_Pythia8cLcLResonanceGeneric));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef Pythia8::ResonanceGeneric G__TPythia8cLcLResonanceGeneric;
static int G__main92Dct_874_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (Pythia8::ResonanceGeneric*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((Pythia8::ResonanceGeneric*) (soff+(sizeof(Pythia8::ResonanceGeneric)*i)))->~G__TPythia8cLcLResonanceGeneric();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (Pythia8::ResonanceGeneric*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((Pythia8::ResonanceGeneric*) (soff))->~G__TPythia8cLcLResonanceGeneric();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__main92Dct_874_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   Pythia8::ResonanceGeneric* dest = (Pythia8::ResonanceGeneric*) G__getstructoffset();
   *dest = *(Pythia8::ResonanceGeneric*) libp->para[0].ref;
   const Pythia8::ResonanceGeneric& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* Pythia8::ResonanceGmZ */
static int G__main92Dct_875_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   Pythia8::ResonanceGmZ* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new Pythia8::ResonanceGmZ((int) G__int(libp->para[0]));
   } else {
     p = new((void*) gvp) Pythia8::ResonanceGmZ((int) G__int(libp->para[0]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__main92DctLN_Pythia8cLcLResonanceGmZ));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__main92Dct_875_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   Pythia8::ResonanceGmZ* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new Pythia8::ResonanceGmZ(*(Pythia8::ResonanceGmZ*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__main92DctLN_Pythia8cLcLResonanceGmZ));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef Pythia8::ResonanceGmZ G__TPythia8cLcLResonanceGmZ;
static int G__main92Dct_875_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (Pythia8::ResonanceGmZ*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((Pythia8::ResonanceGmZ*) (soff+(sizeof(Pythia8::ResonanceGmZ)*i)))->~G__TPythia8cLcLResonanceGmZ();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (Pythia8::ResonanceGmZ*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((Pythia8::ResonanceGmZ*) (soff))->~G__TPythia8cLcLResonanceGmZ();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__main92Dct_875_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   Pythia8::ResonanceGmZ* dest = (Pythia8::ResonanceGmZ*) G__getstructoffset();
   *dest = *(Pythia8::ResonanceGmZ*) libp->para[0].ref;
   const Pythia8::ResonanceGmZ& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* Pythia8::ResonanceW */
static int G__main92Dct_876_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   Pythia8::ResonanceW* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new Pythia8::ResonanceW((int) G__int(libp->para[0]));
   } else {
     p = new((void*) gvp) Pythia8::ResonanceW((int) G__int(libp->para[0]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__main92DctLN_Pythia8cLcLResonanceW));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__main92Dct_876_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   Pythia8::ResonanceW* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new Pythia8::ResonanceW(*(Pythia8::ResonanceW*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__main92DctLN_Pythia8cLcLResonanceW));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef Pythia8::ResonanceW G__TPythia8cLcLResonanceW;
static int G__main92Dct_876_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (Pythia8::ResonanceW*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((Pythia8::ResonanceW*) (soff+(sizeof(Pythia8::ResonanceW)*i)))->~G__TPythia8cLcLResonanceW();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (Pythia8::ResonanceW*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((Pythia8::ResonanceW*) (soff))->~G__TPythia8cLcLResonanceW();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__main92Dct_876_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   Pythia8::ResonanceW* dest = (Pythia8::ResonanceW*) G__getstructoffset();
   *dest = *(Pythia8::ResonanceW*) libp->para[0].ref;
   const Pythia8::ResonanceW& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* Pythia8::ResonanceTop */
static int G__main92Dct_877_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   Pythia8::ResonanceTop* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new Pythia8::ResonanceTop((int) G__int(libp->para[0]));
   } else {
     p = new((void*) gvp) Pythia8::ResonanceTop((int) G__int(libp->para[0]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__main92DctLN_Pythia8cLcLResonanceTop));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__main92Dct_877_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   Pythia8::ResonanceTop* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new Pythia8::ResonanceTop(*(Pythia8::ResonanceTop*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__main92DctLN_Pythia8cLcLResonanceTop));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef Pythia8::ResonanceTop G__TPythia8cLcLResonanceTop;
static int G__main92Dct_877_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (Pythia8::ResonanceTop*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((Pythia8::ResonanceTop*) (soff+(sizeof(Pythia8::ResonanceTop)*i)))->~G__TPythia8cLcLResonanceTop();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (Pythia8::ResonanceTop*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((Pythia8::ResonanceTop*) (soff))->~G__TPythia8cLcLResonanceTop();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__main92Dct_877_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   Pythia8::ResonanceTop* dest = (Pythia8::ResonanceTop*) G__getstructoffset();
   *dest = *(Pythia8::ResonanceTop*) libp->para[0].ref;
   const Pythia8::ResonanceTop& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* Pythia8::ResonanceFour */
static int G__main92Dct_878_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   Pythia8::ResonanceFour* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new Pythia8::ResonanceFour((int) G__int(libp->para[0]));
   } else {
     p = new((void*) gvp) Pythia8::ResonanceFour((int) G__int(libp->para[0]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__main92DctLN_Pythia8cLcLResonanceFour));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__main92Dct_878_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   Pythia8::ResonanceFour* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new Pythia8::ResonanceFour(*(Pythia8::ResonanceFour*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__main92DctLN_Pythia8cLcLResonanceFour));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef Pythia8::ResonanceFour G__TPythia8cLcLResonanceFour;
static int G__main92Dct_878_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (Pythia8::ResonanceFour*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((Pythia8::ResonanceFour*) (soff+(sizeof(Pythia8::ResonanceFour)*i)))->~G__TPythia8cLcLResonanceFour();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (Pythia8::ResonanceFour*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((Pythia8::ResonanceFour*) (soff))->~G__TPythia8cLcLResonanceFour();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__main92Dct_878_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   Pythia8::ResonanceFour* dest = (Pythia8::ResonanceFour*) G__getstructoffset();
   *dest = *(Pythia8::ResonanceFour*) libp->para[0].ref;
   const Pythia8::ResonanceFour& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* Pythia8::ResonanceH */
static int G__main92Dct_879_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   Pythia8::ResonanceH* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 2
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new Pythia8::ResonanceH((int) G__int(libp->para[0]), (int) G__int(libp->para[1]));
   } else {
     p = new((void*) gvp) Pythia8::ResonanceH((int) G__int(libp->para[0]), (int) G__int(libp->para[1]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__main92DctLN_Pythia8cLcLResonanceH));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__main92Dct_879_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   Pythia8::ResonanceH* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new Pythia8::ResonanceH(*(Pythia8::ResonanceH*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__main92DctLN_Pythia8cLcLResonanceH));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef Pythia8::ResonanceH G__TPythia8cLcLResonanceH;
static int G__main92Dct_879_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (Pythia8::ResonanceH*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((Pythia8::ResonanceH*) (soff+(sizeof(Pythia8::ResonanceH)*i)))->~G__TPythia8cLcLResonanceH();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (Pythia8::ResonanceH*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((Pythia8::ResonanceH*) (soff))->~G__TPythia8cLcLResonanceH();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__main92Dct_879_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   Pythia8::ResonanceH* dest = (Pythia8::ResonanceH*) G__getstructoffset();
   *dest = *(Pythia8::ResonanceH*) libp->para[0].ref;
   const Pythia8::ResonanceH& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* Pythia8::ResonanceHchg */
static int G__main92Dct_880_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   Pythia8::ResonanceHchg* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new Pythia8::ResonanceHchg((int) G__int(libp->para[0]));
   } else {
     p = new((void*) gvp) Pythia8::ResonanceHchg((int) G__int(libp->para[0]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__main92DctLN_Pythia8cLcLResonanceHchg));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__main92Dct_880_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   Pythia8::ResonanceHchg* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new Pythia8::ResonanceHchg(*(Pythia8::ResonanceHchg*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__main92DctLN_Pythia8cLcLResonanceHchg));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef Pythia8::ResonanceHchg G__TPythia8cLcLResonanceHchg;
static int G__main92Dct_880_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (Pythia8::ResonanceHchg*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((Pythia8::ResonanceHchg*) (soff+(sizeof(Pythia8::ResonanceHchg)*i)))->~G__TPythia8cLcLResonanceHchg();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (Pythia8::ResonanceHchg*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((Pythia8::ResonanceHchg*) (soff))->~G__TPythia8cLcLResonanceHchg();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__main92Dct_880_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   Pythia8::ResonanceHchg* dest = (Pythia8::ResonanceHchg*) G__getstructoffset();
   *dest = *(Pythia8::ResonanceHchg*) libp->para[0].ref;
   const Pythia8::ResonanceHchg& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* Pythia8::ResonanceZprime */
static int G__main92Dct_881_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   Pythia8::ResonanceZprime* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new Pythia8::ResonanceZprime((int) G__int(libp->para[0]));
   } else {
     p = new((void*) gvp) Pythia8::ResonanceZprime((int) G__int(libp->para[0]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__main92DctLN_Pythia8cLcLResonanceZprime));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__main92Dct_881_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   Pythia8::ResonanceZprime* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new Pythia8::ResonanceZprime(*(Pythia8::ResonanceZprime*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__main92DctLN_Pythia8cLcLResonanceZprime));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef Pythia8::ResonanceZprime G__TPythia8cLcLResonanceZprime;
static int G__main92Dct_881_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (Pythia8::ResonanceZprime*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((Pythia8::ResonanceZprime*) (soff+(sizeof(Pythia8::ResonanceZprime)*i)))->~G__TPythia8cLcLResonanceZprime();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (Pythia8::ResonanceZprime*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((Pythia8::ResonanceZprime*) (soff))->~G__TPythia8cLcLResonanceZprime();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__main92Dct_881_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   Pythia8::ResonanceZprime* dest = (Pythia8::ResonanceZprime*) G__getstructoffset();
   *dest = *(Pythia8::ResonanceZprime*) libp->para[0].ref;
   const Pythia8::ResonanceZprime& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* Pythia8::ResonanceWprime */
static int G__main92Dct_882_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   Pythia8::ResonanceWprime* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new Pythia8::ResonanceWprime((int) G__int(libp->para[0]));
   } else {
     p = new((void*) gvp) Pythia8::ResonanceWprime((int) G__int(libp->para[0]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__main92DctLN_Pythia8cLcLResonanceWprime));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__main92Dct_882_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   Pythia8::ResonanceWprime* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new Pythia8::ResonanceWprime(*(Pythia8::ResonanceWprime*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__main92DctLN_Pythia8cLcLResonanceWprime));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef Pythia8::ResonanceWprime G__TPythia8cLcLResonanceWprime;
static int G__main92Dct_882_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (Pythia8::ResonanceWprime*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((Pythia8::ResonanceWprime*) (soff+(sizeof(Pythia8::ResonanceWprime)*i)))->~G__TPythia8cLcLResonanceWprime();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (Pythia8::ResonanceWprime*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((Pythia8::ResonanceWprime*) (soff))->~G__TPythia8cLcLResonanceWprime();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__main92Dct_882_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   Pythia8::ResonanceWprime* dest = (Pythia8::ResonanceWprime*) G__getstructoffset();
   *dest = *(Pythia8::ResonanceWprime*) libp->para[0].ref;
   const Pythia8::ResonanceWprime& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* Pythia8::ResonanceRhorizontal */
static int G__main92Dct_883_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   Pythia8::ResonanceRhorizontal* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new Pythia8::ResonanceRhorizontal((int) G__int(libp->para[0]));
   } else {
     p = new((void*) gvp) Pythia8::ResonanceRhorizontal((int) G__int(libp->para[0]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__main92DctLN_Pythia8cLcLResonanceRhorizontal));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__main92Dct_883_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   Pythia8::ResonanceRhorizontal* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new Pythia8::ResonanceRhorizontal(*(Pythia8::ResonanceRhorizontal*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__main92DctLN_Pythia8cLcLResonanceRhorizontal));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef Pythia8::ResonanceRhorizontal G__TPythia8cLcLResonanceRhorizontal;
static int G__main92Dct_883_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (Pythia8::ResonanceRhorizontal*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((Pythia8::ResonanceRhorizontal*) (soff+(sizeof(Pythia8::ResonanceRhorizontal)*i)))->~G__TPythia8cLcLResonanceRhorizontal();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (Pythia8::ResonanceRhorizontal*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((Pythia8::ResonanceRhorizontal*) (soff))->~G__TPythia8cLcLResonanceRhorizontal();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__main92Dct_883_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   Pythia8::ResonanceRhorizontal* dest = (Pythia8::ResonanceRhorizontal*) G__getstructoffset();
   *dest = *(Pythia8::ResonanceRhorizontal*) libp->para[0].ref;
   const Pythia8::ResonanceRhorizontal& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* Pythia8::ResonanceExcited */
static int G__main92Dct_884_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   Pythia8::ResonanceExcited* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new Pythia8::ResonanceExcited((int) G__int(libp->para[0]));
   } else {
     p = new((void*) gvp) Pythia8::ResonanceExcited((int) G__int(libp->para[0]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__main92DctLN_Pythia8cLcLResonanceExcited));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__main92Dct_884_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   Pythia8::ResonanceExcited* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new Pythia8::ResonanceExcited(*(Pythia8::ResonanceExcited*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__main92DctLN_Pythia8cLcLResonanceExcited));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef Pythia8::ResonanceExcited G__TPythia8cLcLResonanceExcited;
static int G__main92Dct_884_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (Pythia8::ResonanceExcited*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((Pythia8::ResonanceExcited*) (soff+(sizeof(Pythia8::ResonanceExcited)*i)))->~G__TPythia8cLcLResonanceExcited();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (Pythia8::ResonanceExcited*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((Pythia8::ResonanceExcited*) (soff))->~G__TPythia8cLcLResonanceExcited();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__main92Dct_884_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   Pythia8::ResonanceExcited* dest = (Pythia8::ResonanceExcited*) G__getstructoffset();
   *dest = *(Pythia8::ResonanceExcited*) libp->para[0].ref;
   const Pythia8::ResonanceExcited& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* Pythia8::ResonanceGraviton */
static int G__main92Dct_885_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   Pythia8::ResonanceGraviton* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new Pythia8::ResonanceGraviton((int) G__int(libp->para[0]));
   } else {
     p = new((void*) gvp) Pythia8::ResonanceGraviton((int) G__int(libp->para[0]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__main92DctLN_Pythia8cLcLResonanceGraviton));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__main92Dct_885_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   Pythia8::ResonanceGraviton* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new Pythia8::ResonanceGraviton(*(Pythia8::ResonanceGraviton*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__main92DctLN_Pythia8cLcLResonanceGraviton));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef Pythia8::ResonanceGraviton G__TPythia8cLcLResonanceGraviton;
static int G__main92Dct_885_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (Pythia8::ResonanceGraviton*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((Pythia8::ResonanceGraviton*) (soff+(sizeof(Pythia8::ResonanceGraviton)*i)))->~G__TPythia8cLcLResonanceGraviton();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (Pythia8::ResonanceGraviton*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((Pythia8::ResonanceGraviton*) (soff))->~G__TPythia8cLcLResonanceGraviton();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__main92Dct_885_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   Pythia8::ResonanceGraviton* dest = (Pythia8::ResonanceGraviton*) G__getstructoffset();
   *dest = *(Pythia8::ResonanceGraviton*) libp->para[0].ref;
   const Pythia8::ResonanceGraviton& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* Pythia8::ResonanceLeptoquark */
static int G__main92Dct_887_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   Pythia8::ResonanceLeptoquark* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new Pythia8::ResonanceLeptoquark((int) G__int(libp->para[0]));
   } else {
     p = new((void*) gvp) Pythia8::ResonanceLeptoquark((int) G__int(libp->para[0]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__main92DctLN_Pythia8cLcLResonanceLeptoquark));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__main92Dct_887_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   Pythia8::ResonanceLeptoquark* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new Pythia8::ResonanceLeptoquark(*(Pythia8::ResonanceLeptoquark*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__main92DctLN_Pythia8cLcLResonanceLeptoquark));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef Pythia8::ResonanceLeptoquark G__TPythia8cLcLResonanceLeptoquark;
static int G__main92Dct_887_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (Pythia8::ResonanceLeptoquark*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((Pythia8::ResonanceLeptoquark*) (soff+(sizeof(Pythia8::ResonanceLeptoquark)*i)))->~G__TPythia8cLcLResonanceLeptoquark();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (Pythia8::ResonanceLeptoquark*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((Pythia8::ResonanceLeptoquark*) (soff))->~G__TPythia8cLcLResonanceLeptoquark();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__main92Dct_887_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   Pythia8::ResonanceLeptoquark* dest = (Pythia8::ResonanceLeptoquark*) G__getstructoffset();
   *dest = *(Pythia8::ResonanceLeptoquark*) libp->para[0].ref;
   const Pythia8::ResonanceLeptoquark& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* Pythia8::ResonanceNuRight */
static int G__main92Dct_888_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   Pythia8::ResonanceNuRight* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new Pythia8::ResonanceNuRight((int) G__int(libp->para[0]));
   } else {
     p = new((void*) gvp) Pythia8::ResonanceNuRight((int) G__int(libp->para[0]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__main92DctLN_Pythia8cLcLResonanceNuRight));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__main92Dct_888_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   Pythia8::ResonanceNuRight* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new Pythia8::ResonanceNuRight(*(Pythia8::ResonanceNuRight*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__main92DctLN_Pythia8cLcLResonanceNuRight));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef Pythia8::ResonanceNuRight G__TPythia8cLcLResonanceNuRight;
static int G__main92Dct_888_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (Pythia8::ResonanceNuRight*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((Pythia8::ResonanceNuRight*) (soff+(sizeof(Pythia8::ResonanceNuRight)*i)))->~G__TPythia8cLcLResonanceNuRight();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (Pythia8::ResonanceNuRight*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((Pythia8::ResonanceNuRight*) (soff))->~G__TPythia8cLcLResonanceNuRight();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__main92Dct_888_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   Pythia8::ResonanceNuRight* dest = (Pythia8::ResonanceNuRight*) G__getstructoffset();
   *dest = *(Pythia8::ResonanceNuRight*) libp->para[0].ref;
   const Pythia8::ResonanceNuRight& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* Pythia8::ResonanceZRight */
static int G__main92Dct_889_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   Pythia8::ResonanceZRight* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new Pythia8::ResonanceZRight((int) G__int(libp->para[0]));
   } else {
     p = new((void*) gvp) Pythia8::ResonanceZRight((int) G__int(libp->para[0]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__main92DctLN_Pythia8cLcLResonanceZRight));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__main92Dct_889_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   Pythia8::ResonanceZRight* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new Pythia8::ResonanceZRight(*(Pythia8::ResonanceZRight*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__main92DctLN_Pythia8cLcLResonanceZRight));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef Pythia8::ResonanceZRight G__TPythia8cLcLResonanceZRight;
static int G__main92Dct_889_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (Pythia8::ResonanceZRight*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((Pythia8::ResonanceZRight*) (soff+(sizeof(Pythia8::ResonanceZRight)*i)))->~G__TPythia8cLcLResonanceZRight();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (Pythia8::ResonanceZRight*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((Pythia8::ResonanceZRight*) (soff))->~G__TPythia8cLcLResonanceZRight();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__main92Dct_889_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   Pythia8::ResonanceZRight* dest = (Pythia8::ResonanceZRight*) G__getstructoffset();
   *dest = *(Pythia8::ResonanceZRight*) libp->para[0].ref;
   const Pythia8::ResonanceZRight& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* Pythia8::ResonanceWRight */
static int G__main92Dct_890_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   Pythia8::ResonanceWRight* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new Pythia8::ResonanceWRight((int) G__int(libp->para[0]));
   } else {
     p = new((void*) gvp) Pythia8::ResonanceWRight((int) G__int(libp->para[0]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__main92DctLN_Pythia8cLcLResonanceWRight));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__main92Dct_890_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   Pythia8::ResonanceWRight* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new Pythia8::ResonanceWRight(*(Pythia8::ResonanceWRight*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__main92DctLN_Pythia8cLcLResonanceWRight));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef Pythia8::ResonanceWRight G__TPythia8cLcLResonanceWRight;
static int G__main92Dct_890_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (Pythia8::ResonanceWRight*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((Pythia8::ResonanceWRight*) (soff+(sizeof(Pythia8::ResonanceWRight)*i)))->~G__TPythia8cLcLResonanceWRight();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (Pythia8::ResonanceWRight*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((Pythia8::ResonanceWRight*) (soff))->~G__TPythia8cLcLResonanceWRight();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__main92Dct_890_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   Pythia8::ResonanceWRight* dest = (Pythia8::ResonanceWRight*) G__getstructoffset();
   *dest = *(Pythia8::ResonanceWRight*) libp->para[0].ref;
   const Pythia8::ResonanceWRight& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* Pythia8::ResonanceHchgchgLeft */
static int G__main92Dct_891_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   Pythia8::ResonanceHchgchgLeft* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new Pythia8::ResonanceHchgchgLeft((int) G__int(libp->para[0]));
   } else {
     p = new((void*) gvp) Pythia8::ResonanceHchgchgLeft((int) G__int(libp->para[0]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__main92DctLN_Pythia8cLcLResonanceHchgchgLeft));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__main92Dct_891_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   Pythia8::ResonanceHchgchgLeft* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new Pythia8::ResonanceHchgchgLeft(*(Pythia8::ResonanceHchgchgLeft*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__main92DctLN_Pythia8cLcLResonanceHchgchgLeft));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef Pythia8::ResonanceHchgchgLeft G__TPythia8cLcLResonanceHchgchgLeft;
static int G__main92Dct_891_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (Pythia8::ResonanceHchgchgLeft*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((Pythia8::ResonanceHchgchgLeft*) (soff+(sizeof(Pythia8::ResonanceHchgchgLeft)*i)))->~G__TPythia8cLcLResonanceHchgchgLeft();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (Pythia8::ResonanceHchgchgLeft*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((Pythia8::ResonanceHchgchgLeft*) (soff))->~G__TPythia8cLcLResonanceHchgchgLeft();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__main92Dct_891_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   Pythia8::ResonanceHchgchgLeft* dest = (Pythia8::ResonanceHchgchgLeft*) G__getstructoffset();
   *dest = *(Pythia8::ResonanceHchgchgLeft*) libp->para[0].ref;
   const Pythia8::ResonanceHchgchgLeft& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* Pythia8::ResonanceHchgchgRight */
static int G__main92Dct_892_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   Pythia8::ResonanceHchgchgRight* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new Pythia8::ResonanceHchgchgRight((int) G__int(libp->para[0]));
   } else {
     p = new((void*) gvp) Pythia8::ResonanceHchgchgRight((int) G__int(libp->para[0]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__main92DctLN_Pythia8cLcLResonanceHchgchgRight));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__main92Dct_892_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   Pythia8::ResonanceHchgchgRight* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new Pythia8::ResonanceHchgchgRight(*(Pythia8::ResonanceHchgchgRight*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__main92DctLN_Pythia8cLcLResonanceHchgchgRight));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef Pythia8::ResonanceHchgchgRight G__TPythia8cLcLResonanceHchgchgRight;
static int G__main92Dct_892_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (Pythia8::ResonanceHchgchgRight*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((Pythia8::ResonanceHchgchgRight*) (soff+(sizeof(Pythia8::ResonanceHchgchgRight)*i)))->~G__TPythia8cLcLResonanceHchgchgRight();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (Pythia8::ResonanceHchgchgRight*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((Pythia8::ResonanceHchgchgRight*) (soff))->~G__TPythia8cLcLResonanceHchgchgRight();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__main92Dct_892_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   Pythia8::ResonanceHchgchgRight* dest = (Pythia8::ResonanceHchgchgRight*) G__getstructoffset();
   *dest = *(Pythia8::ResonanceHchgchgRight*) libp->para[0].ref;
   const Pythia8::ResonanceHchgchgRight& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* Pythia8::InBeam */
static int G__main92Dct_930_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   Pythia8::InBeam* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new Pythia8::InBeam((int) G__int(libp->para[0]));
     } else {
       p = new((void*) gvp) Pythia8::InBeam((int) G__int(libp->para[0]));
     }
     break;
   case 0:
     int n = G__getaryconstruct();
     if (n) {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new Pythia8::InBeam[n];
       } else {
         p = new((void*) gvp) Pythia8::InBeam[n];
       }
     } else {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new Pythia8::InBeam;
       } else {
         p = new((void*) gvp) Pythia8::InBeam;
       }
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__main92DctLN_Pythia8cLcLInBeam));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__main92Dct_930_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   Pythia8::InBeam* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new Pythia8::InBeam(*(Pythia8::InBeam*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__main92DctLN_Pythia8cLcLInBeam));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef Pythia8::InBeam G__TPythia8cLcLInBeam;
static int G__main92Dct_930_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (Pythia8::InBeam*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((Pythia8::InBeam*) (soff+(sizeof(Pythia8::InBeam)*i)))->~G__TPythia8cLcLInBeam();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (Pythia8::InBeam*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((Pythia8::InBeam*) (soff))->~G__TPythia8cLcLInBeam();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__main92Dct_930_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   Pythia8::InBeam* dest = (Pythia8::InBeam*) G__getstructoffset();
   *dest = *(Pythia8::InBeam*) libp->para[0].ref;
   const Pythia8::InBeam& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* Pythia8::InPair */
static int G__main92Dct_931_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   Pythia8::InPair* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 2:
     //m: 2
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new Pythia8::InPair((int) G__int(libp->para[0]), (int) G__int(libp->para[1]));
     } else {
       p = new((void*) gvp) Pythia8::InPair((int) G__int(libp->para[0]), (int) G__int(libp->para[1]));
     }
     break;
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new Pythia8::InPair((int) G__int(libp->para[0]));
     } else {
       p = new((void*) gvp) Pythia8::InPair((int) G__int(libp->para[0]));
     }
     break;
   case 0:
     int n = G__getaryconstruct();
     if (n) {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new Pythia8::InPair[n];
       } else {
         p = new((void*) gvp) Pythia8::InPair[n];
       }
     } else {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new Pythia8::InPair;
       } else {
         p = new((void*) gvp) Pythia8::InPair;
       }
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__main92DctLN_Pythia8cLcLInPair));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__main92Dct_931_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   Pythia8::InPair* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new Pythia8::InPair(*(Pythia8::InPair*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__main92DctLN_Pythia8cLcLInPair));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef Pythia8::InPair G__TPythia8cLcLInPair;
static int G__main92Dct_931_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (Pythia8::InPair*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((Pythia8::InPair*) (soff+(sizeof(Pythia8::InPair)*i)))->~G__TPythia8cLcLInPair();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (Pythia8::InPair*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((Pythia8::InPair*) (soff))->~G__TPythia8cLcLInPair();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__main92Dct_931_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   Pythia8::InPair* dest = (Pythia8::InPair*) G__getstructoffset();
   *dest = *(Pythia8::InPair*) libp->para[0].ref;
   const Pythia8::InPair& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* Pythia8::SigmaProcess */
static int G__main92Dct_932_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 9:
      ((Pythia8::SigmaProcess*) G__getstructoffset())->init(
(Pythia8::Info*) G__int(libp->para[0]), (Pythia8::Settings*) G__int(libp->para[1])
, (Pythia8::ParticleData*) G__int(libp->para[2]), (Pythia8::Rndm*) G__int(libp->para[3])
, (Pythia8::BeamParticle*) G__int(libp->para[4]), (Pythia8::BeamParticle*) G__int(libp->para[5])
, (Pythia8::Couplings*) G__int(libp->para[6]), (Pythia8::SigmaTotal*) G__int(libp->para[7])
, (Pythia8::SLHAinterface*) G__int(libp->para[8]));
      G__setnull(result7);
      break;
   case 8:
      ((Pythia8::SigmaProcess*) G__getstructoffset())->init(
(Pythia8::Info*) G__int(libp->para[0]), (Pythia8::Settings*) G__int(libp->para[1])
, (Pythia8::ParticleData*) G__int(libp->para[2]), (Pythia8::Rndm*) G__int(libp->para[3])
, (Pythia8::BeamParticle*) G__int(libp->para[4]), (Pythia8::BeamParticle*) G__int(libp->para[5])
, (Pythia8::Couplings*) G__int(libp->para[6]), (Pythia8::SigmaTotal*) G__int(libp->para[7]));
      G__setnull(result7);
      break;
   case 7:
      ((Pythia8::SigmaProcess*) G__getstructoffset())->init(
(Pythia8::Info*) G__int(libp->para[0]), (Pythia8::Settings*) G__int(libp->para[1])
, (Pythia8::ParticleData*) G__int(libp->para[2]), (Pythia8::Rndm*) G__int(libp->para[3])
, (Pythia8::BeamParticle*) G__int(libp->para[4]), (Pythia8::BeamParticle*) G__int(libp->para[5])
, (Pythia8::Couplings*) G__int(libp->para[6]));
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_932_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Pythia8::SigmaProcess*) G__getstructoffset())->setLHAPtr((Pythia8::LHAup*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_932_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Pythia8::SigmaProcess*) G__getstructoffset())->initProc();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_932_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((Pythia8::SigmaProcess*) G__getstructoffset())->initFlux());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_932_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Pythia8::SigmaProcess*) G__getstructoffset())->set1Kin((double) G__double(libp->para[0]), (double) G__double(libp->para[1])
, (double) G__double(libp->para[2]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_932_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Pythia8::SigmaProcess*) G__getstructoffset())->set2Kin(
(double) G__double(libp->para[0]), (double) G__double(libp->para[1])
, (double) G__double(libp->para[2]), (double) G__double(libp->para[3])
, (double) G__double(libp->para[4]), (double) G__double(libp->para[5])
, (double) G__double(libp->para[6]), (double) G__double(libp->para[7]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_932_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Pythia8::SigmaProcess*) G__getstructoffset())->set2KinMPI(
(double) G__double(libp->para[0]), (double) G__double(libp->para[1])
, (double) G__double(libp->para[2]), (double) G__double(libp->para[3])
, (double) G__double(libp->para[4]), (double) G__double(libp->para[5])
, (double) G__double(libp->para[6]), (bool) G__int(libp->para[7])
, (double) G__double(libp->para[8]), (double) G__double(libp->para[9]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_932_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Pythia8::SigmaProcess*) G__getstructoffset())->set3Kin(
(double) G__double(libp->para[0]), (double) G__double(libp->para[1])
, (double) G__double(libp->para[2]), *((Pythia8::Vec4*) G__int(libp->para[3]))
, *((Pythia8::Vec4*) G__int(libp->para[4])), *((Pythia8::Vec4*) G__int(libp->para[5]))
, (double) G__double(libp->para[6]), (double) G__double(libp->para[7])
, (double) G__double(libp->para[8]), (double) G__double(libp->para[9])
, (double) G__double(libp->para[10]), (double) G__double(libp->para[11]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_932_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Pythia8::SigmaProcess*) G__getstructoffset())->sigmaKin();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_932_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((Pythia8::SigmaProcess*) G__getstructoffset())->sigmaHat());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_932_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      G__letdouble(result7, 100, (double) ((Pythia8::SigmaProcess*) G__getstructoffset())->sigmaHatWrap((int) G__int(libp->para[0]), (int) G__int(libp->para[1])));
      break;
   case 1:
      G__letdouble(result7, 100, (double) ((Pythia8::SigmaProcess*) G__getstructoffset())->sigmaHatWrap((int) G__int(libp->para[0])));
      break;
   case 0:
      G__letdouble(result7, 100, (double) ((Pythia8::SigmaProcess*) G__getstructoffset())->sigmaHatWrap());
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_932_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((Pythia8::SigmaProcess*) G__getstructoffset())->sigmaPDF());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_932_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      ((Pythia8::SigmaProcess*) G__getstructoffset())->pickInState((int) G__int(libp->para[0]), (int) G__int(libp->para[1]));
      G__setnull(result7);
      break;
   case 1:
      ((Pythia8::SigmaProcess*) G__getstructoffset())->pickInState((int) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((Pythia8::SigmaProcess*) G__getstructoffset())->pickInState();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_932_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Pythia8::SigmaProcess*) G__getstructoffset())->setIdColAcol();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_932_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 6:
      G__letint(result7, 103, (long) ((Pythia8::SigmaProcess*) G__getstructoffset())->final2KinMPI((int) G__int(libp->para[0]), (int) G__int(libp->para[1])
, *((Pythia8::Vec4*) G__int(libp->para[2])), *((Pythia8::Vec4*) G__int(libp->para[3]))
, (double) G__double(libp->para[4]), (double) G__double(libp->para[5])));
      break;
   case 5:
      G__letint(result7, 103, (long) ((Pythia8::SigmaProcess*) G__getstructoffset())->final2KinMPI((int) G__int(libp->para[0]), (int) G__int(libp->para[1])
, *((Pythia8::Vec4*) G__int(libp->para[2])), *((Pythia8::Vec4*) G__int(libp->para[3]))
, (double) G__double(libp->para[4])));
      break;
   case 4:
      G__letint(result7, 103, (long) ((Pythia8::SigmaProcess*) G__getstructoffset())->final2KinMPI((int) G__int(libp->para[0]), (int) G__int(libp->para[1])
, *((Pythia8::Vec4*) G__int(libp->para[2])), *((Pythia8::Vec4*) G__int(libp->para[3]))));
      break;
   case 3:
      G__letint(result7, 103, (long) ((Pythia8::SigmaProcess*) G__getstructoffset())->final2KinMPI((int) G__int(libp->para[0]), (int) G__int(libp->para[1])
, *((Pythia8::Vec4*) G__int(libp->para[2]))));
      break;
   case 2:
      G__letint(result7, 103, (long) ((Pythia8::SigmaProcess*) G__getstructoffset())->final2KinMPI((int) G__int(libp->para[0]), (int) G__int(libp->para[1])));
      break;
   case 1:
      G__letint(result7, 103, (long) ((Pythia8::SigmaProcess*) G__getstructoffset())->final2KinMPI((int) G__int(libp->para[0])));
      break;
   case 0:
      G__letint(result7, 103, (long) ((Pythia8::SigmaProcess*) G__getstructoffset())->final2KinMPI());
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_932_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((Pythia8::SigmaProcess*) G__getstructoffset())->weightDecayFlav(*(Pythia8::Event*) libp->para[0].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_932_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((Pythia8::SigmaProcess*) G__getstructoffset())->weightDecay(*(Pythia8::Event*) libp->para[0].ref, (int) G__int(libp->para[1])
, (int) G__int(libp->para[2])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_932_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Pythia8::SigmaProcess*) G__getstructoffset())->setScale();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_932_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const string* pobj;
         const string xobj = ((const Pythia8::SigmaProcess*) G__getstructoffset())->name();
         pobj = new string(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_932_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const Pythia8::SigmaProcess*) G__getstructoffset())->code());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_932_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const Pythia8::SigmaProcess*) G__getstructoffset())->nFinal());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_932_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const string* pobj;
         const string xobj = ((const Pythia8::SigmaProcess*) G__getstructoffset())->inFlux();
         pobj = new string(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_932_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const Pythia8::SigmaProcess*) G__getstructoffset())->convert2mb());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_932_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const Pythia8::SigmaProcess*) G__getstructoffset())->convertM2());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_932_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const Pythia8::SigmaProcess*) G__getstructoffset())->isLHA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_932_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const Pythia8::SigmaProcess*) G__getstructoffset())->isNonDiff());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_932_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const Pythia8::SigmaProcess*) G__getstructoffset())->isResolved());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_932_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const Pythia8::SigmaProcess*) G__getstructoffset())->isDiffA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_932_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const Pythia8::SigmaProcess*) G__getstructoffset())->isDiffB());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_932_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const Pythia8::SigmaProcess*) G__getstructoffset())->isDiffC());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_932_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const Pythia8::SigmaProcess*) G__getstructoffset())->isSUSY());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_932_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const Pythia8::SigmaProcess*) G__getstructoffset())->allowNegativeSigma());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_932_0_33(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const Pythia8::SigmaProcess*) G__getstructoffset())->id3Mass());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_932_0_34(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const Pythia8::SigmaProcess*) G__getstructoffset())->id4Mass());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_932_0_35(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const Pythia8::SigmaProcess*) G__getstructoffset())->id5Mass());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_932_0_36(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const Pythia8::SigmaProcess*) G__getstructoffset())->resonanceA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_932_0_37(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const Pythia8::SigmaProcess*) G__getstructoffset())->resonanceB());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_932_0_38(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const Pythia8::SigmaProcess*) G__getstructoffset())->isSChannel());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_932_0_39(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const Pythia8::SigmaProcess*) G__getstructoffset())->idSChannel());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_932_0_40(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const Pythia8::SigmaProcess*) G__getstructoffset())->isQCD3body());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_932_0_41(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const Pythia8::SigmaProcess*) G__getstructoffset())->idTchan1());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_932_0_42(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const Pythia8::SigmaProcess*) G__getstructoffset())->idTchan2());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_932_0_43(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const Pythia8::SigmaProcess*) G__getstructoffset())->tChanFracPow1());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_932_0_44(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const Pythia8::SigmaProcess*) G__getstructoffset())->tChanFracPow2());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_932_0_45(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const Pythia8::SigmaProcess*) G__getstructoffset())->useMirrorWeight());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_932_0_46(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const Pythia8::SigmaProcess*) G__getstructoffset())->gmZmode());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_932_0_47(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const Pythia8::SigmaProcess*) G__getstructoffset())->swappedTU());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_932_0_48(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const Pythia8::SigmaProcess*) G__getstructoffset())->id((int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_932_0_49(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const Pythia8::SigmaProcess*) G__getstructoffset())->col((int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_932_0_50(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const Pythia8::SigmaProcess*) G__getstructoffset())->acol((int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_932_0_51(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const Pythia8::SigmaProcess*) G__getstructoffset())->m((int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_932_0_52(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const Pythia8::Particle* pobj;
         const Pythia8::Particle xobj = ((const Pythia8::SigmaProcess*) G__getstructoffset())->getParton((int) G__int(libp->para[0]));
         pobj = new Pythia8::Particle(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_932_0_53(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const Pythia8::SigmaProcess*) G__getstructoffset())->Q2Ren());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_932_0_54(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const Pythia8::SigmaProcess*) G__getstructoffset())->alphaEMRen());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_932_0_55(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const Pythia8::SigmaProcess*) G__getstructoffset())->alphaSRen());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_932_0_56(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const Pythia8::SigmaProcess*) G__getstructoffset())->Q2Fac());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_932_0_57(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const Pythia8::SigmaProcess*) G__getstructoffset())->pdf1());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_932_0_58(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const Pythia8::SigmaProcess*) G__getstructoffset())->pdf2());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_932_0_59(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const Pythia8::SigmaProcess*) G__getstructoffset())->thetaMPI());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_932_0_60(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const Pythia8::SigmaProcess*) G__getstructoffset())->phiMPI());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_932_0_61(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const Pythia8::SigmaProcess*) G__getstructoffset())->sHBetaMPI());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_932_0_62(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const Pythia8::SigmaProcess*) G__getstructoffset())->pT2MPI());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_932_0_63(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const Pythia8::SigmaProcess*) G__getstructoffset())->pTMPIFin());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_932_0_64(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Pythia8::SigmaProcess*) G__getstructoffset())->saveKin();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_932_0_65(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Pythia8::SigmaProcess*) G__getstructoffset())->loadKin();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_932_0_66(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Pythia8::SigmaProcess*) G__getstructoffset())->swapKin();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__main92Dct_932_0_84(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   Pythia8::SigmaProcess* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new Pythia8::SigmaProcess(*(Pythia8::SigmaProcess*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__main92DctLN_Pythia8cLcLSigmaProcess));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef Pythia8::SigmaProcess G__TPythia8cLcLSigmaProcess;
static int G__main92Dct_932_0_85(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (Pythia8::SigmaProcess*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((Pythia8::SigmaProcess*) (soff+(sizeof(Pythia8::SigmaProcess)*i)))->~G__TPythia8cLcLSigmaProcess();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (Pythia8::SigmaProcess*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((Pythia8::SigmaProcess*) (soff))->~G__TPythia8cLcLSigmaProcess();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__main92Dct_932_0_86(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   Pythia8::SigmaProcess* dest = (Pythia8::SigmaProcess*) G__getstructoffset();
   *dest = *(Pythia8::SigmaProcess*) libp->para[0].ref;
   const Pythia8::SigmaProcess& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* Pythia8::Pythia */
static int G__main92Dct_1118_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   Pythia8::Pythia* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 2:
     //m: 2
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new Pythia8::Pythia(*((string*) G__int(libp->para[0])), (bool) G__int(libp->para[1]));
     } else {
       p = new((void*) gvp) Pythia8::Pythia(*((string*) G__int(libp->para[0])), (bool) G__int(libp->para[1]));
     }
     break;
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new Pythia8::Pythia(*((string*) G__int(libp->para[0])));
     } else {
       p = new((void*) gvp) Pythia8::Pythia(*((string*) G__int(libp->para[0])));
     }
     break;
   case 0:
     int n = G__getaryconstruct();
     if (n) {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new Pythia8::Pythia[n];
       } else {
         p = new((void*) gvp) Pythia8::Pythia[n];
       }
     } else {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new Pythia8::Pythia;
       } else {
         p = new((void*) gvp) Pythia8::Pythia;
       }
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__main92DctLN_Pythia8cLcLPythia));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_1118_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      G__letint(result7, 103, (long) ((Pythia8::Pythia*) G__getstructoffset())->readString(*((string*) G__int(libp->para[0])), (bool) G__int(libp->para[1])));
      break;
   case 1:
      G__letint(result7, 103, (long) ((Pythia8::Pythia*) G__getstructoffset())->readString(*((string*) G__int(libp->para[0]))));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_1118_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 3:
      G__letint(result7, 103, (long) ((Pythia8::Pythia*) G__getstructoffset())->readFile(*((string*) G__int(libp->para[0])), (bool) G__int(libp->para[1])
, (int) G__int(libp->para[2])));
      break;
   case 2:
      G__letint(result7, 103, (long) ((Pythia8::Pythia*) G__getstructoffset())->readFile(*((string*) G__int(libp->para[0])), (bool) G__int(libp->para[1])));
      break;
   case 1:
      G__letint(result7, 103, (long) ((Pythia8::Pythia*) G__getstructoffset())->readFile(*((string*) G__int(libp->para[0]))));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_1118_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((Pythia8::Pythia*) G__getstructoffset())->readFile(*((string*) G__int(libp->para[0])), (int) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_1118_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 3:
      G__letint(result7, 103, (long) ((Pythia8::Pythia*) G__getstructoffset())->readFile(*(istream*) libp->para[0].ref, (bool) G__int(libp->para[1])
, (int) G__int(libp->para[2])));
      break;
   case 2:
      G__letint(result7, 103, (long) ((Pythia8::Pythia*) G__getstructoffset())->readFile(*(istream*) libp->para[0].ref, (bool) G__int(libp->para[1])));
      break;
   case 1:
      G__letint(result7, 103, (long) ((Pythia8::Pythia*) G__getstructoffset())->readFile(*(istream*) libp->para[0].ref));
      break;
   case 0:
      G__letint(result7, 103, (long) ((Pythia8::Pythia*) G__getstructoffset())->readFile());
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_1118_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((Pythia8::Pythia*) G__getstructoffset())->readFile(*(istream*) libp->para[0].ref, (int) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_1118_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 6:
      G__letint(result7, 103, (long) ((Pythia8::Pythia*) G__getstructoffset())->setPDFPtr((Pythia8::PDF*) G__int(libp->para[0]), (Pythia8::PDF*) G__int(libp->para[1])
, (Pythia8::PDF*) G__int(libp->para[2]), (Pythia8::PDF*) G__int(libp->para[3])
, (Pythia8::PDF*) G__int(libp->para[4]), (Pythia8::PDF*) G__int(libp->para[5])));
      break;
   case 5:
      G__letint(result7, 103, (long) ((Pythia8::Pythia*) G__getstructoffset())->setPDFPtr((Pythia8::PDF*) G__int(libp->para[0]), (Pythia8::PDF*) G__int(libp->para[1])
, (Pythia8::PDF*) G__int(libp->para[2]), (Pythia8::PDF*) G__int(libp->para[3])
, (Pythia8::PDF*) G__int(libp->para[4])));
      break;
   case 4:
      G__letint(result7, 103, (long) ((Pythia8::Pythia*) G__getstructoffset())->setPDFPtr((Pythia8::PDF*) G__int(libp->para[0]), (Pythia8::PDF*) G__int(libp->para[1])
, (Pythia8::PDF*) G__int(libp->para[2]), (Pythia8::PDF*) G__int(libp->para[3])));
      break;
   case 3:
      G__letint(result7, 103, (long) ((Pythia8::Pythia*) G__getstructoffset())->setPDFPtr((Pythia8::PDF*) G__int(libp->para[0]), (Pythia8::PDF*) G__int(libp->para[1])
, (Pythia8::PDF*) G__int(libp->para[2])));
      break;
   case 2:
      G__letint(result7, 103, (long) ((Pythia8::Pythia*) G__getstructoffset())->setPDFPtr((Pythia8::PDF*) G__int(libp->para[0]), (Pythia8::PDF*) G__int(libp->para[1])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_1118_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((Pythia8::Pythia*) G__getstructoffset())->setLHAupPtr((Pythia8::LHAup*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_1118_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((Pythia8::Pythia*) G__getstructoffset())->setDecayPtr((Pythia8::DecayHandler*) G__int(libp->para[0]), *((vector<int>*) G__int(libp->para[1]))));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_1118_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((Pythia8::Pythia*) G__getstructoffset())->setRndmEnginePtr((Pythia8::RndmEngine*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_1118_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((Pythia8::Pythia*) G__getstructoffset())->setUserHooksPtr((Pythia8::UserHooks*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_1118_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((Pythia8::Pythia*) G__getstructoffset())->setMergingHooksPtr((Pythia8::MergingHooks*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_1118_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((Pythia8::Pythia*) G__getstructoffset())->setBeamShapePtr((Pythia8::BeamShape*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_1118_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((Pythia8::Pythia*) G__getstructoffset())->setSigmaPtr((Pythia8::SigmaProcess*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_1118_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((Pythia8::Pythia*) G__getstructoffset())->setResonancePtr((Pythia8::ResonanceWidths*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_1118_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 3:
      G__letint(result7, 103, (long) ((Pythia8::Pythia*) G__getstructoffset())->setShowerPtr((Pythia8::TimeShower*) G__int(libp->para[0]), (Pythia8::TimeShower*) G__int(libp->para[1])
, (Pythia8::SpaceShower*) G__int(libp->para[2])));
      break;
   case 2:
      G__letint(result7, 103, (long) ((Pythia8::Pythia*) G__getstructoffset())->setShowerPtr((Pythia8::TimeShower*) G__int(libp->para[0]), (Pythia8::TimeShower*) G__int(libp->para[1])));
      break;
   case 1:
      G__letint(result7, 103, (long) ((Pythia8::Pythia*) G__getstructoffset())->setShowerPtr((Pythia8::TimeShower*) G__int(libp->para[0])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_1118_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((Pythia8::Pythia*) G__getstructoffset())->init());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_1118_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((Pythia8::Pythia*) G__getstructoffset())->next());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_1118_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 4:
      G__letint(result7, 105, (long) ((Pythia8::Pythia*) G__getstructoffset())->forceTimeShower((int) G__int(libp->para[0]), (int) G__int(libp->para[1])
, (double) G__double(libp->para[2]), (int) G__int(libp->para[3])));
      break;
   case 3:
      G__letint(result7, 105, (long) ((Pythia8::Pythia*) G__getstructoffset())->forceTimeShower((int) G__int(libp->para[0]), (int) G__int(libp->para[1])
, (double) G__double(libp->para[2])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_1118_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      G__letint(result7, 103, (long) ((Pythia8::Pythia*) G__getstructoffset())->forceHadronLevel((bool) G__int(libp->para[0])));
      break;
   case 0:
      G__letint(result7, 103, (long) ((Pythia8::Pythia*) G__getstructoffset())->forceHadronLevel());
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_1118_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((Pythia8::Pythia*) G__getstructoffset())->moreDecays());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_1118_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((Pythia8::Pythia*) G__getstructoffset())->forceRHadronDecays());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_1118_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      ((Pythia8::Pythia*) G__getstructoffset())->LHAeventList(*(ostream*) libp->para[0].ref);
      G__setnull(result7);
      break;
   case 0:
      ((Pythia8::Pythia*) G__getstructoffset())->LHAeventList();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_1118_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((Pythia8::Pythia*) G__getstructoffset())->LHAeventSkip((int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_1118_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Pythia8::Pythia*) G__getstructoffset())->stat();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_1118_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((Pythia8::Pythia*) G__getstructoffset())->flag(*((string*) G__int(libp->para[0]))));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_1118_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((Pythia8::Pythia*) G__getstructoffset())->mode(*((string*) G__int(libp->para[0]))));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_1118_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((Pythia8::Pythia*) G__getstructoffset())->parm(*((string*) G__int(libp->para[0]))));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_1118_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         string* pobj;
         string xobj = ((Pythia8::Pythia*) G__getstructoffset())->word(*((string*) G__int(libp->para[0])));
         pobj = new string(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_1118_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 3:
      G__letint(result7, 85, (long) ((Pythia8::Pythia*) G__getstructoffset())->getPDFPtr((int) G__int(libp->para[0]), (int) G__int(libp->para[1])
, *((string*) G__int(libp->para[2]))));
      break;
   case 2:
      G__letint(result7, 85, (long) ((Pythia8::Pythia*) G__getstructoffset())->getPDFPtr((int) G__int(libp->para[0]), (int) G__int(libp->para[1])));
      break;
   case 1:
      G__letint(result7, 85, (long) ((Pythia8::Pythia*) G__getstructoffset())->getPDFPtr((int) G__int(libp->para[0])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef Pythia8::Pythia G__TPythia8cLcLPythia;
static int G__main92Dct_1118_0_45(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (Pythia8::Pythia*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((Pythia8::Pythia*) (soff+(sizeof(Pythia8::Pythia)*i)))->~G__TPythia8cLcLPythia();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (Pythia8::Pythia*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((Pythia8::Pythia*) (soff))->~G__TPythia8cLcLPythia();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* vector<Pythia8::ResonanceWidths,allocator<Pythia8::ResonanceWidths> > */
static int G__main92Dct_1120_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<Pythia8::ResonanceWidths,allocator<Pythia8::ResonanceWidths> >::reference obj = ((vector<Pythia8::ResonanceWidths,allocator<Pythia8::ResonanceWidths> >*) G__getstructoffset())->at((vector<Pythia8::ResonanceWidths,allocator<Pythia8::ResonanceWidths> >::size_type) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_1120_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<Pythia8::ResonanceWidths,allocator<Pythia8::ResonanceWidths> >::const_reference obj = ((const vector<Pythia8::ResonanceWidths,allocator<Pythia8::ResonanceWidths> >*) G__getstructoffset())->at((vector<Pythia8::ResonanceWidths,allocator<Pythia8::ResonanceWidths> >::size_type) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_1120_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<Pythia8::ResonanceWidths,allocator<Pythia8::ResonanceWidths> >::iterator* pobj;
         vector<Pythia8::ResonanceWidths,allocator<Pythia8::ResonanceWidths> >::iterator xobj = ((vector<Pythia8::ResonanceWidths,allocator<Pythia8::ResonanceWidths> >*) G__getstructoffset())->begin();
         pobj = new vector<Pythia8::ResonanceWidths,allocator<Pythia8::ResonanceWidths> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_1120_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<Pythia8::ResonanceWidths,allocator<Pythia8::ResonanceWidths> >::iterator* pobj;
         vector<Pythia8::ResonanceWidths,allocator<Pythia8::ResonanceWidths> >::iterator xobj = ((vector<Pythia8::ResonanceWidths,allocator<Pythia8::ResonanceWidths> >*) G__getstructoffset())->end();
         pobj = new vector<Pythia8::ResonanceWidths,allocator<Pythia8::ResonanceWidths> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_1120_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<Pythia8::ResonanceWidths,allocator<Pythia8::ResonanceWidths> >::reverse_iterator* pobj;
         vector<Pythia8::ResonanceWidths,allocator<Pythia8::ResonanceWidths> >::reverse_iterator xobj = ((vector<Pythia8::ResonanceWidths,allocator<Pythia8::ResonanceWidths> >*) G__getstructoffset())->rbegin();
         pobj = new vector<Pythia8::ResonanceWidths,allocator<Pythia8::ResonanceWidths> >::reverse_iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_1120_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<Pythia8::ResonanceWidths,allocator<Pythia8::ResonanceWidths> >::reverse_iterator* pobj;
         vector<Pythia8::ResonanceWidths,allocator<Pythia8::ResonanceWidths> >::reverse_iterator xobj = ((vector<Pythia8::ResonanceWidths,allocator<Pythia8::ResonanceWidths> >*) G__getstructoffset())->rend();
         pobj = new vector<Pythia8::ResonanceWidths,allocator<Pythia8::ResonanceWidths> >::reverse_iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_1120_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 107, (long) ((const vector<Pythia8::ResonanceWidths,allocator<Pythia8::ResonanceWidths> >*) G__getstructoffset())->size());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_1120_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 107, (long) ((const vector<Pythia8::ResonanceWidths,allocator<Pythia8::ResonanceWidths> >*) G__getstructoffset())->max_size());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_1120_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<Pythia8::ResonanceWidths,allocator<Pythia8::ResonanceWidths> >*) G__getstructoffset())->resize((vector<Pythia8::ResonanceWidths,allocator<Pythia8::ResonanceWidths> >::size_type) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_1120_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<Pythia8::ResonanceWidths,allocator<Pythia8::ResonanceWidths> >*) G__getstructoffset())->resize((vector<Pythia8::ResonanceWidths,allocator<Pythia8::ResonanceWidths> >::size_type) G__int(libp->para[0]), *((Pythia8::ResonanceWidths*) G__int(libp->para[1])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_1120_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 107, (long) ((const vector<Pythia8::ResonanceWidths,allocator<Pythia8::ResonanceWidths> >*) G__getstructoffset())->capacity());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_1120_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const vector<Pythia8::ResonanceWidths,allocator<Pythia8::ResonanceWidths> >*) G__getstructoffset())->empty());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_1120_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<Pythia8::ResonanceWidths,allocator<Pythia8::ResonanceWidths> >::reference obj = ((vector<Pythia8::ResonanceWidths,allocator<Pythia8::ResonanceWidths> >*) G__getstructoffset())->operator[]((vector<Pythia8::ResonanceWidths,allocator<Pythia8::ResonanceWidths> >::size_type) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_1120_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<Pythia8::ResonanceWidths,allocator<Pythia8::ResonanceWidths> >::const_reference obj = ((const vector<Pythia8::ResonanceWidths,allocator<Pythia8::ResonanceWidths> >*) G__getstructoffset())->operator[]((vector<Pythia8::ResonanceWidths,allocator<Pythia8::ResonanceWidths> >::size_type) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_1120_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   vector<Pythia8::ResonanceWidths,allocator<Pythia8::ResonanceWidths> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new vector<Pythia8::ResonanceWidths,allocator<Pythia8::ResonanceWidths> >[n];
     } else {
       p = new((void*) gvp) vector<Pythia8::ResonanceWidths,allocator<Pythia8::ResonanceWidths> >[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new vector<Pythia8::ResonanceWidths,allocator<Pythia8::ResonanceWidths> >;
     } else {
       p = new((void*) gvp) vector<Pythia8::ResonanceWidths,allocator<Pythia8::ResonanceWidths> >;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__main92DctLN_vectorlEPythia8cLcLResonanceWidthscOallocatorlEPythia8cLcLResonanceWidthsgRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_1120_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   vector<Pythia8::ResonanceWidths,allocator<Pythia8::ResonanceWidths> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 2:
     //m: 2
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new vector<Pythia8::ResonanceWidths,allocator<Pythia8::ResonanceWidths> >((vector<Pythia8::ResonanceWidths,allocator<Pythia8::ResonanceWidths> >::size_type) G__int(libp->para[0]), *(Pythia8::ResonanceWidths*) libp->para[1].ref);
     } else {
       p = new((void*) gvp) vector<Pythia8::ResonanceWidths,allocator<Pythia8::ResonanceWidths> >((vector<Pythia8::ResonanceWidths,allocator<Pythia8::ResonanceWidths> >::size_type) G__int(libp->para[0]), *(Pythia8::ResonanceWidths*) libp->para[1].ref);
     }
     break;
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new vector<Pythia8::ResonanceWidths,allocator<Pythia8::ResonanceWidths> >((vector<Pythia8::ResonanceWidths,allocator<Pythia8::ResonanceWidths> >::size_type) G__int(libp->para[0]));
     } else {
       p = new((void*) gvp) vector<Pythia8::ResonanceWidths,allocator<Pythia8::ResonanceWidths> >((vector<Pythia8::ResonanceWidths,allocator<Pythia8::ResonanceWidths> >::size_type) G__int(libp->para[0]));
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__main92DctLN_vectorlEPythia8cLcLResonanceWidthscOallocatorlEPythia8cLcLResonanceWidthsgRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_1120_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   vector<Pythia8::ResonanceWidths,allocator<Pythia8::ResonanceWidths> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new vector<Pythia8::ResonanceWidths,allocator<Pythia8::ResonanceWidths> >(*(vector<Pythia8::ResonanceWidths,allocator<Pythia8::ResonanceWidths> >*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) vector<Pythia8::ResonanceWidths,allocator<Pythia8::ResonanceWidths> >(*(vector<Pythia8::ResonanceWidths,allocator<Pythia8::ResonanceWidths> >*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__main92DctLN_vectorlEPythia8cLcLResonanceWidthscOallocatorlEPythia8cLcLResonanceWidthsgRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_1120_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   vector<Pythia8::ResonanceWidths,allocator<Pythia8::ResonanceWidths> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 2
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new vector<Pythia8::ResonanceWidths,allocator<Pythia8::ResonanceWidths> >(*((vector<Pythia8::ResonanceWidths,allocator<Pythia8::ResonanceWidths> >::const_iterator*) G__int(libp->para[0])), *((vector<Pythia8::ResonanceWidths,allocator<Pythia8::ResonanceWidths> >::const_iterator*) G__int(libp->para[1])));
   } else {
     p = new((void*) gvp) vector<Pythia8::ResonanceWidths,allocator<Pythia8::ResonanceWidths> >(*((vector<Pythia8::ResonanceWidths,allocator<Pythia8::ResonanceWidths> >::const_iterator*) G__int(libp->para[0])), *((vector<Pythia8::ResonanceWidths,allocator<Pythia8::ResonanceWidths> >::const_iterator*) G__int(libp->para[1])));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__main92DctLN_vectorlEPythia8cLcLResonanceWidthscOallocatorlEPythia8cLcLResonanceWidthsgRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_1120_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<Pythia8::ResonanceWidths,allocator<Pythia8::ResonanceWidths> >& obj = ((vector<Pythia8::ResonanceWidths,allocator<Pythia8::ResonanceWidths> >*) G__getstructoffset())->operator=(*(vector<Pythia8::ResonanceWidths,allocator<Pythia8::ResonanceWidths> >*) libp->para[0].ref);
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_1120_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<Pythia8::ResonanceWidths,allocator<Pythia8::ResonanceWidths> >*) G__getstructoffset())->reserve((vector<Pythia8::ResonanceWidths,allocator<Pythia8::ResonanceWidths> >::size_type) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_1120_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const Pythia8::ResonanceWidths& obj = ((vector<Pythia8::ResonanceWidths,allocator<Pythia8::ResonanceWidths> >*) G__getstructoffset())->front();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_1120_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const Pythia8::ResonanceWidths& obj = ((vector<Pythia8::ResonanceWidths,allocator<Pythia8::ResonanceWidths> >*) G__getstructoffset())->back();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_1120_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<Pythia8::ResonanceWidths,allocator<Pythia8::ResonanceWidths> >*) G__getstructoffset())->push_back(*(Pythia8::ResonanceWidths*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_1120_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<Pythia8::ResonanceWidths,allocator<Pythia8::ResonanceWidths> >*) G__getstructoffset())->swap(*(vector<Pythia8::ResonanceWidths,allocator<Pythia8::ResonanceWidths> >*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_1120_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<Pythia8::ResonanceWidths,allocator<Pythia8::ResonanceWidths> >::iterator* pobj;
         vector<Pythia8::ResonanceWidths,allocator<Pythia8::ResonanceWidths> >::iterator xobj = ((vector<Pythia8::ResonanceWidths,allocator<Pythia8::ResonanceWidths> >*) G__getstructoffset())->insert(*((vector<Pythia8::ResonanceWidths,allocator<Pythia8::ResonanceWidths> >::iterator*) G__int(libp->para[0])), *(Pythia8::ResonanceWidths*) libp->para[1].ref);
         pobj = new vector<Pythia8::ResonanceWidths,allocator<Pythia8::ResonanceWidths> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_1120_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<Pythia8::ResonanceWidths,allocator<Pythia8::ResonanceWidths> >*) G__getstructoffset())->insert(*((vector<Pythia8::ResonanceWidths,allocator<Pythia8::ResonanceWidths> >::iterator*) G__int(libp->para[0])), *((vector<Pythia8::ResonanceWidths,allocator<Pythia8::ResonanceWidths> >::const_iterator*) G__int(libp->para[1]))
, *((vector<Pythia8::ResonanceWidths,allocator<Pythia8::ResonanceWidths> >::const_iterator*) G__int(libp->para[2])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_1120_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<Pythia8::ResonanceWidths,allocator<Pythia8::ResonanceWidths> >*) G__getstructoffset())->insert(*((vector<Pythia8::ResonanceWidths,allocator<Pythia8::ResonanceWidths> >::iterator*) G__int(libp->para[0])), (vector<Pythia8::ResonanceWidths,allocator<Pythia8::ResonanceWidths> >::size_type) G__int(libp->para[1])
, *(Pythia8::ResonanceWidths*) libp->para[2].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_1120_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<Pythia8::ResonanceWidths,allocator<Pythia8::ResonanceWidths> >*) G__getstructoffset())->pop_back();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_1120_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<Pythia8::ResonanceWidths,allocator<Pythia8::ResonanceWidths> >*) G__getstructoffset())->erase(*((vector<Pythia8::ResonanceWidths,allocator<Pythia8::ResonanceWidths> >::iterator*) G__int(libp->para[0])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_1120_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<Pythia8::ResonanceWidths,allocator<Pythia8::ResonanceWidths> >*) G__getstructoffset())->erase(*((vector<Pythia8::ResonanceWidths,allocator<Pythia8::ResonanceWidths> >::iterator*) G__int(libp->para[0])), *((vector<Pythia8::ResonanceWidths,allocator<Pythia8::ResonanceWidths> >::iterator*) G__int(libp->para[1])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__main92Dct_1120_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<Pythia8::ResonanceWidths,allocator<Pythia8::ResonanceWidths> >*) G__getstructoffset())->clear();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef vector<Pythia8::ResonanceWidths,allocator<Pythia8::ResonanceWidths> > G__TvectorlEPythia8cLcLResonanceWidthscOallocatorlEPythia8cLcLResonanceWidthsgRsPgR;
static int G__main92Dct_1120_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (vector<Pythia8::ResonanceWidths,allocator<Pythia8::ResonanceWidths> >*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((vector<Pythia8::ResonanceWidths,allocator<Pythia8::ResonanceWidths> >*) (soff+(sizeof(vector<Pythia8::ResonanceWidths,allocator<Pythia8::ResonanceWidths> >)*i)))->~G__TvectorlEPythia8cLcLResonanceWidthscOallocatorlEPythia8cLcLResonanceWidthsgRsPgR();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (vector<Pythia8::ResonanceWidths,allocator<Pythia8::ResonanceWidths> >*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((vector<Pythia8::ResonanceWidths,allocator<Pythia8::ResonanceWidths> >*) (soff))->~G__TvectorlEPythia8cLcLResonanceWidthscOallocatorlEPythia8cLcLResonanceWidthsgRsPgR();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* Setting up global function */

/*********************************************************
* Member function Stub
*********************************************************/

/* Pythia8 */

/* Pythia8::RndmEngine */

/* Pythia8::Rndm */

/* Pythia8::Vec4 */

/* Pythia8::Info */

/* Pythia8::Settings */

/* Pythia8::AlphaStrong */

/* Pythia8::AlphaEM */

/* Pythia8::CoupSM */

/* Pythia8::Couplings */

/* Pythia8::ParticleData */

/* Pythia8::ResonanceWidths */

/* Pythia8::DecayChannel */

/* Pythia8::ParticleDataEntry */

/* pair<int,Pythia8::ParticleDataEntry> */

/* Pythia8::Event */

/* Pythia8::Particle */

/* Pythia8::Junction */

/* Pythia8::ResonanceGeneric */

/* Pythia8::ResonanceGmZ */

/* Pythia8::ResonanceW */

/* Pythia8::ResonanceTop */

/* Pythia8::ResonanceFour */

/* Pythia8::ResonanceH */

/* Pythia8::ResonanceHchg */

/* Pythia8::ResonanceZprime */

/* Pythia8::ResonanceWprime */

/* Pythia8::ResonanceRhorizontal */

/* Pythia8::ResonanceExcited */

/* Pythia8::ResonanceGraviton */

/* Pythia8::ResonanceLeptoquark */

/* Pythia8::ResonanceNuRight */

/* Pythia8::ResonanceZRight */

/* Pythia8::ResonanceWRight */

/* Pythia8::ResonanceHchgchgLeft */

/* Pythia8::ResonanceHchgchgRight */

/* Pythia8::InBeam */

/* Pythia8::InPair */

/* Pythia8::SigmaProcess */

/* Pythia8::Pythia */

/* vector<Pythia8::ResonanceWidths,allocator<Pythia8::ResonanceWidths> > */

/*********************************************************
* Global function Stub
*********************************************************/

/*********************************************************
* Get size of pointer to member function
*********************************************************/
class G__Sizep2memfuncmain92Dct {
 public:
  G__Sizep2memfuncmain92Dct(): p(&G__Sizep2memfuncmain92Dct::sizep2memfunc) {}
    size_t sizep2memfunc() { return(sizeof(p)); }
  private:
    size_t (G__Sizep2memfuncmain92Dct::*p)();
};

size_t G__get_sizep2memfuncmain92Dct()
{
  G__Sizep2memfuncmain92Dct a;
  G__setsizep2memfunc((int)a.sizep2memfunc());
  return((size_t)a.sizep2memfunc());
}


/*********************************************************
* virtual base class offset calculation interface
*********************************************************/

   /* Setting up class inheritance */

/*********************************************************
* Inheritance information setup/
*********************************************************/
extern "C" void G__cpp_setup_inheritancemain92Dct() {

   /* Setting up class inheritance */
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__main92DctLN_Pythia8cLcLCouplings))) {
     Pythia8::Couplings *G__Lderived;
     G__Lderived=(Pythia8::Couplings*)0x1000;
     {
       Pythia8::CoupSM *G__Lpbase=(Pythia8::CoupSM*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__main92DctLN_Pythia8cLcLCouplings),G__get_linked_tagnum(&G__main92DctLN_Pythia8cLcLCoupSM),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__main92DctLN_Pythia8cLcLResonanceGeneric))) {
     Pythia8::ResonanceGeneric *G__Lderived;
     G__Lderived=(Pythia8::ResonanceGeneric*)0x1000;
     {
       Pythia8::ResonanceWidths *G__Lpbase=(Pythia8::ResonanceWidths*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__main92DctLN_Pythia8cLcLResonanceGeneric),G__get_linked_tagnum(&G__main92DctLN_Pythia8cLcLResonanceWidths),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__main92DctLN_Pythia8cLcLResonanceGmZ))) {
     Pythia8::ResonanceGmZ *G__Lderived;
     G__Lderived=(Pythia8::ResonanceGmZ*)0x1000;
     {
       Pythia8::ResonanceWidths *G__Lpbase=(Pythia8::ResonanceWidths*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__main92DctLN_Pythia8cLcLResonanceGmZ),G__get_linked_tagnum(&G__main92DctLN_Pythia8cLcLResonanceWidths),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__main92DctLN_Pythia8cLcLResonanceW))) {
     Pythia8::ResonanceW *G__Lderived;
     G__Lderived=(Pythia8::ResonanceW*)0x1000;
     {
       Pythia8::ResonanceWidths *G__Lpbase=(Pythia8::ResonanceWidths*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__main92DctLN_Pythia8cLcLResonanceW),G__get_linked_tagnum(&G__main92DctLN_Pythia8cLcLResonanceWidths),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__main92DctLN_Pythia8cLcLResonanceTop))) {
     Pythia8::ResonanceTop *G__Lderived;
     G__Lderived=(Pythia8::ResonanceTop*)0x1000;
     {
       Pythia8::ResonanceWidths *G__Lpbase=(Pythia8::ResonanceWidths*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__main92DctLN_Pythia8cLcLResonanceTop),G__get_linked_tagnum(&G__main92DctLN_Pythia8cLcLResonanceWidths),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__main92DctLN_Pythia8cLcLResonanceFour))) {
     Pythia8::ResonanceFour *G__Lderived;
     G__Lderived=(Pythia8::ResonanceFour*)0x1000;
     {
       Pythia8::ResonanceWidths *G__Lpbase=(Pythia8::ResonanceWidths*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__main92DctLN_Pythia8cLcLResonanceFour),G__get_linked_tagnum(&G__main92DctLN_Pythia8cLcLResonanceWidths),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__main92DctLN_Pythia8cLcLResonanceH))) {
     Pythia8::ResonanceH *G__Lderived;
     G__Lderived=(Pythia8::ResonanceH*)0x1000;
     {
       Pythia8::ResonanceWidths *G__Lpbase=(Pythia8::ResonanceWidths*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__main92DctLN_Pythia8cLcLResonanceH),G__get_linked_tagnum(&G__main92DctLN_Pythia8cLcLResonanceWidths),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__main92DctLN_Pythia8cLcLResonanceHchg))) {
     Pythia8::ResonanceHchg *G__Lderived;
     G__Lderived=(Pythia8::ResonanceHchg*)0x1000;
     {
       Pythia8::ResonanceWidths *G__Lpbase=(Pythia8::ResonanceWidths*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__main92DctLN_Pythia8cLcLResonanceHchg),G__get_linked_tagnum(&G__main92DctLN_Pythia8cLcLResonanceWidths),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__main92DctLN_Pythia8cLcLResonanceZprime))) {
     Pythia8::ResonanceZprime *G__Lderived;
     G__Lderived=(Pythia8::ResonanceZprime*)0x1000;
     {
       Pythia8::ResonanceWidths *G__Lpbase=(Pythia8::ResonanceWidths*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__main92DctLN_Pythia8cLcLResonanceZprime),G__get_linked_tagnum(&G__main92DctLN_Pythia8cLcLResonanceWidths),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__main92DctLN_Pythia8cLcLResonanceWprime))) {
     Pythia8::ResonanceWprime *G__Lderived;
     G__Lderived=(Pythia8::ResonanceWprime*)0x1000;
     {
       Pythia8::ResonanceWidths *G__Lpbase=(Pythia8::ResonanceWidths*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__main92DctLN_Pythia8cLcLResonanceWprime),G__get_linked_tagnum(&G__main92DctLN_Pythia8cLcLResonanceWidths),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__main92DctLN_Pythia8cLcLResonanceRhorizontal))) {
     Pythia8::ResonanceRhorizontal *G__Lderived;
     G__Lderived=(Pythia8::ResonanceRhorizontal*)0x1000;
     {
       Pythia8::ResonanceWidths *G__Lpbase=(Pythia8::ResonanceWidths*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__main92DctLN_Pythia8cLcLResonanceRhorizontal),G__get_linked_tagnum(&G__main92DctLN_Pythia8cLcLResonanceWidths),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__main92DctLN_Pythia8cLcLResonanceExcited))) {
     Pythia8::ResonanceExcited *G__Lderived;
     G__Lderived=(Pythia8::ResonanceExcited*)0x1000;
     {
       Pythia8::ResonanceWidths *G__Lpbase=(Pythia8::ResonanceWidths*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__main92DctLN_Pythia8cLcLResonanceExcited),G__get_linked_tagnum(&G__main92DctLN_Pythia8cLcLResonanceWidths),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__main92DctLN_Pythia8cLcLResonanceGraviton))) {
     Pythia8::ResonanceGraviton *G__Lderived;
     G__Lderived=(Pythia8::ResonanceGraviton*)0x1000;
     {
       Pythia8::ResonanceWidths *G__Lpbase=(Pythia8::ResonanceWidths*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__main92DctLN_Pythia8cLcLResonanceGraviton),G__get_linked_tagnum(&G__main92DctLN_Pythia8cLcLResonanceWidths),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__main92DctLN_Pythia8cLcLResonanceLeptoquark))) {
     Pythia8::ResonanceLeptoquark *G__Lderived;
     G__Lderived=(Pythia8::ResonanceLeptoquark*)0x1000;
     {
       Pythia8::ResonanceWidths *G__Lpbase=(Pythia8::ResonanceWidths*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__main92DctLN_Pythia8cLcLResonanceLeptoquark),G__get_linked_tagnum(&G__main92DctLN_Pythia8cLcLResonanceWidths),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__main92DctLN_Pythia8cLcLResonanceNuRight))) {
     Pythia8::ResonanceNuRight *G__Lderived;
     G__Lderived=(Pythia8::ResonanceNuRight*)0x1000;
     {
       Pythia8::ResonanceWidths *G__Lpbase=(Pythia8::ResonanceWidths*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__main92DctLN_Pythia8cLcLResonanceNuRight),G__get_linked_tagnum(&G__main92DctLN_Pythia8cLcLResonanceWidths),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__main92DctLN_Pythia8cLcLResonanceZRight))) {
     Pythia8::ResonanceZRight *G__Lderived;
     G__Lderived=(Pythia8::ResonanceZRight*)0x1000;
     {
       Pythia8::ResonanceWidths *G__Lpbase=(Pythia8::ResonanceWidths*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__main92DctLN_Pythia8cLcLResonanceZRight),G__get_linked_tagnum(&G__main92DctLN_Pythia8cLcLResonanceWidths),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__main92DctLN_Pythia8cLcLResonanceWRight))) {
     Pythia8::ResonanceWRight *G__Lderived;
     G__Lderived=(Pythia8::ResonanceWRight*)0x1000;
     {
       Pythia8::ResonanceWidths *G__Lpbase=(Pythia8::ResonanceWidths*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__main92DctLN_Pythia8cLcLResonanceWRight),G__get_linked_tagnum(&G__main92DctLN_Pythia8cLcLResonanceWidths),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__main92DctLN_Pythia8cLcLResonanceHchgchgLeft))) {
     Pythia8::ResonanceHchgchgLeft *G__Lderived;
     G__Lderived=(Pythia8::ResonanceHchgchgLeft*)0x1000;
     {
       Pythia8::ResonanceWidths *G__Lpbase=(Pythia8::ResonanceWidths*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__main92DctLN_Pythia8cLcLResonanceHchgchgLeft),G__get_linked_tagnum(&G__main92DctLN_Pythia8cLcLResonanceWidths),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__main92DctLN_Pythia8cLcLResonanceHchgchgRight))) {
     Pythia8::ResonanceHchgchgRight *G__Lderived;
     G__Lderived=(Pythia8::ResonanceHchgchgRight*)0x1000;
     {
       Pythia8::ResonanceWidths *G__Lpbase=(Pythia8::ResonanceWidths*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__main92DctLN_Pythia8cLcLResonanceHchgchgRight),G__get_linked_tagnum(&G__main92DctLN_Pythia8cLcLResonanceWidths),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
}

/*********************************************************
* typedef information setup/
*********************************************************/
extern "C" void G__cpp_setup_typetablemain92Dct() {

   /* Setting up typedef entry */
   G__search_typename2("vector<ROOT::TSchemaHelper>",117,G__get_linked_tagnum(&G__main92DctLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__main92DctLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__main92DctLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__main92DctLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__main92DctLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<TVirtualArray*>",117,G__get_linked_tagnum(&G__main92DctLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__main92DctLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__main92DctLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__main92DctLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__main92DctLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<std::string,std::string>",117,G__get_linked_tagnum(&G__main92DctLN_maplEstringcOstringcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOstringgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,std::string>",117,G__get_linked_tagnum(&G__main92DctLN_maplEstringcOstringcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOstringgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,string>",117,G__get_linked_tagnum(&G__main92DctLN_maplEstringcOstringcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOstringgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,string,less<string> >",117,G__get_linked_tagnum(&G__main92DctLN_maplEstringcOstringcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOstringgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<XMLTag*>",117,G__get_linked_tagnum(&G__main92DctLN_vectorlEPythia8cLcLXMLTagmUcOallocatorlEPythia8cLcLXMLTagmUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__main92DctLN_reverse_iteratorlEvectorlEPythia8cLcLXMLTagmUcOallocatorlEPythia8cLcLXMLTagmUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__main92DctLN_vectorlEPythia8cLcLXMLTagmUcOallocatorlEPythia8cLcLXMLTagmUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__main92DctLN_reverse_iteratorlEvectorlEPythia8cLcLXMLTagmUcOallocatorlEPythia8cLcLXMLTagmUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__main92DctLN_vectorlEPythia8cLcLXMLTagmUcOallocatorlEPythia8cLcLXMLTagmUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<Pythia8::XMLTag*>",117,G__get_linked_tagnum(&G__main92DctLN_vectorlEPythia8cLcLXMLTagmUcOallocatorlEPythia8cLcLXMLTagmUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,LHAweight>",117,G__get_linked_tagnum(&G__main92DctLN_maplEstringcOPythia8cLcLLHAweightcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOPythia8cLcLLHAweightgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,Pythia8::LHAweight>",117,G__get_linked_tagnum(&G__main92DctLN_maplEstringcOPythia8cLcLLHAweightcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOPythia8cLcLLHAweightgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,Pythia8::LHAweight,less<string> >",117,G__get_linked_tagnum(&G__main92DctLN_maplEstringcOPythia8cLcLLHAweightcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOPythia8cLcLLHAweightgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,LHAwgt>",117,G__get_linked_tagnum(&G__main92DctLN_maplEstringcOPythia8cLcLLHAwgtcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOPythia8cLcLLHAwgtgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,Pythia8::LHAwgt>",117,G__get_linked_tagnum(&G__main92DctLN_maplEstringcOPythia8cLcLLHAwgtcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOPythia8cLcLLHAwgtgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,Pythia8::LHAwgt,less<string> >",117,G__get_linked_tagnum(&G__main92DctLN_maplEstringcOPythia8cLcLLHAwgtcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOPythia8cLcLLHAwgtgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,LHAweightgroup>",117,G__get_linked_tagnum(&G__main92DctLN_maplEstringcOPythia8cLcLLHAweightgroupcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOPythia8cLcLLHAweightgroupgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,Pythia8::LHAweightgroup>",117,G__get_linked_tagnum(&G__main92DctLN_maplEstringcOPythia8cLcLLHAweightgroupcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOPythia8cLcLLHAweightgroupgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,Pythia8::LHAweightgroup,less<string> >",117,G__get_linked_tagnum(&G__main92DctLN_maplEstringcOPythia8cLcLLHAweightgroupcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOPythia8cLcLLHAweightgroupgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<int>",117,G__get_linked_tagnum(&G__main92DctLN_vectorlEintcOallocatorlEintgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__main92DctLN_reverse_iteratorlEvectorlEintcOallocatorlEintgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__main92DctLN_vectorlEintcOallocatorlEintgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__main92DctLN_reverse_iteratorlEvectorlEintcOallocatorlEintgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__main92DctLN_vectorlEintcOallocatorlEintgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<LHAgenerator>",117,G__get_linked_tagnum(&G__main92DctLN_vectorlEPythia8cLcLLHAgeneratorcOallocatorlEPythia8cLcLLHAgeneratorgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__main92DctLN_reverse_iteratorlEvectorlEPythia8cLcLLHAgeneratorcOallocatorlEPythia8cLcLLHAgeneratorgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__main92DctLN_vectorlEPythia8cLcLLHAgeneratorcOallocatorlEPythia8cLcLLHAgeneratorgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__main92DctLN_reverse_iteratorlEvectorlEPythia8cLcLLHAgeneratorcOallocatorlEPythia8cLcLLHAgeneratorgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__main92DctLN_vectorlEPythia8cLcLLHAgeneratorcOallocatorlEPythia8cLcLLHAgeneratorgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<Pythia8::LHAgenerator>",117,G__get_linked_tagnum(&G__main92DctLN_vectorlEPythia8cLcLLHAgeneratorcOallocatorlEPythia8cLcLLHAgeneratorgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<pair<int,int> >",117,G__get_linked_tagnum(&G__main92DctLN_vectorlEpairlEintcOintgRcOallocatorlEpairlEintcOintgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__main92DctLN_reverse_iteratorlEvectorlEpairlEintcOintgRcOallocatorlEpairlEintcOintgRsPgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__main92DctLN_vectorlEpairlEintcOintgRcOallocatorlEpairlEintcOintgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__main92DctLN_reverse_iteratorlEvectorlEpairlEintcOintgRcOallocatorlEpairlEintcOintgRsPgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__main92DctLN_vectorlEpairlEintcOintgRcOallocatorlEpairlEintcOintgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<vector<double> >",117,G__get_linked_tagnum(&G__main92DctLN_vectorlEvectorlEdoublecOallocatorlEdoublegRsPgRcOallocatorlEvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__main92DctLN_reverse_iteratorlEvectorlEvectorlEdoublecOallocatorlEdoublegRsPgRcOallocatorlEvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__main92DctLN_vectorlEvectorlEdoublecOallocatorlEdoublegRsPgRcOallocatorlEvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__main92DctLN_reverse_iteratorlEvectorlEvectorlEdoublecOallocatorlEdoublegRsPgRcOallocatorlEvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__main92DctLN_vectorlEvectorlEdoublecOallocatorlEdoublegRsPgRcOallocatorlEvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<vector<double,allocator<double> > >",117,G__get_linked_tagnum(&G__main92DctLN_vectorlEvectorlEdoublecOallocatorlEdoublegRsPgRcOallocatorlEvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<string>",117,G__get_linked_tagnum(&G__main92DctLN_vectorlEstringcOallocatorlEstringgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__main92DctLN_reverse_iteratorlEvectorlEstringcOallocatorlEstringgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__main92DctLN_vectorlEstringcOallocatorlEstringgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__main92DctLN_reverse_iteratorlEvectorlEstringcOallocatorlEstringgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__main92DctLN_vectorlEstringcOallocatorlEstringgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<int,string>",117,G__get_linked_tagnum(&G__main92DctLN_maplEintcOstringcOlesslEintgRcOallocatorlEpairlEconstsPintcOstringgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<int,string,less<int> >",117,G__get_linked_tagnum(&G__main92DctLN_maplEintcOstringcOlesslEintgRcOallocatorlEpairlEconstsPintcOstringgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<int,long>",117,G__get_linked_tagnum(&G__main92DctLN_maplEintcOlongcOlesslEintgRcOallocatorlEpairlEconstsPintcOlonggRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<int,long,less<int> >",117,G__get_linked_tagnum(&G__main92DctLN_maplEintcOlongcOlesslEintgRcOallocatorlEpairlEconstsPintcOlonggRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<int,double>",117,G__get_linked_tagnum(&G__main92DctLN_maplEintcOdoublecOlesslEintgRcOallocatorlEpairlEconstsPintcOdoublegRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<int,double,less<int> >",117,G__get_linked_tagnum(&G__main92DctLN_maplEintcOdoublecOlesslEintgRcOallocatorlEpairlEconstsPintcOdoublegRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,pair<void*,int> >",117,G__get_linked_tagnum(&G__main92DctLN_maplEstringcOpairlEvoidmUcOintgRcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOpairlEvoidmUcOintgRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,pair<void*,int>,less<string> >",117,G__get_linked_tagnum(&G__main92DctLN_maplEstringcOpairlEvoidmUcOintgRcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOpairlEvoidmUcOintgRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,Flag>",117,G__get_linked_tagnum(&G__main92DctLN_maplEstringcOPythia8cLcLFlagcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOPythia8cLcLFlaggRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,Pythia8::Flag>",117,G__get_linked_tagnum(&G__main92DctLN_maplEstringcOPythia8cLcLFlagcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOPythia8cLcLFlaggRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,Pythia8::Flag,less<string> >",117,G__get_linked_tagnum(&G__main92DctLN_maplEstringcOPythia8cLcLFlagcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOPythia8cLcLFlaggRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,Mode>",117,G__get_linked_tagnum(&G__main92DctLN_maplEstringcOPythia8cLcLModecOlesslEstringgRcOallocatorlEpairlEconstsPstringcOPythia8cLcLModegRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,Pythia8::Mode>",117,G__get_linked_tagnum(&G__main92DctLN_maplEstringcOPythia8cLcLModecOlesslEstringgRcOallocatorlEpairlEconstsPstringcOPythia8cLcLModegRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,Pythia8::Mode,less<string> >",117,G__get_linked_tagnum(&G__main92DctLN_maplEstringcOPythia8cLcLModecOlesslEstringgRcOallocatorlEpairlEconstsPstringcOPythia8cLcLModegRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,Parm>",117,G__get_linked_tagnum(&G__main92DctLN_maplEstringcOPythia8cLcLParmcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOPythia8cLcLParmgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,Pythia8::Parm>",117,G__get_linked_tagnum(&G__main92DctLN_maplEstringcOPythia8cLcLParmcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOPythia8cLcLParmgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,Pythia8::Parm,less<string> >",117,G__get_linked_tagnum(&G__main92DctLN_maplEstringcOPythia8cLcLParmcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOPythia8cLcLParmgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,Word>",117,G__get_linked_tagnum(&G__main92DctLN_maplEstringcOPythia8cLcLWordcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOPythia8cLcLWordgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,Pythia8::Word>",117,G__get_linked_tagnum(&G__main92DctLN_maplEstringcOPythia8cLcLWordcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOPythia8cLcLWordgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,Pythia8::Word,less<string> >",117,G__get_linked_tagnum(&G__main92DctLN_maplEstringcOPythia8cLcLWordcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOPythia8cLcLWordgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,FVec>",117,G__get_linked_tagnum(&G__main92DctLN_maplEstringcOPythia8cLcLFVeccOlesslEstringgRcOallocatorlEpairlEconstsPstringcOPythia8cLcLFVecgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,Pythia8::FVec>",117,G__get_linked_tagnum(&G__main92DctLN_maplEstringcOPythia8cLcLFVeccOlesslEstringgRcOallocatorlEpairlEconstsPstringcOPythia8cLcLFVecgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,Pythia8::FVec,less<string> >",117,G__get_linked_tagnum(&G__main92DctLN_maplEstringcOPythia8cLcLFVeccOlesslEstringgRcOallocatorlEpairlEconstsPstringcOPythia8cLcLFVecgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,MVec>",117,G__get_linked_tagnum(&G__main92DctLN_maplEstringcOPythia8cLcLMVeccOlesslEstringgRcOallocatorlEpairlEconstsPstringcOPythia8cLcLMVecgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,Pythia8::MVec>",117,G__get_linked_tagnum(&G__main92DctLN_maplEstringcOPythia8cLcLMVeccOlesslEstringgRcOallocatorlEpairlEconstsPstringcOPythia8cLcLMVecgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,Pythia8::MVec,less<string> >",117,G__get_linked_tagnum(&G__main92DctLN_maplEstringcOPythia8cLcLMVeccOlesslEstringgRcOallocatorlEpairlEconstsPstringcOPythia8cLcLMVecgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,PVec>",117,G__get_linked_tagnum(&G__main92DctLN_maplEstringcOPythia8cLcLPVeccOlesslEstringgRcOallocatorlEpairlEconstsPstringcOPythia8cLcLPVecgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,Pythia8::PVec>",117,G__get_linked_tagnum(&G__main92DctLN_maplEstringcOPythia8cLcLPVeccOlesslEstringgRcOallocatorlEpairlEconstsPstringcOPythia8cLcLPVecgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,Pythia8::PVec,less<string> >",117,G__get_linked_tagnum(&G__main92DctLN_maplEstringcOPythia8cLcLPVeccOlesslEstringgRcOallocatorlEpairlEconstsPstringcOPythia8cLcLPVecgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<DecayChannel>",117,G__get_linked_tagnum(&G__main92DctLN_vectorlEPythia8cLcLDecayChannelcOallocatorlEPythia8cLcLDecayChannelgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__main92DctLN_reverse_iteratorlEvectorlEPythia8cLcLDecayChannelcOallocatorlEPythia8cLcLDecayChannelgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__main92DctLN_vectorlEPythia8cLcLDecayChannelcOallocatorlEPythia8cLcLDecayChannelgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__main92DctLN_reverse_iteratorlEvectorlEPythia8cLcLDecayChannelcOallocatorlEPythia8cLcLDecayChannelgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__main92DctLN_vectorlEPythia8cLcLDecayChannelcOallocatorlEPythia8cLcLDecayChannelgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<Pythia8::DecayChannel>",117,G__get_linked_tagnum(&G__main92DctLN_vectorlEPythia8cLcLDecayChannelcOallocatorlEPythia8cLcLDecayChannelgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<ResonanceWidths*>",117,G__get_linked_tagnum(&G__main92DctLN_vectorlEPythia8cLcLResonanceWidthsmUcOallocatorlEPythia8cLcLResonanceWidthsmUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__main92DctLN_reverse_iteratorlEvectorlEPythia8cLcLResonanceWidthsmUcOallocatorlEPythia8cLcLResonanceWidthsmUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__main92DctLN_vectorlEPythia8cLcLResonanceWidthsmUcOallocatorlEPythia8cLcLResonanceWidthsmUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__main92DctLN_reverse_iteratorlEvectorlEPythia8cLcLResonanceWidthsmUcOallocatorlEPythia8cLcLResonanceWidthsmUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__main92DctLN_vectorlEPythia8cLcLResonanceWidthsmUcOallocatorlEPythia8cLcLResonanceWidthsmUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<Pythia8::ResonanceWidths*>",117,G__get_linked_tagnum(&G__main92DctLN_vectorlEPythia8cLcLResonanceWidthsmUcOallocatorlEPythia8cLcLResonanceWidthsmUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<int,ParticleDataEntry>",117,G__get_linked_tagnum(&G__main92DctLN_maplEintcOPythia8cLcLParticleDataEntrycOlesslEintgRcOallocatorlEpairlEconstsPintcOPythia8cLcLParticleDataEntrygRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<int,Pythia8::ParticleDataEntry>",117,G__get_linked_tagnum(&G__main92DctLN_maplEintcOPythia8cLcLParticleDataEntrycOlesslEintgRcOallocatorlEpairlEconstsPintcOPythia8cLcLParticleDataEntrygRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<int,Pythia8::ParticleDataEntry,less<int> >",117,G__get_linked_tagnum(&G__main92DctLN_maplEintcOPythia8cLcLParticleDataEntrycOlesslEintgRcOallocatorlEpairlEconstsPintcOPythia8cLcLParticleDataEntrygRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<Pythia8::Particle>",117,G__get_linked_tagnum(&G__main92DctLN_vectorlEPythia8cLcLParticlecOallocatorlEPythia8cLcLParticlegRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__main92DctLN_reverse_iteratorlEvectorlEPythia8cLcLParticlecOallocatorlEPythia8cLcLParticlegRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__main92DctLN_vectorlEPythia8cLcLParticlecOallocatorlEPythia8cLcLParticlegRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__main92DctLN_reverse_iteratorlEvectorlEPythia8cLcLParticlecOallocatorlEPythia8cLcLParticlegRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__main92DctLN_vectorlEPythia8cLcLParticlecOallocatorlEPythia8cLcLParticlegRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<Pythia8::Junction>",117,G__get_linked_tagnum(&G__main92DctLN_vectorlEPythia8cLcLJunctioncOallocatorlEPythia8cLcLJunctiongRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__main92DctLN_reverse_iteratorlEvectorlEPythia8cLcLJunctioncOallocatorlEPythia8cLcLJunctiongRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__main92DctLN_vectorlEPythia8cLcLJunctioncOallocatorlEPythia8cLcLJunctiongRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__main92DctLN_reverse_iteratorlEvectorlEPythia8cLcLJunctioncOallocatorlEPythia8cLcLJunctiongRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__main92DctLN_vectorlEPythia8cLcLJunctioncOallocatorlEPythia8cLcLJunctiongRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<SingleClusterJet>",117,G__get_linked_tagnum(&G__main92DctLN_vectorlEPythia8cLcLSingleClusterJetcOallocatorlEPythia8cLcLSingleClusterJetgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__main92DctLN_reverse_iteratorlEvectorlEPythia8cLcLSingleClusterJetcOallocatorlEPythia8cLcLSingleClusterJetgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__main92DctLN_vectorlEPythia8cLcLSingleClusterJetcOallocatorlEPythia8cLcLSingleClusterJetgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__main92DctLN_reverse_iteratorlEvectorlEPythia8cLcLSingleClusterJetcOallocatorlEPythia8cLcLSingleClusterJetgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__main92DctLN_vectorlEPythia8cLcLSingleClusterJetcOallocatorlEPythia8cLcLSingleClusterJetgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<Pythia8::SingleClusterJet>",117,G__get_linked_tagnum(&G__main92DctLN_vectorlEPythia8cLcLSingleClusterJetcOallocatorlEPythia8cLcLSingleClusterJetgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<SingleCellJet>",117,G__get_linked_tagnum(&G__main92DctLN_vectorlEPythia8cLcLSingleCellJetcOallocatorlEPythia8cLcLSingleCellJetgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__main92DctLN_reverse_iteratorlEvectorlEPythia8cLcLSingleCellJetcOallocatorlEPythia8cLcLSingleCellJetgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__main92DctLN_vectorlEPythia8cLcLSingleCellJetcOallocatorlEPythia8cLcLSingleCellJetgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__main92DctLN_reverse_iteratorlEvectorlEPythia8cLcLSingleCellJetcOallocatorlEPythia8cLcLSingleCellJetgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__main92DctLN_vectorlEPythia8cLcLSingleCellJetcOallocatorlEPythia8cLcLSingleCellJetgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<Pythia8::SingleCellJet>",117,G__get_linked_tagnum(&G__main92DctLN_vectorlEPythia8cLcLSingleCellJetcOallocatorlEPythia8cLcLSingleCellJetgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<SingleSlowJet>",117,G__get_linked_tagnum(&G__main92DctLN_vectorlEPythia8cLcLSingleSlowJetcOallocatorlEPythia8cLcLSingleSlowJetgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__main92DctLN_reverse_iteratorlEvectorlEPythia8cLcLSingleSlowJetcOallocatorlEPythia8cLcLSingleSlowJetgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__main92DctLN_vectorlEPythia8cLcLSingleSlowJetcOallocatorlEPythia8cLcLSingleSlowJetgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__main92DctLN_reverse_iteratorlEvectorlEPythia8cLcLSingleSlowJetcOallocatorlEPythia8cLcLSingleSlowJetgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__main92DctLN_vectorlEPythia8cLcLSingleSlowJetcOallocatorlEPythia8cLcLSingleSlowJetgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<Pythia8::SingleSlowJet>",117,G__get_linked_tagnum(&G__main92DctLN_vectorlEPythia8cLcLSingleSlowJetcOallocatorlEPythia8cLcLSingleSlowJetgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<ResolvedParton>",117,G__get_linked_tagnum(&G__main92DctLN_vectorlEPythia8cLcLResolvedPartoncOallocatorlEPythia8cLcLResolvedPartongRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__main92DctLN_reverse_iteratorlEvectorlEPythia8cLcLResolvedPartoncOallocatorlEPythia8cLcLResolvedPartongRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__main92DctLN_vectorlEPythia8cLcLResolvedPartoncOallocatorlEPythia8cLcLResolvedPartongRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__main92DctLN_reverse_iteratorlEvectorlEPythia8cLcLResolvedPartoncOallocatorlEPythia8cLcLResolvedPartongRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__main92DctLN_vectorlEPythia8cLcLResolvedPartoncOallocatorlEPythia8cLcLResolvedPartongRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<Pythia8::ResolvedParton>",117,G__get_linked_tagnum(&G__main92DctLN_vectorlEPythia8cLcLResolvedPartoncOallocatorlEPythia8cLcLResolvedPartongRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<BoseEinsteinHadron>",117,G__get_linked_tagnum(&G__main92DctLN_vectorlEPythia8cLcLBoseEinsteinHadroncOallocatorlEPythia8cLcLBoseEinsteinHadrongRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__main92DctLN_reverse_iteratorlEvectorlEPythia8cLcLBoseEinsteinHadroncOallocatorlEPythia8cLcLBoseEinsteinHadrongRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__main92DctLN_vectorlEPythia8cLcLBoseEinsteinHadroncOallocatorlEPythia8cLcLBoseEinsteinHadrongRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__main92DctLN_reverse_iteratorlEvectorlEPythia8cLcLBoseEinsteinHadroncOallocatorlEPythia8cLcLBoseEinsteinHadrongRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__main92DctLN_vectorlEPythia8cLcLBoseEinsteinHadroncOallocatorlEPythia8cLcLBoseEinsteinHadrongRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<Pythia8::BoseEinsteinHadron>",117,G__get_linked_tagnum(&G__main92DctLN_vectorlEPythia8cLcLBoseEinsteinHadroncOallocatorlEPythia8cLcLBoseEinsteinHadrongRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<vector<int> >",117,G__get_linked_tagnum(&G__main92DctLN_vectorlEvectorlEintcOallocatorlEintgRsPgRcOallocatorlEvectorlEintcOallocatorlEintgRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__main92DctLN_reverse_iteratorlEvectorlEvectorlEintcOallocatorlEintgRsPgRcOallocatorlEvectorlEintcOallocatorlEintgRsPgRsPgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__main92DctLN_vectorlEvectorlEintcOallocatorlEintgRsPgRcOallocatorlEvectorlEintcOallocatorlEintgRsPgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__main92DctLN_reverse_iteratorlEvectorlEvectorlEintcOallocatorlEintgRsPgRcOallocatorlEvectorlEintcOallocatorlEintgRsPgRsPgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__main92DctLN_vectorlEvectorlEintcOallocatorlEintgRsPgRcOallocatorlEvectorlEintcOallocatorlEintgRsPgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<vector<int,allocator<int> > >",117,G__get_linked_tagnum(&G__main92DctLN_vectorlEvectorlEintcOallocatorlEintgRsPgRcOallocatorlEvectorlEintcOallocatorlEintgRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<ColSinglet>",117,G__get_linked_tagnum(&G__main92DctLN_vectorlEPythia8cLcLColSingletcOallocatorlEPythia8cLcLColSingletgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__main92DctLN_reverse_iteratorlEvectorlEPythia8cLcLColSingletcOallocatorlEPythia8cLcLColSingletgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__main92DctLN_vectorlEPythia8cLcLColSingletcOallocatorlEPythia8cLcLColSingletgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__main92DctLN_reverse_iteratorlEvectorlEPythia8cLcLColSingletcOallocatorlEPythia8cLcLColSingletgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__main92DctLN_vectorlEPythia8cLcLColSingletcOallocatorlEPythia8cLcLColSingletgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<Pythia8::ColSinglet>",117,G__get_linked_tagnum(&G__main92DctLN_vectorlEPythia8cLcLColSingletcOallocatorlEPythia8cLcLColSingletgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<StringRegion>",117,G__get_linked_tagnum(&G__main92DctLN_vectorlEPythia8cLcLStringRegioncOallocatorlEPythia8cLcLStringRegiongRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__main92DctLN_reverse_iteratorlEvectorlEPythia8cLcLStringRegioncOallocatorlEPythia8cLcLStringRegiongRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__main92DctLN_vectorlEPythia8cLcLStringRegioncOallocatorlEPythia8cLcLStringRegiongRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__main92DctLN_reverse_iteratorlEvectorlEPythia8cLcLStringRegioncOallocatorlEPythia8cLcLStringRegiongRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__main92DctLN_vectorlEPythia8cLcLStringRegioncOallocatorlEPythia8cLcLStringRegiongRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<Pythia8::StringRegion>",117,G__get_linked_tagnum(&G__main92DctLN_vectorlEPythia8cLcLStringRegioncOallocatorlEPythia8cLcLStringRegiongRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("complex",117,G__get_linked_tagnum(&G__main92DctLN_complexlEdoublegR),0,G__get_linked_tagnum(&G__main92DctLN_Pythia8));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<int,pair<int,int> >",117,G__get_linked_tagnum(&G__main92DctLN_maplEintcOpairlEintcOintgRcOlesslEintgRcOallocatorlEpairlEconstsPintcOpairlEintcOintgRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<int,pair<int,int>,less<int> >",117,G__get_linked_tagnum(&G__main92DctLN_maplEintcOpairlEintcOintgRcOlesslEintgRcOallocatorlEpairlEconstsPintcOpairlEintcOintgRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<pair<int,int>,int>",117,G__get_linked_tagnum(&G__main92DctLN_maplEpairlEintcOintgRcOintcOlesslEpairlEintcOintgRsPgRcOallocatorlEpairlEconstsPpairlEintcOintgRcOintgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<pair<int,int>,int,less<pair<int,int> > >",117,G__get_linked_tagnum(&G__main92DctLN_maplEpairlEintcOintgRcOintcOlesslEpairlEintcOintgRsPgRcOallocatorlEpairlEconstsPpairlEintcOintgRcOintgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<int,map<int,double> >",117,G__get_linked_tagnum(&G__main92DctLN_maplEintcOmaplEintcOdoublecOlesslEintgRcOallocatorlEpairlEconstsPintcOdoublegRsPgRsPgRcOlesslEintgRcOallocatorlEpairlEconstsPintcOmaplEintcOdoublecOlesslEintgRcOallocatorlEpairlEconstsPintcOdoublegRsPgRsPgRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<int,map<int,double,less<int>,allocator<pair<const int,double> > > >",117,G__get_linked_tagnum(&G__main92DctLN_maplEintcOmaplEintcOdoublecOlesslEintgRcOallocatorlEpairlEconstsPintcOdoublegRsPgRsPgRcOlesslEintgRcOallocatorlEpairlEconstsPintcOmaplEintcOdoublecOlesslEintgRcOallocatorlEpairlEconstsPintcOdoublegRsPgRsPgRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<int,map<int,double,less<int>,allocator<pair<const int,double> > >,less<int> >",117,G__get_linked_tagnum(&G__main92DctLN_maplEintcOmaplEintcOdoublecOlesslEintgRcOallocatorlEpairlEconstsPintcOdoublegRsPgRsPgRcOlesslEintgRcOallocatorlEpairlEconstsPintcOmaplEintcOdoublecOlesslEintgRcOallocatorlEpairlEconstsPintcOdoublegRsPgRsPgRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<double,complex>",117,G__get_linked_tagnum(&G__main92DctLN_maplEdoublecOcomplexlEdoublegRcOlesslEdoublegRcOallocatorlEpairlEconstsPdoublecOcomplexlEdoublegRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<double,complex<double> >",117,G__get_linked_tagnum(&G__main92DctLN_maplEdoublecOcomplexlEdoublegRcOlesslEdoublegRcOallocatorlEpairlEconstsPdoublecOcomplexlEdoublegRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<double,complex<double>,less<double> >",117,G__get_linked_tagnum(&G__main92DctLN_maplEdoublecOcomplexlEdoublegRcOlesslEdoublegRcOallocatorlEpairlEconstsPdoublecOcomplexlEdoublegRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<int,map<double,complex> >",117,G__get_linked_tagnum(&G__main92DctLN_maplEintcOmaplEdoublecOcomplexlEdoublegRcOlesslEdoublegRcOallocatorlEpairlEconstsPdoublecOcomplexlEdoublegRsPgRsPgRsPgRcOlesslEintgRcOallocatorlEpairlEconstsPintcOmaplEdoublecOcomplexlEdoublegRcOlesslEdoublegRcOallocatorlEpairlEconstsPdoublecOcomplexlEdoublegRsPgRsPgRsPgRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<int,map<double,complex<double>,less<double>,allocator<pair<const double,complex<double> > > > >",117,G__get_linked_tagnum(&G__main92DctLN_maplEintcOmaplEdoublecOcomplexlEdoublegRcOlesslEdoublegRcOallocatorlEpairlEconstsPdoublecOcomplexlEdoublegRsPgRsPgRsPgRcOlesslEintgRcOallocatorlEpairlEconstsPintcOmaplEdoublecOcomplexlEdoublegRcOlesslEdoublegRcOallocatorlEpairlEconstsPdoublecOcomplexlEdoublegRsPgRsPgRsPgRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<int,map<double,complex<double>,less<double>,allocator<pair<const double,complex<double> > > >,less<int> >",117,G__get_linked_tagnum(&G__main92DctLN_maplEintcOmaplEdoublecOcomplexlEdoublegRcOlesslEdoublegRcOallocatorlEpairlEconstsPdoublecOcomplexlEdoublegRsPgRsPgRsPgRcOlesslEintgRcOallocatorlEpairlEconstsPintcOmaplEdoublecOcomplexlEdoublegRcOlesslEdoublegRcOallocatorlEpairlEconstsPdoublecOcomplexlEdoublegRsPgRsPgRsPgRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<vector<vector<double> > >",117,G__get_linked_tagnum(&G__main92DctLN_vectorlEvectorlEvectorlEdoublecOallocatorlEdoublegRsPgRcOallocatorlEvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgRcOallocatorlEvectorlEvectorlEdoublecOallocatorlEdoublegRsPgRcOallocatorlEvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__main92DctLN_reverse_iteratorlEvectorlEvectorlEvectorlEdoublecOallocatorlEdoublegRsPgRcOallocatorlEvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgRcOallocatorlEvectorlEvectorlEdoublecOallocatorlEdoublegRsPgRcOallocatorlEvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgRsPgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__main92DctLN_vectorlEvectorlEvectorlEdoublecOallocatorlEdoublegRsPgRcOallocatorlEvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgRcOallocatorlEvectorlEvectorlEdoublecOallocatorlEdoublegRsPgRcOallocatorlEvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__main92DctLN_reverse_iteratorlEvectorlEvectorlEvectorlEdoublecOallocatorlEdoublegRsPgRcOallocatorlEvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgRcOallocatorlEvectorlEvectorlEdoublecOallocatorlEdoublegRsPgRcOallocatorlEvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgRsPgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__main92DctLN_vectorlEvectorlEvectorlEdoublecOallocatorlEdoublegRsPgRcOallocatorlEvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgRcOallocatorlEvectorlEvectorlEdoublecOallocatorlEdoublegRsPgRcOallocatorlEvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<vector<vector<double,allocator<double> >,allocator<vector<double,allocator<double> > > > >",117,G__get_linked_tagnum(&G__main92DctLN_vectorlEvectorlEvectorlEdoublecOallocatorlEdoublegRsPgRcOallocatorlEvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgRcOallocatorlEvectorlEvectorlEdoublecOallocatorlEdoublegRsPgRcOallocatorlEvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("HSIndex",117,G__get_linked_tagnum(&G__main92DctLN_pairlEintcOintgR),0,G__get_linked_tagnum(&G__main92DctLN_Pythia8));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<set<HSIndex> >",117,G__get_linked_tagnum(&G__main92DctLN_vectorlEsetlEpairlEintcOintgRcOlesslEpairlEintcOintgRsPgRcOallocatorlEpairlEintcOintgRsPgRsPgRcOallocatorlEsetlEpairlEintcOintgRcOlesslEpairlEintcOintgRsPgRcOallocatorlEpairlEintcOintgRsPgRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__main92DctLN_reverse_iteratorlEvectorlEsetlEpairlEintcOintgRcOlesslEpairlEintcOintgRsPgRcOallocatorlEpairlEintcOintgRsPgRsPgRcOallocatorlEsetlEpairlEintcOintgRcOlesslEpairlEintcOintgRsPgRcOallocatorlEpairlEintcOintgRsPgRsPgRsPgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__main92DctLN_vectorlEsetlEpairlEintcOintgRcOlesslEpairlEintcOintgRsPgRcOallocatorlEpairlEintcOintgRsPgRsPgRcOallocatorlEsetlEpairlEintcOintgRcOlesslEpairlEintcOintgRsPgRcOallocatorlEpairlEintcOintgRsPgRsPgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__main92DctLN_reverse_iteratorlEvectorlEsetlEpairlEintcOintgRcOlesslEpairlEintcOintgRsPgRcOallocatorlEpairlEintcOintgRsPgRsPgRcOallocatorlEsetlEpairlEintcOintgRcOlesslEpairlEintcOintgRsPgRcOallocatorlEpairlEintcOintgRsPgRsPgRsPgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__main92DctLN_vectorlEsetlEpairlEintcOintgRcOlesslEpairlEintcOintgRsPgRcOallocatorlEpairlEintcOintgRsPgRsPgRcOallocatorlEsetlEpairlEintcOintgRcOlesslEpairlEintcOintgRsPgRcOallocatorlEpairlEintcOintgRsPgRsPgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<set<pair<int,int>,less<pair<int,int> >,allocator<pair<int,int> > > >",117,G__get_linked_tagnum(&G__main92DctLN_vectorlEsetlEpairlEintcOintgRcOlesslEpairlEintcOintgRsPgRcOallocatorlEpairlEintcOintgRsPgRsPgRcOallocatorlEsetlEpairlEintcOintgRcOlesslEpairlEintcOintgRsPgRcOallocatorlEpairlEintcOintgRsPgRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<vector<set<HSIndex> > >",117,G__get_linked_tagnum(&G__main92DctLN_vectorlEvectorlEsetlEpairlEintcOintgRcOlesslEpairlEintcOintgRsPgRcOallocatorlEpairlEintcOintgRsPgRsPgRcOallocatorlEsetlEpairlEintcOintgRcOlesslEpairlEintcOintgRsPgRcOallocatorlEpairlEintcOintgRsPgRsPgRsPgRsPgRcOallocatorlEvectorlEsetlEpairlEintcOintgRcOlesslEpairlEintcOintgRsPgRcOallocatorlEpairlEintcOintgRsPgRsPgRcOallocatorlEsetlEpairlEintcOintgRcOlesslEpairlEintcOintgRsPgRcOallocatorlEpairlEintcOintgRsPgRsPgRsPgRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__main92DctLN_reverse_iteratorlEvectorlEvectorlEsetlEpairlEintcOintgRcOlesslEpairlEintcOintgRsPgRcOallocatorlEpairlEintcOintgRsPgRsPgRcOallocatorlEsetlEpairlEintcOintgRcOlesslEpairlEintcOintgRsPgRcOallocatorlEpairlEintcOintgRsPgRsPgRsPgRsPgRcOallocatorlEvectorlEsetlEpairlEintcOintgRcOlesslEpairlEintcOintgRsPgRcOallocatorlEpairlEintcOintgRsPgRsPgRcOallocatorlEsetlEpairlEintcOintgRcOlesslEpairlEintcOintgRsPgRcOallocatorlEpairlEintcOintgRsPgRsPgRsPgRsPgRsPgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__main92DctLN_vectorlEvectorlEsetlEpairlEintcOintgRcOlesslEpairlEintcOintgRsPgRcOallocatorlEpairlEintcOintgRsPgRsPgRcOallocatorlEsetlEpairlEintcOintgRcOlesslEpairlEintcOintgRsPgRcOallocatorlEpairlEintcOintgRsPgRsPgRsPgRsPgRcOallocatorlEvectorlEsetlEpairlEintcOintgRcOlesslEpairlEintcOintgRsPgRcOallocatorlEpairlEintcOintgRsPgRsPgRcOallocatorlEsetlEpairlEintcOintgRcOlesslEpairlEintcOintgRsPgRcOallocatorlEpairlEintcOintgRsPgRsPgRsPgRsPgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__main92DctLN_reverse_iteratorlEvectorlEvectorlEsetlEpairlEintcOintgRcOlesslEpairlEintcOintgRsPgRcOallocatorlEpairlEintcOintgRsPgRsPgRcOallocatorlEsetlEpairlEintcOintgRcOlesslEpairlEintcOintgRsPgRcOallocatorlEpairlEintcOintgRsPgRsPgRsPgRsPgRcOallocatorlEvectorlEsetlEpairlEintcOintgRcOlesslEpairlEintcOintgRsPgRcOallocatorlEpairlEintcOintgRsPgRsPgRcOallocatorlEsetlEpairlEintcOintgRcOlesslEpairlEintcOintgRsPgRcOallocatorlEpairlEintcOintgRsPgRsPgRsPgRsPgRsPgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__main92DctLN_vectorlEvectorlEsetlEpairlEintcOintgRcOlesslEpairlEintcOintgRsPgRcOallocatorlEpairlEintcOintgRsPgRsPgRcOallocatorlEsetlEpairlEintcOintgRcOlesslEpairlEintcOintgRsPgRcOallocatorlEpairlEintcOintgRsPgRsPgRsPgRsPgRcOallocatorlEvectorlEsetlEpairlEintcOintgRcOlesslEpairlEintcOintgRsPgRcOallocatorlEpairlEintcOintgRsPgRsPgRcOallocatorlEsetlEpairlEintcOintgRcOlesslEpairlEintcOintgRsPgRcOallocatorlEpairlEintcOintgRsPgRsPgRsPgRsPgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<vector<set<pair<int,int>,less<pair<int,int> >,allocator<pair<int,int> > >,allocator<set<pair<int,int>,less<pair<int,int> >,allocator<pair<int,int> > > > > >",117,G__get_linked_tagnum(&G__main92DctLN_vectorlEvectorlEsetlEpairlEintcOintgRcOlesslEpairlEintcOintgRsPgRcOallocatorlEpairlEintcOintgRsPgRsPgRcOallocatorlEsetlEpairlEintcOintgRcOlesslEpairlEintcOintgRsPgRcOallocatorlEpairlEintcOintgRsPgRsPgRsPgRsPgRcOallocatorlEvectorlEsetlEpairlEintcOintgRcOlesslEpairlEintcOintgRsPgRcOallocatorlEpairlEintcOintgRsPgRsPgRcOallocatorlEsetlEpairlEintcOintgRcOlesslEpairlEintcOintgRsPgRcOallocatorlEpairlEintcOintgRsPgRsPgRsPgRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<HadronScatterPair>",117,G__get_linked_tagnum(&G__main92DctLN_vectorlEPythia8cLcLHadronScatterPaircOallocatorlEPythia8cLcLHadronScatterPairgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__main92DctLN_reverse_iteratorlEvectorlEPythia8cLcLHadronScatterPaircOallocatorlEPythia8cLcLHadronScatterPairgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__main92DctLN_vectorlEPythia8cLcLHadronScatterPaircOallocatorlEPythia8cLcLHadronScatterPairgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__main92DctLN_reverse_iteratorlEvectorlEPythia8cLcLHadronScatterPaircOallocatorlEPythia8cLcLHadronScatterPairgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__main92DctLN_vectorlEPythia8cLcLHadronScatterPaircOallocatorlEPythia8cLcLHadronScatterPairgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<Pythia8::HadronScatterPair>",117,G__get_linked_tagnum(&G__main92DctLN_vectorlEPythia8cLcLHadronScatterPaircOallocatorlEPythia8cLcLHadronScatterPairgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<PartonSystem>",117,G__get_linked_tagnum(&G__main92DctLN_vectorlEPythia8cLcLPartonSystemcOallocatorlEPythia8cLcLPartonSystemgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__main92DctLN_reverse_iteratorlEvectorlEPythia8cLcLPartonSystemcOallocatorlEPythia8cLcLPartonSystemgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__main92DctLN_vectorlEPythia8cLcLPartonSystemcOallocatorlEPythia8cLcLPartonSystemgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__main92DctLN_reverse_iteratorlEvectorlEPythia8cLcLPartonSystemcOallocatorlEPythia8cLcLPartonSystemgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__main92DctLN_vectorlEPythia8cLcLPartonSystemcOallocatorlEPythia8cLcLPartonSystemgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<Pythia8::PartonSystem>",117,G__get_linked_tagnum(&G__main92DctLN_vectorlEPythia8cLcLPartonSystemcOallocatorlEPythia8cLcLPartonSystemgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<LHAParticle>",117,G__get_linked_tagnum(&G__main92DctLN_vectorlEPythia8cLcLLHAParticlecOallocatorlEPythia8cLcLLHAParticlegRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__main92DctLN_reverse_iteratorlEvectorlEPythia8cLcLLHAParticlecOallocatorlEPythia8cLcLLHAParticlegRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__main92DctLN_vectorlEPythia8cLcLLHAParticlecOallocatorlEPythia8cLcLLHAParticlegRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__main92DctLN_reverse_iteratorlEvectorlEPythia8cLcLLHAParticlecOallocatorlEPythia8cLcLLHAParticlegRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__main92DctLN_vectorlEPythia8cLcLLHAParticlecOallocatorlEPythia8cLcLLHAParticlegRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<Pythia8::LHAParticle>",117,G__get_linked_tagnum(&G__main92DctLN_vectorlEPythia8cLcLLHAParticlecOallocatorlEPythia8cLcLLHAParticlegRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<LHAProcess>",117,G__get_linked_tagnum(&G__main92DctLN_vectorlEPythia8cLcLLHAProcesscOallocatorlEPythia8cLcLLHAProcessgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__main92DctLN_reverse_iteratorlEvectorlEPythia8cLcLLHAProcesscOallocatorlEPythia8cLcLLHAProcessgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__main92DctLN_vectorlEPythia8cLcLLHAProcesscOallocatorlEPythia8cLcLLHAProcessgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__main92DctLN_reverse_iteratorlEvectorlEPythia8cLcLLHAProcesscOallocatorlEPythia8cLcLLHAProcessgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__main92DctLN_vectorlEPythia8cLcLLHAProcesscOallocatorlEPythia8cLcLLHAProcessgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<Pythia8::LHAProcess>",117,G__get_linked_tagnum(&G__main92DctLN_vectorlEPythia8cLcLLHAProcesscOallocatorlEPythia8cLcLLHAProcessgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<LHdecayChannel>",117,G__get_linked_tagnum(&G__main92DctLN_vectorlEPythia8cLcLLHdecayChannelcOallocatorlEPythia8cLcLLHdecayChannelgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__main92DctLN_reverse_iteratorlEvectorlEPythia8cLcLLHdecayChannelcOallocatorlEPythia8cLcLLHdecayChannelgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__main92DctLN_vectorlEPythia8cLcLLHdecayChannelcOallocatorlEPythia8cLcLLHdecayChannelgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__main92DctLN_reverse_iteratorlEvectorlEPythia8cLcLLHdecayChannelcOallocatorlEPythia8cLcLLHdecayChannelgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__main92DctLN_vectorlEPythia8cLcLLHdecayChannelcOallocatorlEPythia8cLcLLHdecayChannelgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<Pythia8::LHdecayChannel>",117,G__get_linked_tagnum(&G__main92DctLN_vectorlEPythia8cLcLLHdecayChannelcOallocatorlEPythia8cLcLLHdecayChannelgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<LHdecayTable>",117,G__get_linked_tagnum(&G__main92DctLN_vectorlEPythia8cLcLLHdecayTablecOallocatorlEPythia8cLcLLHdecayTablegRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__main92DctLN_reverse_iteratorlEvectorlEPythia8cLcLLHdecayTablecOallocatorlEPythia8cLcLLHdecayTablegRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__main92DctLN_vectorlEPythia8cLcLLHdecayTablecOallocatorlEPythia8cLcLLHdecayTablegRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__main92DctLN_reverse_iteratorlEvectorlEPythia8cLcLLHdecayTablecOallocatorlEPythia8cLcLLHdecayTablegRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__main92DctLN_vectorlEPythia8cLcLLHdecayTablecOallocatorlEPythia8cLcLLHdecayTablegRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<Pythia8::LHdecayTable>",117,G__get_linked_tagnum(&G__main92DctLN_vectorlEPythia8cLcLLHdecayTablecOallocatorlEPythia8cLcLLHdecayTablegRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<LHblock<int> >",117,G__get_linked_tagnum(&G__main92DctLN_vectorlEPythia8cLcLLHblocklEintgRcOallocatorlEPythia8cLcLLHblocklEintgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__main92DctLN_reverse_iteratorlEvectorlEPythia8cLcLLHblocklEintgRcOallocatorlEPythia8cLcLLHblocklEintgRsPgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__main92DctLN_vectorlEPythia8cLcLLHblocklEintgRcOallocatorlEPythia8cLcLLHblocklEintgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__main92DctLN_reverse_iteratorlEvectorlEPythia8cLcLLHblocklEintgRcOallocatorlEPythia8cLcLLHblocklEintgRsPgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__main92DctLN_vectorlEPythia8cLcLLHblocklEintgRcOallocatorlEPythia8cLcLLHblocklEintgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<Pythia8::LHblock<int> >",117,G__get_linked_tagnum(&G__main92DctLN_vectorlEPythia8cLcLLHblocklEintgRcOallocatorlEPythia8cLcLLHblocklEintgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,LHgenericBlock>",117,G__get_linked_tagnum(&G__main92DctLN_maplEstringcOPythia8cLcLLHgenericBlockcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOPythia8cLcLLHgenericBlockgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,Pythia8::LHgenericBlock>",117,G__get_linked_tagnum(&G__main92DctLN_maplEstringcOPythia8cLcLLHgenericBlockcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOPythia8cLcLLHgenericBlockgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,Pythia8::LHgenericBlock,less<string> >",117,G__get_linked_tagnum(&G__main92DctLN_maplEstringcOPythia8cLcLLHgenericBlockcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOPythia8cLcLLHgenericBlockgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<InBeam>",117,G__get_linked_tagnum(&G__main92DctLN_vectorlEPythia8cLcLInBeamcOallocatorlEPythia8cLcLInBeamgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__main92DctLN_reverse_iteratorlEvectorlEPythia8cLcLInBeamcOallocatorlEPythia8cLcLInBeamgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__main92DctLN_vectorlEPythia8cLcLInBeamcOallocatorlEPythia8cLcLInBeamgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__main92DctLN_reverse_iteratorlEvectorlEPythia8cLcLInBeamcOallocatorlEPythia8cLcLInBeamgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__main92DctLN_vectorlEPythia8cLcLInBeamcOallocatorlEPythia8cLcLInBeamgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<Pythia8::InBeam>",117,G__get_linked_tagnum(&G__main92DctLN_vectorlEPythia8cLcLInBeamcOallocatorlEPythia8cLcLInBeamgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<InPair>",117,G__get_linked_tagnum(&G__main92DctLN_vectorlEPythia8cLcLInPaircOallocatorlEPythia8cLcLInPairgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__main92DctLN_reverse_iteratorlEvectorlEPythia8cLcLInPaircOallocatorlEPythia8cLcLInPairgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__main92DctLN_vectorlEPythia8cLcLInPaircOallocatorlEPythia8cLcLInPairgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__main92DctLN_reverse_iteratorlEvectorlEPythia8cLcLInPaircOallocatorlEPythia8cLcLInPairgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__main92DctLN_vectorlEPythia8cLcLInPaircOallocatorlEPythia8cLcLInPairgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<Pythia8::InPair>",117,G__get_linked_tagnum(&G__main92DctLN_vectorlEPythia8cLcLInPaircOallocatorlEPythia8cLcLInPairgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<TimeDipoleEnd>",117,G__get_linked_tagnum(&G__main92DctLN_vectorlEPythia8cLcLTimeDipoleEndcOallocatorlEPythia8cLcLTimeDipoleEndgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__main92DctLN_reverse_iteratorlEvectorlEPythia8cLcLTimeDipoleEndcOallocatorlEPythia8cLcLTimeDipoleEndgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__main92DctLN_vectorlEPythia8cLcLTimeDipoleEndcOallocatorlEPythia8cLcLTimeDipoleEndgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__main92DctLN_reverse_iteratorlEvectorlEPythia8cLcLTimeDipoleEndcOallocatorlEPythia8cLcLTimeDipoleEndgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__main92DctLN_vectorlEPythia8cLcLTimeDipoleEndcOallocatorlEPythia8cLcLTimeDipoleEndgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<Pythia8::TimeDipoleEnd>",117,G__get_linked_tagnum(&G__main92DctLN_vectorlEPythia8cLcLTimeDipoleEndcOallocatorlEPythia8cLcLTimeDipoleEndgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<complex>",117,G__get_linked_tagnum(&G__main92DctLN_vectorlEcomplexlEdoublegRcOallocatorlEcomplexlEdoublegRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__main92DctLN_reverse_iteratorlEvectorlEcomplexlEdoublegRcOallocatorlEcomplexlEdoublegRsPgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__main92DctLN_vectorlEcomplexlEdoublegRcOallocatorlEcomplexlEdoublegRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__main92DctLN_reverse_iteratorlEvectorlEcomplexlEdoublegRcOallocatorlEcomplexlEdoublegRsPgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__main92DctLN_vectorlEcomplexlEdoublegRcOallocatorlEcomplexlEdoublegRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<complex<double> >",117,G__get_linked_tagnum(&G__main92DctLN_vectorlEcomplexlEdoublegRcOallocatorlEcomplexlEdoublegRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<vector<complex> >",117,G__get_linked_tagnum(&G__main92DctLN_vectorlEvectorlEcomplexlEdoublegRcOallocatorlEcomplexlEdoublegRsPgRsPgRcOallocatorlEvectorlEcomplexlEdoublegRcOallocatorlEcomplexlEdoublegRsPgRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__main92DctLN_reverse_iteratorlEvectorlEvectorlEcomplexlEdoublegRcOallocatorlEcomplexlEdoublegRsPgRsPgRcOallocatorlEvectorlEcomplexlEdoublegRcOallocatorlEcomplexlEdoublegRsPgRsPgRsPgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__main92DctLN_vectorlEvectorlEcomplexlEdoublegRcOallocatorlEcomplexlEdoublegRsPgRsPgRcOallocatorlEvectorlEcomplexlEdoublegRcOallocatorlEcomplexlEdoublegRsPgRsPgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__main92DctLN_reverse_iteratorlEvectorlEvectorlEcomplexlEdoublegRcOallocatorlEcomplexlEdoublegRsPgRsPgRcOallocatorlEvectorlEcomplexlEdoublegRcOallocatorlEcomplexlEdoublegRsPgRsPgRsPgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__main92DctLN_vectorlEvectorlEcomplexlEdoublegRcOallocatorlEcomplexlEdoublegRsPgRsPgRcOallocatorlEvectorlEcomplexlEdoublegRcOallocatorlEcomplexlEdoublegRsPgRsPgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<vector<complex<double>,allocator<complex<double> > > >",117,G__get_linked_tagnum(&G__main92DctLN_vectorlEvectorlEcomplexlEdoublegRcOallocatorlEcomplexlEdoublegRsPgRsPgRcOallocatorlEvectorlEcomplexlEdoublegRcOallocatorlEcomplexlEdoublegRsPgRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<HelicityParticle>",117,G__get_linked_tagnum(&G__main92DctLN_vectorlEPythia8cLcLHelicityParticlecOallocatorlEPythia8cLcLHelicityParticlegRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__main92DctLN_reverse_iteratorlEvectorlEPythia8cLcLHelicityParticlecOallocatorlEPythia8cLcLHelicityParticlegRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__main92DctLN_vectorlEPythia8cLcLHelicityParticlecOallocatorlEPythia8cLcLHelicityParticlegRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__main92DctLN_reverse_iteratorlEvectorlEPythia8cLcLHelicityParticlecOallocatorlEPythia8cLcLHelicityParticlegRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__main92DctLN_vectorlEPythia8cLcLHelicityParticlecOallocatorlEPythia8cLcLHelicityParticlegRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<Pythia8::HelicityParticle>",117,G__get_linked_tagnum(&G__main92DctLN_vectorlEPythia8cLcLHelicityParticlecOallocatorlEPythia8cLcLHelicityParticlegRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<GammaMatrix>",117,G__get_linked_tagnum(&G__main92DctLN_vectorlEPythia8cLcLGammaMatrixcOallocatorlEPythia8cLcLGammaMatrixgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__main92DctLN_reverse_iteratorlEvectorlEPythia8cLcLGammaMatrixcOallocatorlEPythia8cLcLGammaMatrixgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__main92DctLN_vectorlEPythia8cLcLGammaMatrixcOallocatorlEPythia8cLcLGammaMatrixgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__main92DctLN_reverse_iteratorlEvectorlEPythia8cLcLGammaMatrixcOallocatorlEPythia8cLcLGammaMatrixgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__main92DctLN_vectorlEPythia8cLcLGammaMatrixcOallocatorlEPythia8cLcLGammaMatrixgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<Pythia8::GammaMatrix>",117,G__get_linked_tagnum(&G__main92DctLN_vectorlEPythia8cLcLGammaMatrixcOallocatorlEPythia8cLcLGammaMatrixgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<Wave4>",117,G__get_linked_tagnum(&G__main92DctLN_vectorlEPythia8cLcLWave4cOallocatorlEPythia8cLcLWave4gRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__main92DctLN_reverse_iteratorlEvectorlEPythia8cLcLWave4cOallocatorlEPythia8cLcLWave4gRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__main92DctLN_vectorlEPythia8cLcLWave4cOallocatorlEPythia8cLcLWave4gRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__main92DctLN_reverse_iteratorlEvectorlEPythia8cLcLWave4cOallocatorlEPythia8cLcLWave4gRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__main92DctLN_vectorlEPythia8cLcLWave4cOallocatorlEPythia8cLcLWave4gRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<Pythia8::Wave4>",117,G__get_linked_tagnum(&G__main92DctLN_vectorlEPythia8cLcLWave4cOallocatorlEPythia8cLcLWave4gRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<vector<Wave4> >",117,G__get_linked_tagnum(&G__main92DctLN_vectorlEvectorlEPythia8cLcLWave4cOallocatorlEPythia8cLcLWave4gRsPgRcOallocatorlEvectorlEPythia8cLcLWave4cOallocatorlEPythia8cLcLWave4gRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__main92DctLN_reverse_iteratorlEvectorlEvectorlEPythia8cLcLWave4cOallocatorlEPythia8cLcLWave4gRsPgRcOallocatorlEvectorlEPythia8cLcLWave4cOallocatorlEPythia8cLcLWave4gRsPgRsPgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__main92DctLN_vectorlEvectorlEPythia8cLcLWave4cOallocatorlEPythia8cLcLWave4gRsPgRcOallocatorlEvectorlEPythia8cLcLWave4cOallocatorlEPythia8cLcLWave4gRsPgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__main92DctLN_reverse_iteratorlEvectorlEvectorlEPythia8cLcLWave4cOallocatorlEPythia8cLcLWave4gRsPgRcOallocatorlEvectorlEPythia8cLcLWave4cOallocatorlEPythia8cLcLWave4gRsPgRsPgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__main92DctLN_vectorlEvectorlEPythia8cLcLWave4cOallocatorlEPythia8cLcLWave4gRsPgRcOallocatorlEvectorlEPythia8cLcLWave4cOallocatorlEPythia8cLcLWave4gRsPgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<vector<Pythia8::Wave4,allocator<Pythia8::Wave4> > >",117,G__get_linked_tagnum(&G__main92DctLN_vectorlEvectorlEPythia8cLcLWave4cOallocatorlEPythia8cLcLWave4gRsPgRcOallocatorlEvectorlEPythia8cLcLWave4cOallocatorlEPythia8cLcLWave4gRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<Vec4>",117,G__get_linked_tagnum(&G__main92DctLN_vectorlEPythia8cLcLVec4cOallocatorlEPythia8cLcLVec4gRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__main92DctLN_reverse_iteratorlEvectorlEPythia8cLcLVec4cOallocatorlEPythia8cLcLVec4gRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__main92DctLN_vectorlEPythia8cLcLVec4cOallocatorlEPythia8cLcLVec4gRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__main92DctLN_reverse_iteratorlEvectorlEPythia8cLcLVec4cOallocatorlEPythia8cLcLVec4gRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__main92DctLN_vectorlEPythia8cLcLVec4cOallocatorlEPythia8cLcLVec4gRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<Pythia8::Vec4>",117,G__get_linked_tagnum(&G__main92DctLN_vectorlEPythia8cLcLVec4cOallocatorlEPythia8cLcLVec4gRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<FlavContainer>",117,G__get_linked_tagnum(&G__main92DctLN_vectorlEPythia8cLcLFlavContainercOallocatorlEPythia8cLcLFlavContainergRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__main92DctLN_reverse_iteratorlEvectorlEPythia8cLcLFlavContainercOallocatorlEPythia8cLcLFlavContainergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__main92DctLN_vectorlEPythia8cLcLFlavContainercOallocatorlEPythia8cLcLFlavContainergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__main92DctLN_reverse_iteratorlEvectorlEPythia8cLcLFlavContainercOallocatorlEPythia8cLcLFlavContainergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__main92DctLN_vectorlEPythia8cLcLFlavContainercOallocatorlEPythia8cLcLFlavContainergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<Pythia8::FlavContainer>",117,G__get_linked_tagnum(&G__main92DctLN_vectorlEPythia8cLcLFlavContainercOallocatorlEPythia8cLcLFlavContainergRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<ColourDipole*>",117,G__get_linked_tagnum(&G__main92DctLN_vectorlEPythia8cLcLColourDipolemUcOallocatorlEPythia8cLcLColourDipolemUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__main92DctLN_reverse_iteratorlEvectorlEPythia8cLcLColourDipolemUcOallocatorlEPythia8cLcLColourDipolemUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__main92DctLN_vectorlEPythia8cLcLColourDipolemUcOallocatorlEPythia8cLcLColourDipolemUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__main92DctLN_reverse_iteratorlEvectorlEPythia8cLcLColourDipolemUcOallocatorlEPythia8cLcLColourDipolemUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__main92DctLN_vectorlEPythia8cLcLColourDipolemUcOallocatorlEPythia8cLcLColourDipolemUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<Pythia8::ColourDipole*>",117,G__get_linked_tagnum(&G__main92DctLN_vectorlEPythia8cLcLColourDipolemUcOallocatorlEPythia8cLcLColourDipolemUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<vector<ColourDipole*> >",117,G__get_linked_tagnum(&G__main92DctLN_vectorlEvectorlEPythia8cLcLColourDipolemUcOallocatorlEPythia8cLcLColourDipolemUgRsPgRcOallocatorlEvectorlEPythia8cLcLColourDipolemUcOallocatorlEPythia8cLcLColourDipolemUgRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__main92DctLN_reverse_iteratorlEvectorlEvectorlEPythia8cLcLColourDipolemUcOallocatorlEPythia8cLcLColourDipolemUgRsPgRcOallocatorlEvectorlEPythia8cLcLColourDipolemUcOallocatorlEPythia8cLcLColourDipolemUgRsPgRsPgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__main92DctLN_vectorlEvectorlEPythia8cLcLColourDipolemUcOallocatorlEPythia8cLcLColourDipolemUgRsPgRcOallocatorlEvectorlEPythia8cLcLColourDipolemUcOallocatorlEPythia8cLcLColourDipolemUgRsPgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__main92DctLN_reverse_iteratorlEvectorlEvectorlEPythia8cLcLColourDipolemUcOallocatorlEPythia8cLcLColourDipolemUgRsPgRcOallocatorlEvectorlEPythia8cLcLColourDipolemUcOallocatorlEPythia8cLcLColourDipolemUgRsPgRsPgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__main92DctLN_vectorlEvectorlEPythia8cLcLColourDipolemUcOallocatorlEPythia8cLcLColourDipolemUgRsPgRcOallocatorlEvectorlEPythia8cLcLColourDipolemUcOallocatorlEPythia8cLcLColourDipolemUgRsPgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<vector<Pythia8::ColourDipole*,allocator<Pythia8::ColourDipole*> > >",117,G__get_linked_tagnum(&G__main92DctLN_vectorlEvectorlEPythia8cLcLColourDipolemUcOallocatorlEPythia8cLcLColourDipolemUgRsPgRcOallocatorlEvectorlEPythia8cLcLColourDipolemUcOallocatorlEPythia8cLcLColourDipolemUgRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<ColourJunction>",117,G__get_linked_tagnum(&G__main92DctLN_vectorlEPythia8cLcLColourJunctioncOallocatorlEPythia8cLcLColourJunctiongRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__main92DctLN_reverse_iteratorlEvectorlEPythia8cLcLColourJunctioncOallocatorlEPythia8cLcLColourJunctiongRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__main92DctLN_vectorlEPythia8cLcLColourJunctioncOallocatorlEPythia8cLcLColourJunctiongRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__main92DctLN_reverse_iteratorlEvectorlEPythia8cLcLColourJunctioncOallocatorlEPythia8cLcLColourJunctiongRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__main92DctLN_vectorlEPythia8cLcLColourJunctioncOallocatorlEPythia8cLcLColourJunctiongRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<Pythia8::ColourJunction>",117,G__get_linked_tagnum(&G__main92DctLN_vectorlEPythia8cLcLColourJunctioncOallocatorlEPythia8cLcLColourJunctiongRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<ColourParticle>",117,G__get_linked_tagnum(&G__main92DctLN_vectorlEPythia8cLcLColourParticlecOallocatorlEPythia8cLcLColourParticlegRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__main92DctLN_reverse_iteratorlEvectorlEPythia8cLcLColourParticlecOallocatorlEPythia8cLcLColourParticlegRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__main92DctLN_vectorlEPythia8cLcLColourParticlecOallocatorlEPythia8cLcLColourParticlegRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__main92DctLN_reverse_iteratorlEvectorlEPythia8cLcLColourParticlecOallocatorlEPythia8cLcLColourParticlegRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__main92DctLN_vectorlEPythia8cLcLColourParticlecOallocatorlEPythia8cLcLColourParticlegRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<Pythia8::ColourParticle>",117,G__get_linked_tagnum(&G__main92DctLN_vectorlEPythia8cLcLColourParticlecOallocatorlEPythia8cLcLColourParticlegRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<TrialReconnection>",117,G__get_linked_tagnum(&G__main92DctLN_vectorlEPythia8cLcLTrialReconnectioncOallocatorlEPythia8cLcLTrialReconnectiongRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__main92DctLN_reverse_iteratorlEvectorlEPythia8cLcLTrialReconnectioncOallocatorlEPythia8cLcLTrialReconnectiongRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__main92DctLN_vectorlEPythia8cLcLTrialReconnectioncOallocatorlEPythia8cLcLTrialReconnectiongRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__main92DctLN_reverse_iteratorlEvectorlEPythia8cLcLTrialReconnectioncOallocatorlEPythia8cLcLTrialReconnectiongRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__main92DctLN_vectorlEPythia8cLcLTrialReconnectioncOallocatorlEPythia8cLcLTrialReconnectiongRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<Pythia8::TrialReconnection>",117,G__get_linked_tagnum(&G__main92DctLN_vectorlEPythia8cLcLTrialReconnectioncOallocatorlEPythia8cLcLTrialReconnectiongRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<SigmaProcess*>",117,G__get_linked_tagnum(&G__main92DctLN_vectorlEPythia8cLcLSigmaProcessmUcOallocatorlEPythia8cLcLSigmaProcessmUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__main92DctLN_reverse_iteratorlEvectorlEPythia8cLcLSigmaProcessmUcOallocatorlEPythia8cLcLSigmaProcessmUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__main92DctLN_vectorlEPythia8cLcLSigmaProcessmUcOallocatorlEPythia8cLcLSigmaProcessmUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__main92DctLN_reverse_iteratorlEvectorlEPythia8cLcLSigmaProcessmUcOallocatorlEPythia8cLcLSigmaProcessmUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__main92DctLN_vectorlEPythia8cLcLSigmaProcessmUcOallocatorlEPythia8cLcLSigmaProcessmUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<Pythia8::SigmaProcess*>",117,G__get_linked_tagnum(&G__main92DctLN_vectorlEPythia8cLcLSigmaProcessmUcOallocatorlEPythia8cLcLSigmaProcessmUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<SpaceDipoleEnd>",117,G__get_linked_tagnum(&G__main92DctLN_vectorlEPythia8cLcLSpaceDipoleEndcOallocatorlEPythia8cLcLSpaceDipoleEndgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__main92DctLN_reverse_iteratorlEvectorlEPythia8cLcLSpaceDipoleEndcOallocatorlEPythia8cLcLSpaceDipoleEndgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__main92DctLN_vectorlEPythia8cLcLSpaceDipoleEndcOallocatorlEPythia8cLcLSpaceDipoleEndgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__main92DctLN_reverse_iteratorlEvectorlEPythia8cLcLSpaceDipoleEndcOallocatorlEPythia8cLcLSpaceDipoleEndgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__main92DctLN_vectorlEPythia8cLcLSpaceDipoleEndcOallocatorlEPythia8cLcLSpaceDipoleEndgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<Pythia8::SpaceDipoleEnd>",117,G__get_linked_tagnum(&G__main92DctLN_vectorlEPythia8cLcLSpaceDipoleEndcOallocatorlEPythia8cLcLSpaceDipoleEndgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<Clustering>",117,G__get_linked_tagnum(&G__main92DctLN_vectorlEPythia8cLcLClusteringcOallocatorlEPythia8cLcLClusteringgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__main92DctLN_reverse_iteratorlEvectorlEPythia8cLcLClusteringcOallocatorlEPythia8cLcLClusteringgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__main92DctLN_vectorlEPythia8cLcLClusteringcOallocatorlEPythia8cLcLClusteringgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__main92DctLN_reverse_iteratorlEvectorlEPythia8cLcLClusteringcOallocatorlEPythia8cLcLClusteringgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__main92DctLN_vectorlEPythia8cLcLClusteringcOallocatorlEPythia8cLcLClusteringgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<Pythia8::Clustering>",117,G__get_linked_tagnum(&G__main92DctLN_vectorlEPythia8cLcLClusteringcOallocatorlEPythia8cLcLClusteringgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<History*>",117,G__get_linked_tagnum(&G__main92DctLN_vectorlEPythia8cLcLHistorymUcOallocatorlEPythia8cLcLHistorymUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__main92DctLN_reverse_iteratorlEvectorlEPythia8cLcLHistorymUcOallocatorlEPythia8cLcLHistorymUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__main92DctLN_vectorlEPythia8cLcLHistorymUcOallocatorlEPythia8cLcLHistorymUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__main92DctLN_reverse_iteratorlEvectorlEPythia8cLcLHistorymUcOallocatorlEPythia8cLcLHistorymUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__main92DctLN_vectorlEPythia8cLcLHistorymUcOallocatorlEPythia8cLcLHistorymUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<Pythia8::History*>",117,G__get_linked_tagnum(&G__main92DctLN_vectorlEPythia8cLcLHistorymUcOallocatorlEPythia8cLcLHistorymUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<double,History*>",117,G__get_linked_tagnum(&G__main92DctLN_maplEdoublecOPythia8cLcLHistorymUcOlesslEdoublegRcOallocatorlEpairlEconstsPdoublecOPythia8cLcLHistorymUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<double,Pythia8::History*>",117,G__get_linked_tagnum(&G__main92DctLN_maplEdoublecOPythia8cLcLHistorymUcOlesslEdoublegRcOallocatorlEpairlEconstsPdoublecOPythia8cLcLHistorymUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<double,Pythia8::History*,less<double> >",117,G__get_linked_tagnum(&G__main92DctLN_maplEdoublecOPythia8cLcLHistorymUcOlesslEdoublegRcOallocatorlEpairlEconstsPdoublecOPythia8cLcLHistorymUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<vector<bool> >",117,G__get_linked_tagnum(&G__main92DctLN_vectorlEvectorlEboolcOallocatorlEboolgRsPgRcOallocatorlEvectorlEboolcOallocatorlEboolgRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__main92DctLN_reverse_iteratorlEvectorlEvectorlEboolcOallocatorlEboolgRsPgRcOallocatorlEvectorlEboolcOallocatorlEboolgRsPgRsPgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__main92DctLN_vectorlEvectorlEboolcOallocatorlEboolgRsPgRcOallocatorlEvectorlEboolcOallocatorlEboolgRsPgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__main92DctLN_reverse_iteratorlEvectorlEvectorlEboolcOallocatorlEboolgRsPgRcOallocatorlEvectorlEboolcOallocatorlEboolgRsPgRsPgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__main92DctLN_vectorlEvectorlEboolcOallocatorlEboolgRsPgRcOallocatorlEvectorlEboolcOallocatorlEboolgRsPgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<vector<bool,allocator<bool> > >",117,G__get_linked_tagnum(&G__main92DctLN_vectorlEvectorlEboolcOallocatorlEboolgRsPgRcOallocatorlEvectorlEboolcOallocatorlEboolgRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<ProcessContainer*>",117,G__get_linked_tagnum(&G__main92DctLN_vectorlEPythia8cLcLProcessContainermUcOallocatorlEPythia8cLcLProcessContainermUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__main92DctLN_reverse_iteratorlEvectorlEPythia8cLcLProcessContainermUcOallocatorlEPythia8cLcLProcessContainermUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__main92DctLN_vectorlEPythia8cLcLProcessContainermUcOallocatorlEPythia8cLcLProcessContainermUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__main92DctLN_reverse_iteratorlEvectorlEPythia8cLcLProcessContainermUcOallocatorlEPythia8cLcLProcessContainermUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__main92DctLN_vectorlEPythia8cLcLProcessContainermUcOallocatorlEPythia8cLcLProcessContainermUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<Pythia8::ProcessContainer*>",117,G__get_linked_tagnum(&G__main92DctLN_vectorlEPythia8cLcLProcessContainermUcOallocatorlEPythia8cLcLProcessContainermUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<ResonanceWidths>",117,G__get_linked_tagnum(&G__main92DctLN_vectorlEPythia8cLcLResonanceWidthscOallocatorlEPythia8cLcLResonanceWidthsgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("value_type",117,G__get_linked_tagnum(&G__main92DctLN_Pythia8cLcLResonanceWidths),0,G__get_linked_tagnum(&G__main92DctLN_vectorlEPythia8cLcLResonanceWidthscOallocatorlEPythia8cLcLResonanceWidthsgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("pointer",85,G__get_linked_tagnum(&G__main92DctLN_Pythia8cLcLResonanceWidths),0,G__get_linked_tagnum(&G__main92DctLN_vectorlEPythia8cLcLResonanceWidthscOallocatorlEPythia8cLcLResonanceWidthsgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_pointer",85,G__get_linked_tagnum(&G__main92DctLN_Pythia8cLcLResonanceWidths),256,G__get_linked_tagnum(&G__main92DctLN_vectorlEPythia8cLcLResonanceWidthscOallocatorlEPythia8cLcLResonanceWidthsgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reference",117,G__get_linked_tagnum(&G__main92DctLN_Pythia8cLcLResonanceWidths),1,G__get_linked_tagnum(&G__main92DctLN_vectorlEPythia8cLcLResonanceWidthscOallocatorlEPythia8cLcLResonanceWidthsgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_reference",117,G__get_linked_tagnum(&G__main92DctLN_Pythia8cLcLResonanceWidths),257,G__get_linked_tagnum(&G__main92DctLN_vectorlEPythia8cLcLResonanceWidthscOallocatorlEPythia8cLcLResonanceWidthsgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("size_type",107,-1,0,G__get_linked_tagnum(&G__main92DctLN_vectorlEPythia8cLcLResonanceWidthscOallocatorlEPythia8cLcLResonanceWidthsgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("difference_type",108,-1,0,G__get_linked_tagnum(&G__main92DctLN_vectorlEPythia8cLcLResonanceWidthscOallocatorlEPythia8cLcLResonanceWidthsgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_iterator",117,G__get_linked_tagnum(&G__main92DctLN_vectorlEPythia8cLcLResonanceWidthscOallocatorlEPythia8cLcLResonanceWidthsgRsPgRcLcLiterator),256,G__get_linked_tagnum(&G__main92DctLN_vectorlEPythia8cLcLResonanceWidthscOallocatorlEPythia8cLcLResonanceWidthsgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__main92DctLN_reverse_iteratorlEvectorlEPythia8cLcLResonanceWidthscOallocatorlEPythia8cLcLResonanceWidthsgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__main92DctLN_vectorlEPythia8cLcLResonanceWidthscOallocatorlEPythia8cLcLResonanceWidthsgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_reverse_iterator",117,G__get_linked_tagnum(&G__main92DctLN_reverse_iteratorlEvectorlEPythia8cLcLResonanceWidthscOallocatorlEPythia8cLcLResonanceWidthsgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__main92DctLN_vectorlEPythia8cLcLResonanceWidthscOallocatorlEPythia8cLcLResonanceWidthsgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__main92DctLN_reverse_iteratorlEvectorlEPythia8cLcLResonanceWidthscOallocatorlEPythia8cLcLResonanceWidthsgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__main92DctLN_vectorlEPythia8cLcLResonanceWidthscOallocatorlEPythia8cLcLResonanceWidthsgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator",117,G__get_linked_tagnum(&G__main92DctLN_reverse_iteratorlEvectorlEPythia8cLcLResonanceWidthscOallocatorlEPythia8cLcLResonanceWidthsgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__main92DctLN_vectorlEPythia8cLcLResonanceWidthscOallocatorlEPythia8cLcLResonanceWidthsgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<Pythia8::ResonanceWidths>",117,G__get_linked_tagnum(&G__main92DctLN_vectorlEPythia8cLcLResonanceWidthscOallocatorlEPythia8cLcLResonanceWidthsgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("pair<int,ParticleDataEntry>",117,G__get_linked_tagnum(&G__main92DctLN_pairlEintcOPythia8cLcLParticleDataEntrygR),0,-1);
   G__setnewtype(-1,NULL,0);
}

/*********************************************************
* Data Member information setup/
*********************************************************/

   /* Setting up class,struct,union tag member variable */

   /* Pythia8 */
static void G__setup_memvarPythia8(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__main92DctLN_Pythia8));
   {
   }
   G__tag_memvar_reset();
}


   /* Pythia8::RndmEngine */
static void G__setup_memvarPythia8cLcLRndmEngine(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__main92DctLN_Pythia8cLcLRndmEngine));
   { Pythia8::RndmEngine *p; p=(Pythia8::RndmEngine*)0x1000; if (p) { }
   G__memvar_setup((void*)0,108,0,0,-1,-1,-1,4,"G__virtualinfo=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* Pythia8::Rndm */
static void G__setup_memvarPythia8cLcLRndm(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__main92DctLN_Pythia8cLcLRndm));
   { Pythia8::Rndm *p; p=(Pythia8::Rndm*)0x1000; if (p) { }
   G__memvar_setup((void*)G__PVOID,105,0,1,-1,-1,-2,4,"DEFAULTSEED=0LL",0,(char*)NULL);
   G__memvar_setup((void*)0,103,0,0,-1,-1,-1,4,"initRndm=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"i97=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"j97=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"seedSave=",0,(char*)NULL);
   G__memvar_setup((void*)0,108,0,0,-1,-1,-1,4,"sequence=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"u[97]=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"c=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"cd=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"cm=",0,(char*)NULL);
   G__memvar_setup((void*)0,103,0,0,-1,-1,-1,4,"useExternalRndm=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__main92DctLN_Pythia8cLcLRndmEngine),-1,-1,4,"rndmEngPtr=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* Pythia8::Vec4 */
static void G__setup_memvarPythia8cLcLVec4(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__main92DctLN_Pythia8cLcLVec4));
   { Pythia8::Vec4 *p; p=(Pythia8::Vec4*)0x1000; if (p) { }
   G__memvar_setup((void*)0,100,0,1,-1,-1,-2,4,"TINY=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"xx=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"yy=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"zz=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"tt=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* Pythia8::Info */
static void G__setup_memvarPythia8cLcLInfo(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__main92DctLN_Pythia8cLcLInfo));
   { Pythia8::Info *p; p=(Pythia8::Info*)0x1000; if (p) { }
   G__memvar_setup((void*)((long)(&p->LHEFversionSave)-(long)(p)),105,0,0,-1,-1,-1,1,"LHEFversionSave=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->sigmaLHEFSave)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__main92DctLN_vectorlEdoublecOallocatorlEdoublegRsPgR),G__defined_typename("vector<double>"),-1,1,"sigmaLHEFSave=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->initrwgt)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__main92DctLN_Pythia8cLcLLHAinitrwgt),-1,-1,1,"initrwgt=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->generators)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__main92DctLN_vectorlEPythia8cLcLLHAgeneratorcOallocatorlEPythia8cLcLLHAgeneratorgRsPgR),G__defined_typename("vector<LHAgenerator>"),-1,1,"generators=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->weightgroups)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__main92DctLN_maplEstringcOPythia8cLcLLHAweightgroupcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOPythia8cLcLLHAweightgroupgRsPgRsPgR),G__defined_typename("map<string,LHAweightgroup>"),-1,1,"weightgroups=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->init_weights)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__main92DctLN_maplEstringcOPythia8cLcLLHAweightcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOPythia8cLcLLHAweightgRsPgRsPgR),G__defined_typename("map<string,LHAweight>"),-1,1,"init_weights=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->eventAttributes)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__main92DctLN_maplEstringcOstringcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOstringgRsPgRsPgR),G__defined_typename("map<string,string>"),-1,1,"eventAttributes=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->weights_detailed)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__main92DctLN_maplEstringcOdoublecOlesslEstringgRcOallocatorlEpairlEconstsPstringcOdoublegRsPgRsPgR),G__defined_typename("map<string,double>"),-1,1,"weights_detailed=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->weights_compressed)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__main92DctLN_vectorlEdoublecOallocatorlEdoublegRsPgR),G__defined_typename("vector<double>"),-1,1,"weights_compressed=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->scales)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__main92DctLN_Pythia8cLcLLHAscales),-1,-1,1,"scales=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->weights)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__main92DctLN_Pythia8cLcLLHAweights),-1,-1,1,"weights=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->rwgt)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__main92DctLN_Pythia8cLcLLHArwgt),-1,-1,1,"rwgt=",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,-1,-1,-2,4,"TIMESTOPRINT=0LL",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,1,-1,-1,-2,4,"CONVERTMB2PB=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"idASave=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"idBSave=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"pzASave=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"eASave=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"mASave=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"pzBSave=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"eBSave=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"mBSave=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"eCMSave=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"sSave=",0,(char*)NULL);
   G__memvar_setup((void*)0,103,0,0,-1,-1,-1,4,"lowPTmin=",0,(char*)NULL);
   G__memvar_setup((void*)0,108,0,0,-1,-1,-1,4,"nTry=",0,(char*)NULL);
   G__memvar_setup((void*)0,108,0,0,-1,-1,-1,4,"nSel=",0,(char*)NULL);
   G__memvar_setup((void*)0,108,0,0,-1,-1,-1,4,"nAcc=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"sigGen=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"sigErr=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"wtAccSum=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__main92DctLN_maplEintcOstringcOlesslEintgRcOallocatorlEpairlEconstsPintcOstringgRsPgRsPgR),G__defined_typename("map<int,string>"),-1,4,"procNameM=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__main92DctLN_maplEintcOlongcOlesslEintgRcOallocatorlEpairlEconstsPintcOlonggRsPgRsPgR),G__defined_typename("map<int,long>"),-1,4,"nTryM=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__main92DctLN_maplEintcOlongcOlesslEintgRcOallocatorlEpairlEconstsPintcOlonggRsPgRsPgR),G__defined_typename("map<int,long>"),-1,4,"nSelM=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__main92DctLN_maplEintcOlongcOlesslEintgRcOallocatorlEpairlEconstsPintcOlonggRsPgRsPgR),G__defined_typename("map<int,long>"),-1,4,"nAccM=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__main92DctLN_maplEintcOdoublecOlesslEintgRcOallocatorlEpairlEconstsPintcOdoublegRsPgRsPgR),G__defined_typename("map<int,double>"),-1,4,"sigGenM=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__main92DctLN_maplEintcOdoublecOlesslEintgRcOallocatorlEpairlEconstsPintcOdoublegRsPgRsPgR),G__defined_typename("map<int,double>"),-1,4,"sigErrM=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"lhaStrategySave=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"a0MPISave=",0,(char*)NULL);
   G__memvar_setup((void*)0,103,0,0,-1,-1,-1,4,"isRes=",0,(char*)NULL);
   G__memvar_setup((void*)0,103,0,0,-1,-1,-1,4,"isDiffA=",0,(char*)NULL);
   G__memvar_setup((void*)0,103,0,0,-1,-1,-1,4,"isDiffB=",0,(char*)NULL);
   G__memvar_setup((void*)0,103,0,0,-1,-1,-1,4,"isDiffC=",0,(char*)NULL);
   G__memvar_setup((void*)0,103,0,0,-1,-1,-1,4,"isND=",0,(char*)NULL);
   G__memvar_setup((void*)0,103,0,0,-1,-1,-1,4,"isLH=",0,(char*)NULL);
   G__memvar_setup((void*)0,103,0,0,-1,-1,-1,4,"hasSubSave[4]=",0,(char*)NULL);
   G__memvar_setup((void*)0,103,0,0,-1,-1,-1,4,"bIsSet=",0,(char*)NULL);
   G__memvar_setup((void*)0,103,0,0,-1,-1,-1,4,"evolIsSet=",0,(char*)NULL);
   G__memvar_setup((void*)0,103,0,0,-1,-1,-1,4,"atEOF=",0,(char*)NULL);
   G__memvar_setup((void*)0,103,0,0,-1,-1,-1,4,"isVal1=",0,(char*)NULL);
   G__memvar_setup((void*)0,103,0,0,-1,-1,-1,4,"isVal2=",0,(char*)NULL);
   G__memvar_setup((void*)0,103,0,0,-1,-1,-1,4,"hasHistorySave=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"codeSave=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"codeSubSave[4]=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"nFinalSave=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"nFinalSubSave[4]=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"nTotal=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"id1Save[4]=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"id2Save[4]=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"id1pdfSave[4]=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"id2pdfSave[4]=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"nMPISave=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"nISRSave=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"nFSRinProcSave=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"nFSRinResSave=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"x1Save[4]=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"x2Save[4]=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"x1pdfSave[4]=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"x2pdfSave[4]=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"pdf1Save[4]=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"pdf2Save[4]=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"Q2FacSave[4]=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"alphaEMSave[4]=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"alphaSSave[4]=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"Q2RenSave[4]=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"scalupSave[4]=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"sH[4]=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"tH[4]=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"uH[4]=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"pTH[4]=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"m3H[4]=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"m4H[4]=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"thetaH[4]=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"phiH[4]=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"weightSave=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"bMPISave=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"enhanceMPISave=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"pTmaxMPISave=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"pTmaxISRSave=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"pTmaxFSRSave=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"pTnowSave=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"zNowISRSave=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"pT2NowISRSave=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__main92DctLN_string),-1,-1,4,"nameSave=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__main92DctLN_string),-1,-1,4,"nameSubSave[4]=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__main92DctLN_vectorlEintcOallocatorlEintgRsPgR),G__defined_typename("vector<int>"),-1,4,"codeMPISave=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__main92DctLN_vectorlEintcOallocatorlEintgRsPgR),G__defined_typename("vector<int>"),-1,4,"iAMPISave=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__main92DctLN_vectorlEintcOallocatorlEintgRsPgR),G__defined_typename("vector<int>"),-1,4,"iBMPISave=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__main92DctLN_vectorlEdoublecOallocatorlEdoublegRsPgR),G__defined_typename("vector<double>"),-1,4,"pTMPISave=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__main92DctLN_vectorlEdoublecOallocatorlEdoublegRsPgR),G__defined_typename("vector<double>"),-1,4,"eMPISave=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"counters[50]=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__main92DctLN_maplEstringcOintcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOintgRsPgRsPgR),G__defined_typename("map<string,int>"),-1,4,"messages=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__main92DctLN_maplEstringcOstringcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOstringgRsPgRsPgR),G__defined_typename("map<string,string>"),-1,4,"headers=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__main92DctLN_maplEstringcOpairlEvoidmUcOintgRcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOpairlEvoidmUcOintgRsPgRsPgRsPgR),G__defined_typename("map<string,pair<void*,int> >"),-1,4,"plugins=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"weightCKKWLSave=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"weightFIRSTSave=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* Pythia8::Settings */
static void G__setup_memvarPythia8cLcLSettings(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__main92DctLN_Pythia8cLcLSettings));
   { Pythia8::Settings *p; p=(Pythia8::Settings*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__main92DctLN_Pythia8cLcLInfo),-1,-1,4,"infoPtr=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__main92DctLN_maplEstringcOPythia8cLcLFlagcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOPythia8cLcLFlaggRsPgRsPgR),G__defined_typename("map<string,Flag>"),-1,4,"flags=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__main92DctLN_maplEstringcOPythia8cLcLModecOlesslEstringgRcOallocatorlEpairlEconstsPstringcOPythia8cLcLModegRsPgRsPgR),G__defined_typename("map<string,Mode>"),-1,4,"modes=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__main92DctLN_maplEstringcOPythia8cLcLParmcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOPythia8cLcLParmgRsPgRsPgR),G__defined_typename("map<string,Parm>"),-1,4,"parms=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__main92DctLN_maplEstringcOPythia8cLcLWordcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOPythia8cLcLWordgRsPgRsPgR),G__defined_typename("map<string,Word>"),-1,4,"words=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__main92DctLN_maplEstringcOPythia8cLcLFVeccOlesslEstringgRcOallocatorlEpairlEconstsPstringcOPythia8cLcLFVecgRsPgRsPgR),G__defined_typename("map<string,FVec>"),-1,4,"fvecs=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__main92DctLN_maplEstringcOPythia8cLcLMVeccOlesslEstringgRcOallocatorlEpairlEconstsPstringcOPythia8cLcLMVecgRsPgRsPgR),G__defined_typename("map<string,MVec>"),-1,4,"mvecs=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__main92DctLN_maplEstringcOPythia8cLcLPVeccOlesslEstringgRcOallocatorlEpairlEconstsPstringcOPythia8cLcLPVecgRsPgRsPgR),G__defined_typename("map<string,PVec>"),-1,4,"pvecs=",0,(char*)NULL);
   G__memvar_setup((void*)0,103,0,0,-1,-1,-1,4,"isInit=",0,(char*)NULL);
   G__memvar_setup((void*)0,103,0,0,-1,-1,-1,4,"readingFailedSave=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* Pythia8::AlphaStrong */
static void G__setup_memvarPythia8cLcLAlphaStrong(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__main92DctLN_Pythia8cLcLAlphaStrong));
   { Pythia8::AlphaStrong *p; p=(Pythia8::AlphaStrong*)0x1000; if (p) { }
   G__memvar_setup((void*)0,108,0,0,-1,-1,-1,4,"G__virtualinfo=",0,(char*)NULL);
   G__memvar_setup((void*)0,103,0,0,-1,-1,-1,2,"isInit=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,2,"order=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,2,"nfmax=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,2,"Lambda3Save=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,2,"Lambda4Save=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,2,"Lambda5Save=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,2,"Lambda6Save=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,2,"Lambda3Save2=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,2,"Lambda4Save2=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,2,"Lambda5Save2=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,2,"Lambda6Save2=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,2,"scale2Min=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,1,-1,-1,-2,2,"MC=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,1,-1,-1,-2,2,"MB=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,1,-1,-1,-2,2,"MZ=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,1,-1,-1,-2,2,"MT=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,2,"mc2=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,2,"mb2=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,2,"mt2=",0,(char*)NULL);
   G__memvar_setup((void*)0,103,0,0,-1,-1,-1,2,"useCMW=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,1,-1,-1,-2,2,"FACCMW3=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,1,-1,-1,-2,2,"FACCMW4=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,1,-1,-1,-2,2,"FACCMW5=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,1,-1,-1,-2,2,"FACCMW6=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,1,-1,-1,-2,2,"SAFETYMARGIN1=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,1,-1,-1,-2,2,"SAFETYMARGIN2=",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,-1,-1,-2,4,"NITER=0LL",0,(char*)NULL);
   G__memvar_setup((void*)0,103,0,0,-1,-1,-1,4,"lastCallToFull=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"valueRef=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"valueNow=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"scale2Now=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* Pythia8::AlphaEM */
static void G__setup_memvarPythia8cLcLAlphaEM(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__main92DctLN_Pythia8cLcLAlphaEM));
   { Pythia8::AlphaEM *p; p=(Pythia8::AlphaEM*)0x1000; if (p) { }
   G__memvar_setup((void*)0,100,0,1,-1,-1,-2,4,"MZ=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,1,-1,-1,-2,4,"Q2STEP[5]=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,1,-1,-1,-2,4,"BRUNDEF[5]=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"order=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"alpEM0=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"alpEMmZ=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"mZ2=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"bRun[5]=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"alpEMstep[5]=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* Pythia8::CoupSM */
static void G__setup_memvarPythia8cLcLCoupSM(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__main92DctLN_Pythia8cLcLCoupSM));
   { Pythia8::CoupSM *p; p=(Pythia8::CoupSM*)0x1000; if (p) { }
   G__memvar_setup((void*)0,100,0,1,-1,-1,-2,2,"efSave[20]=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,1,-1,-1,-2,2,"afSave[20]=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,2,"s2tW=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,2,"c2tW=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,2,"s2tWbar=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,2,"GFermi=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,2,"vfSave[20]=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,2,"lfSave[20]=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,2,"rfSave[20]=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,2,"ef2Save[20]=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,2,"vf2Save[20]=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,2,"af2Save[20]=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,2,"efvfSave[20]=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,2,"vf2af2Save[20]=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,2,"VCKMsave[5][5]=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,2,"V2CKMsave[5][5]=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,2,"V2CKMout[20]=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__main92DctLN_Pythia8cLcLRndm),-1,-1,2,"rndmPtr=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__main92DctLN_Pythia8cLcLAlphaStrong),-1,-1,2,"alphaSlocal=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__main92DctLN_Pythia8cLcLAlphaEM),-1,-1,2,"alphaEMlocal=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* Pythia8::Couplings */
static void G__setup_memvarPythia8cLcLCouplings(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__main92DctLN_Pythia8cLcLCouplings));
   { Pythia8::Couplings *p; p=(Pythia8::Couplings*)0x1000; if (p) { }
   G__memvar_setup((void*)((long)(&p->isSUSY)-(long)(p)),103,0,0,-1,-1,-1,1,"isSUSY=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* Pythia8::ParticleData */
static void G__setup_memvarPythia8cLcLParticleData(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__main92DctLN_Pythia8cLcLParticleData));
   { Pythia8::ParticleData *p; p=(Pythia8::ParticleData*)0x1000; if (p) { }
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"modeBreitWigner=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"maxEnhanceBW=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"mQRun[7]=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"Lambda5Run=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__main92DctLN_Pythia8cLcLInfo),-1,-1,4,"infoPtr=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__main92DctLN_Pythia8cLcLSettings),-1,-1,4,"settingsPtr=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__main92DctLN_Pythia8cLcLRndm),-1,-1,4,"rndmPtr=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__main92DctLN_Pythia8cLcLCouplings),-1,-1,4,"couplingsPtr=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__main92DctLN_maplEintcOPythia8cLcLParticleDataEntrycOlesslEintgRcOallocatorlEpairlEconstsPintcOPythia8cLcLParticleDataEntrygRsPgRsPgR),G__defined_typename("map<int,ParticleDataEntry>"),-1,4,"pdt=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__main92DctLN_Pythia8cLcLParticleDataEntry),-1,-1,4,"particlePtr=",0,(char*)NULL);
   G__memvar_setup((void*)0,103,0,0,-1,-1,-1,4,"isInit=",0,(char*)NULL);
   G__memvar_setup((void*)0,103,0,0,-1,-1,-1,4,"readingFailedSave=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* Pythia8::ResonanceWidths */
static void G__setup_memvarPythia8cLcLResonanceWidths(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__main92DctLN_Pythia8cLcLResonanceWidths));
   { Pythia8::ResonanceWidths *p; p=(Pythia8::ResonanceWidths*)0x1000; if (p) { }
   G__memvar_setup((void*)0,108,0,0,-1,-1,-1,4,"G__virtualinfo=",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,-1,-1,-2,2,"NPOINT=0LL",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,1,-1,-1,-2,2,"MASSMIN=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,1,-1,-1,-2,2,"MASSMARGIN=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,2,"idRes=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,2,"hasAntiRes=",0,(char*)NULL);
   G__memvar_setup((void*)0,103,0,0,-1,-1,-1,2,"doForceWidth=",0,(char*)NULL);
   G__memvar_setup((void*)0,103,0,0,-1,-1,-1,2,"isGeneric=",0,(char*)NULL);
   G__memvar_setup((void*)0,103,0,0,-1,-1,-1,2,"allowCalcWidth=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,2,"minWidth=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,2,"minThreshold=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,2,"mRes=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,2,"GammaRes=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,2,"m2Res=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,2,"GamMRat=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,2,"openPos=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,2,"openNeg=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,2,"forceFactor=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,2,"iChannel=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,2,"onMode=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,2,"meMode=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,2,"mult=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,2,"id1=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,2,"id2=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,2,"id3=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,2,"id1Abs=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,2,"id2Abs=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,2,"id3Abs=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,2,"idInFlav=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,2,"widNow=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,2,"mHat=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,2,"mf1=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,2,"mf2=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,2,"mf3=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,2,"mr1=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,2,"mr2=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,2,"mr3=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,2,"ps=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,2,"kinFac=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,2,"alpEM=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,2,"alpS=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,2,"colQ=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,2,"preFac=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__main92DctLN_Pythia8cLcLParticleDataEntry),-1,-1,2,"particlePtr=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__main92DctLN_Pythia8cLcLInfo),-1,-1,2,"infoPtr=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__main92DctLN_Pythia8cLcLSettings),-1,-1,2,"settingsPtr=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__main92DctLN_Pythia8cLcLParticleData),-1,-1,2,"particleDataPtr=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__main92DctLN_Pythia8cLcLCouplings),-1,-1,2,"couplingsPtr=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* Pythia8::DecayChannel */
static void G__setup_memvarPythia8cLcLDecayChannel(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__main92DctLN_Pythia8cLcLDecayChannel));
   { Pythia8::DecayChannel *p; p=(Pythia8::DecayChannel*)0x1000; if (p) { }
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"onModeSave=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"bRatioSave=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"currentBRSave=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"onShellWidthSave=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"openSecPos=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"openSecNeg=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"meModeSave=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"nProd=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"prod[8]=",0,(char*)NULL);
   G__memvar_setup((void*)0,103,0,0,-1,-1,-1,4,"hasChangedSave=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* Pythia8::ParticleDataEntry */
static void G__setup_memvarPythia8cLcLParticleDataEntry(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__main92DctLN_Pythia8cLcLParticleDataEntry));
   { Pythia8::ParticleDataEntry *p; p=(Pythia8::ParticleDataEntry*)0x1000; if (p) { }
   G__memvar_setup((void*)G__PVOID,105,0,1,-1,-1,-2,4,"INVISIBLENUMBER=0LL",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,1,-1,-1,-2,4,"INVISIBLETABLE[50]=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,1,-1,-1,-2,4,"KNOWNNOWIDTH[3]=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,1,-1,-1,-2,4,"MAXTAU0FORDECAY=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,1,-1,-1,-2,4,"MINMASSRESONANCE=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,1,-1,-1,-2,4,"NARROWMASS=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,1,-1,-1,-2,4,"CONSTITUENTMASSTABLE[10]=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"idSave=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__main92DctLN_string),-1,-1,4,"nameSave=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__main92DctLN_string),-1,-1,4,"antiNameSave=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"spinTypeSave=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"chargeTypeSave=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"colTypeSave=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"m0Save=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"mWidthSave=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"mMinSave=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"mMaxSave=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"tau0Save=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"constituentMassSave=",0,(char*)NULL);
   G__memvar_setup((void*)0,103,0,0,-1,-1,-1,4,"hasAntiSave=",0,(char*)NULL);
   G__memvar_setup((void*)0,103,0,0,-1,-1,-1,4,"isResonanceSave=",0,(char*)NULL);
   G__memvar_setup((void*)0,103,0,0,-1,-1,-1,4,"mayDecaySave=",0,(char*)NULL);
   G__memvar_setup((void*)0,103,0,0,-1,-1,-1,4,"doExternalDecaySave=",0,(char*)NULL);
   G__memvar_setup((void*)0,103,0,0,-1,-1,-1,4,"isVisibleSave=",0,(char*)NULL);
   G__memvar_setup((void*)0,103,0,0,-1,-1,-1,4,"doForceWidthSave=",0,(char*)NULL);
   G__memvar_setup((void*)0,103,0,0,-1,-1,-1,4,"hasChangedSave=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"modeBWnow=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"atanLow=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"atanDif=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"mThr=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__main92DctLN_vectorlEPythia8cLcLDecayChannelcOallocatorlEPythia8cLcLDecayChannelgRsPgR),G__defined_typename("vector<DecayChannel>"),-1,4,"channels=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"currentBRSum=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__main92DctLN_Pythia8cLcLResonanceWidths),-1,-1,4,"resonancePtr=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__main92DctLN_Pythia8cLcLParticleData),-1,-1,4,"particleDataPtr=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* pair<int,Pythia8::ParticleDataEntry> */
static void G__setup_memvarpairlEintcOPythia8cLcLParticleDataEntrygR(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__main92DctLN_pairlEintcOPythia8cLcLParticleDataEntrygR));
   { pair<int,Pythia8::ParticleDataEntry> *p; p=(pair<int,Pythia8::ParticleDataEntry>*)0x1000; if (p) { }
   G__memvar_setup((void*)((long)(&p->first)-(long)(p)),105,0,0,-1,-1,-1,1,"first=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->second)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__main92DctLN_Pythia8cLcLParticleDataEntry),-1,-1,1,"second=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* Pythia8::Event */
static void G__setup_memvarPythia8cLcLEvent(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__main92DctLN_Pythia8cLcLEvent));
   { Pythia8::Event *p; p=(Pythia8::Event*)0x1000; if (p) { }
   G__memvar_setup((void*)G__PVOID,105,0,1,-1,-1,-2,4,"IPERLINE=0LL",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"startColTag=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__main92DctLN_vectorlEPythia8cLcLParticlecOallocatorlEPythia8cLcLParticlegRsPgR),G__defined_typename("vector<Pythia8::Particle>"),-1,4,"entry=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__main92DctLN_vectorlEPythia8cLcLJunctioncOallocatorlEPythia8cLcLJunctiongRsPgR),G__defined_typename("vector<Pythia8::Junction>"),-1,4,"junction=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"maxColTag=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"savedSize=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"savedJunctionSize=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"scaleSave=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"scaleSecondSave=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__main92DctLN_string),-1,-1,4,"headerList=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__main92DctLN_Pythia8cLcLParticleData),-1,-1,4,"particleDataPtr=",0,"!");
   }
   G__tag_memvar_reset();
}


   /* Pythia8::Particle */
static void G__setup_memvarPythia8cLcLParticle(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__main92DctLN_Pythia8cLcLParticle));
   { Pythia8::Particle *p; p=(Pythia8::Particle*)0x1000; if (p) { }
   G__memvar_setup((void*)0,108,0,0,-1,-1,-1,4,"G__virtualinfo=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,1,-1,-1,-2,2,"TINY=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,2,"idSave=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,2,"statusSave=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,2,"mother1Save=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,2,"mother2Save=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,2,"daughter1Save=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,2,"daughter2Save=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,2,"colSave=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,2,"acolSave=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__main92DctLN_Pythia8cLcLVec4),-1,-1,2,"pSave=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,2,"mSave=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,2,"scaleSave=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,2,"polSave=",0,(char*)NULL);
   G__memvar_setup((void*)0,103,0,0,-1,-1,-1,2,"hasVertexSave=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__main92DctLN_Pythia8cLcLVec4),-1,-1,2,"vProdSave=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,2,"tauSave=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__main92DctLN_Pythia8cLcLParticleDataEntry),-1,-1,2,"pdePtr=",0,"!");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__main92DctLN_Pythia8cLcLEvent),-1,-1,2,"evtPtr=",0,"!");
   }
   G__tag_memvar_reset();
}


   /* Pythia8::Junction */
static void G__setup_memvarPythia8cLcLJunction(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__main92DctLN_Pythia8cLcLJunction));
   { Pythia8::Junction *p; p=(Pythia8::Junction*)0x1000; if (p) { }
   G__memvar_setup((void*)0,103,0,0,-1,-1,-1,4,"remainsSave=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"kindSave=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"colSave[3]=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"endColSave[3]=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"statusSave[3]=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* Pythia8::ResonanceGeneric */
static void G__setup_memvarPythia8cLcLResonanceGeneric(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__main92DctLN_Pythia8cLcLResonanceGeneric));
   { Pythia8::ResonanceGeneric *p; p=(Pythia8::ResonanceGeneric*)0x1000; if (p) { }
   }
   G__tag_memvar_reset();
}


   /* Pythia8::ResonanceGmZ */
static void G__setup_memvarPythia8cLcLResonanceGmZ(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__main92DctLN_Pythia8cLcLResonanceGmZ));
   { Pythia8::ResonanceGmZ *p; p=(Pythia8::ResonanceGmZ*)0x1000; if (p) { }
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"gmZmode=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"thetaWRat=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"ei2=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"eivi=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"vi2ai2=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"gamNorm=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"intNorm=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"resNorm=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* Pythia8::ResonanceW */
static void G__setup_memvarPythia8cLcLResonanceW(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__main92DctLN_Pythia8cLcLResonanceW));
   { Pythia8::ResonanceW *p; p=(Pythia8::ResonanceW*)0x1000; if (p) { }
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"thetaWRat=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"alpEM=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* Pythia8::ResonanceTop */
static void G__setup_memvarPythia8cLcLResonanceTop(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__main92DctLN_Pythia8cLcLResonanceTop));
   { Pythia8::ResonanceTop *p; p=(Pythia8::ResonanceTop*)0x1000; if (p) { }
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"thetaWRat=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"m2W=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"tanBeta=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"tan2Beta=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"mbRun=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* Pythia8::ResonanceFour */
static void G__setup_memvarPythia8cLcLResonanceFour(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__main92DctLN_Pythia8cLcLResonanceFour));
   { Pythia8::ResonanceFour *p; p=(Pythia8::ResonanceFour*)0x1000; if (p) { }
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"thetaWRat=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"m2W=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* Pythia8::ResonanceH */
static void G__setup_memvarPythia8cLcLResonanceH(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__main92DctLN_Pythia8cLcLResonanceH));
   { Pythia8::ResonanceH *p; p=(Pythia8::ResonanceH*)0x1000; if (p) { }
   G__memvar_setup((void*)0,100,0,1,-1,-1,-2,4,"MASSMINWZ=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,1,-1,-1,-2,4,"MASSMINT=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,1,-1,-1,-2,4,"GAMMAMARGIN=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"higgsType=",0,(char*)NULL);
   G__memvar_setup((void*)0,103,0,0,-1,-1,-1,4,"useCubicWidth=",0,(char*)NULL);
   G__memvar_setup((void*)0,103,0,0,-1,-1,-1,4,"useRunLoopMass=",0,(char*)NULL);
   G__memvar_setup((void*)0,103,0,0,-1,-1,-1,4,"useNLOWidths=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"sin2tW=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"cos2tW=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"mT=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"mZ=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"mW=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"mHchg=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"GammaT=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"GammaZ=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"GammaW=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"rescAlpS=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"rescColQ=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"coup2d=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"coup2u=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"coup2l=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"coup2Z=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"coup2W=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"coup2Hchg=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"coup2H1H1=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"coup2A3A3=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"coup2H1Z=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"coup2A3Z=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"coup2A3H1=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"coup2HchgW=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"mLowT=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"mStepT=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"mLowZ=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"mStepZ=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"mLowW=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"mStepW=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"kinFacT[101]=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"kinFacZ[101]=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"kinFacW[101]=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* Pythia8::ResonanceHchg */
static void G__setup_memvarPythia8cLcLResonanceHchg(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__main92DctLN_Pythia8cLcLResonanceHchg));
   { Pythia8::ResonanceHchg *p; p=(Pythia8::ResonanceHchg*)0x1000; if (p) { }
   G__memvar_setup((void*)0,103,0,0,-1,-1,-1,4,"useCubicWidth=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"thetaWRat=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"mW=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"tanBeta=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"tan2Beta=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"coup2H1W=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* Pythia8::ResonanceZprime */
static void G__setup_memvarPythia8cLcLResonanceZprime(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__main92DctLN_Pythia8cLcLResonanceZprime));
   { Pythia8::ResonanceZprime *p; p=(Pythia8::ResonanceZprime*)0x1000; if (p) { }
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"gmZmode=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"maxZpGen=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"sin2tW=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"cos2tW=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"thetaWRat=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"mZ=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"GammaZ=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"m2Z=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"GamMRatZ=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"afZp[20]=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"vfZp[20]=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"coupZpWW=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"ei2=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"eivi=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"vai2=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"eivpi=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"vaivapi=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"vapi2=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"gamNorm=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"gamZNorm=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"ZNorm=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"gamZpNorm=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"ZZpNorm=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"ZpNorm=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* Pythia8::ResonanceWprime */
static void G__setup_memvarPythia8cLcLResonanceWprime(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__main92DctLN_Pythia8cLcLResonanceWprime));
   { Pythia8::ResonanceWprime *p; p=(Pythia8::ResonanceWprime*)0x1000; if (p) { }
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"thetaWRat=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"cos2tW=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"alpEM=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"aqWp=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"vqWp=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"alWp=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"vlWp=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"coupWpWZ=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* Pythia8::ResonanceRhorizontal */
static void G__setup_memvarPythia8cLcLResonanceRhorizontal(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__main92DctLN_Pythia8cLcLResonanceRhorizontal));
   { Pythia8::ResonanceRhorizontal *p; p=(Pythia8::ResonanceRhorizontal*)0x1000; if (p) { }
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"thetaWRat=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* Pythia8::ResonanceExcited */
static void G__setup_memvarPythia8cLcLResonanceExcited(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__main92DctLN_Pythia8cLcLResonanceExcited));
   { Pythia8::ResonanceExcited *p; p=(Pythia8::ResonanceExcited*)0x1000; if (p) { }
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"Lambda=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"coupF=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"coupFprime=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"coupFcol=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"sin2tW=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"cos2tW=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* Pythia8::ResonanceGraviton */
static void G__setup_memvarPythia8cLcLResonanceGraviton(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__main92DctLN_Pythia8cLcLResonanceGraviton));
   { Pythia8::ResonanceGraviton *p; p=(Pythia8::ResonanceGraviton*)0x1000; if (p) { }
   G__memvar_setup((void*)0,103,0,0,-1,-1,-1,4,"eDsmbulk=",0,(char*)NULL);
   G__memvar_setup((void*)0,103,0,0,-1,-1,-1,4,"eDvlvl=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"kappaMG=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"eDcoupling[27]=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* Pythia8::ResonanceLeptoquark */
static void G__setup_memvarPythia8cLcLResonanceLeptoquark(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__main92DctLN_Pythia8cLcLResonanceLeptoquark));
   { Pythia8::ResonanceLeptoquark *p; p=(Pythia8::ResonanceLeptoquark*)0x1000; if (p) { }
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"kCoup=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* Pythia8::ResonanceNuRight */
static void G__setup_memvarPythia8cLcLResonanceNuRight(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__main92DctLN_Pythia8cLcLResonanceNuRight));
   { Pythia8::ResonanceNuRight *p; p=(Pythia8::ResonanceNuRight*)0x1000; if (p) { }
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"thetaWRat=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"mWR=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* Pythia8::ResonanceZRight */
static void G__setup_memvarPythia8cLcLResonanceZRight(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__main92DctLN_Pythia8cLcLResonanceZRight));
   { Pythia8::ResonanceZRight *p; p=(Pythia8::ResonanceZRight*)0x1000; if (p) { }
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"sin2tW=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"thetaWRat=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* Pythia8::ResonanceWRight */
static void G__setup_memvarPythia8cLcLResonanceWRight(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__main92DctLN_Pythia8cLcLResonanceWRight));
   { Pythia8::ResonanceWRight *p; p=(Pythia8::ResonanceWRight*)0x1000; if (p) { }
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"thetaWRat=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* Pythia8::ResonanceHchgchgLeft */
static void G__setup_memvarPythia8cLcLResonanceHchgchgLeft(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__main92DctLN_Pythia8cLcLResonanceHchgchgLeft));
   { Pythia8::ResonanceHchgchgLeft *p; p=(Pythia8::ResonanceHchgchgLeft*)0x1000; if (p) { }
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"yukawa[4][4]=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"gL=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"vL=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"mW=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* Pythia8::ResonanceHchgchgRight */
static void G__setup_memvarPythia8cLcLResonanceHchgchgRight(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__main92DctLN_Pythia8cLcLResonanceHchgchgRight));
   { Pythia8::ResonanceHchgchgRight *p; p=(Pythia8::ResonanceHchgchgRight*)0x1000; if (p) { }
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"idWR=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"yukawa[4][4]=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"gR=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* Pythia8::InBeam */
static void G__setup_memvarPythia8cLcLInBeam(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__main92DctLN_Pythia8cLcLInBeam));
   { Pythia8::InBeam *p; p=(Pythia8::InBeam*)0x1000; if (p) { }
   G__memvar_setup((void*)((long)(&p->id)-(long)(p)),105,0,0,-1,-1,-1,1,"id=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->pdf)-(long)(p)),100,0,0,-1,-1,-1,1,"pdf=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* Pythia8::InPair */
static void G__setup_memvarPythia8cLcLInPair(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__main92DctLN_Pythia8cLcLInPair));
   { Pythia8::InPair *p; p=(Pythia8::InPair*)0x1000; if (p) { }
   G__memvar_setup((void*)((long)(&p->idA)-(long)(p)),105,0,0,-1,-1,-1,1,"idA=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->idB)-(long)(p)),105,0,0,-1,-1,-1,1,"idB=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->pdfA)-(long)(p)),100,0,0,-1,-1,-1,1,"pdfA=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->pdfB)-(long)(p)),100,0,0,-1,-1,-1,1,"pdfB=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->pdfSigma)-(long)(p)),100,0,0,-1,-1,-1,1,"pdfSigma=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* Pythia8::SigmaProcess */
static void G__setup_memvarPythia8cLcLSigmaProcess(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__main92DctLN_Pythia8cLcLSigmaProcess));
   { Pythia8::SigmaProcess *p; p=(Pythia8::SigmaProcess*)0x1000; if (p) { }
   G__memvar_setup((void*)0,108,0,0,-1,-1,-1,4,"G__virtualinfo=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,1,-1,-1,-2,2,"CONVERT2MB=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,1,-1,-1,-2,2,"MASSMARGIN=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,1,-1,-1,-2,2,"COMPRELERR=",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,-1,-1,-2,2,"NCOMPSTEP=0LL",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__main92DctLN_Pythia8cLcLInfo),-1,-1,2,"infoPtr=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__main92DctLN_Pythia8cLcLSettings),-1,-1,2,"settingsPtr=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__main92DctLN_Pythia8cLcLParticleData),-1,-1,2,"particleDataPtr=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__main92DctLN_Pythia8cLcLRndm),-1,-1,2,"rndmPtr=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__main92DctLN_Pythia8cLcLBeamParticle),-1,-1,2,"beamAPtr=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__main92DctLN_Pythia8cLcLBeamParticle),-1,-1,2,"beamBPtr=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__main92DctLN_Pythia8cLcLCouplings),-1,-1,2,"couplingsPtr=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__main92DctLN_Pythia8cLcLSigmaTotal),-1,-1,2,"sigmaTotPtr=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__main92DctLN_Pythia8cLcLSusyLesHouches),-1,-1,2,"slhaPtr=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__main92DctLN_Pythia8cLcLLHAup),-1,-1,2,"lhaUpPtr=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,2,"nQuarkIn=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,2,"renormScale1=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,2,"renormScale2=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,2,"renormScale3=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,2,"renormScale3VV=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,2,"factorScale1=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,2,"factorScale2=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,2,"factorScale3=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,2,"factorScale3VV=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,2,"Kfactor=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,2,"mcME=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,2,"mbME=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,2,"mmuME=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,2,"mtauME=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,2,"renormMultFac=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,2,"renormFixScale=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,2,"factorMultFac=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,2,"factorFixScale=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,2,"higgsH1parity=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,2,"higgsH2parity=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,2,"higgsA3parity=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,2,"higgsH1eta=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,2,"higgsH2eta=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,2,"higgsA3eta=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,2,"higgsH1phi=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,2,"higgsH2phi=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,2,"higgsA3phi=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,2,"idA=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,2,"idB=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,2,"mA=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,2,"mB=",0,(char*)NULL);
   G__memvar_setup((void*)0,103,0,0,-1,-1,-1,2,"isLeptonA=",0,(char*)NULL);
   G__memvar_setup((void*)0,103,0,0,-1,-1,-1,2,"isLeptonB=",0,(char*)NULL);
   G__memvar_setup((void*)0,103,0,0,-1,-1,-1,2,"hasLeptonBeams=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__main92DctLN_vectorlEPythia8cLcLInBeamcOallocatorlEPythia8cLcLInBeamgRsPgR),G__defined_typename("vector<InBeam>"),-1,2,"inBeamA=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__main92DctLN_vectorlEPythia8cLcLInBeamcOallocatorlEPythia8cLcLInBeamgRsPgR),G__defined_typename("vector<InBeam>"),-1,2,"inBeamB=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__main92DctLN_vectorlEPythia8cLcLInPaircOallocatorlEPythia8cLcLInPairgRsPgR),G__defined_typename("vector<InPair>"),-1,2,"inPair=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,2,"mH=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,2,"sH=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,2,"sH2=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,2,"Q2RenSave=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,2,"alpEM=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,2,"alpS=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,2,"Q2FacSave=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,2,"x1Save=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,2,"x2Save=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,2,"pdf1Save=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,2,"pdf2Save=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,2,"sigmaSumSave=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,2,"id1=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,2,"id2=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,2,"id3=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,2,"id4=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,2,"id5=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,2,"idSave[6]=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,2,"colSave[6]=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,2,"acolSave[6]=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,2,"mSave[6]=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,2,"cosTheta=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,2,"sinTheta=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,2,"phi=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,2,"sHMass=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,2,"sHBeta=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,2,"pT2Mass=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,2,"pTFin=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__main92DctLN_Pythia8cLcLParticle),-1,-1,2,"parton[6]=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__main92DctLN_Pythia8cLcLParticle),-1,-1,2,"partonT[6]=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,2,"mSaveT[6]=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,2,"pTFinT=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,2,"cosThetaT=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,2,"sinThetaT=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,2,"phiT=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,2,"mME[5]=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__main92DctLN_Pythia8cLcLVec4),-1,-1,2,"pME[5]=",0,(char*)NULL);
   G__memvar_setup((void*)0,103,0,0,-1,-1,-1,2,"swapTU=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* Pythia8::Pythia */
static void G__setup_memvarPythia8cLcLPythia(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__main92DctLN_Pythia8cLcLPythia));
   { Pythia8::Pythia *p; p=(Pythia8::Pythia*)0x1000; if (p) { }
   G__memvar_setup((void*)((long)(&p->process)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__main92DctLN_Pythia8cLcLEvent),-1,-1,1,"process=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->event)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__main92DctLN_Pythia8cLcLEvent),-1,-1,1,"event=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->info)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__main92DctLN_Pythia8cLcLInfo),-1,-1,1,"info=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->settings)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__main92DctLN_Pythia8cLcLSettings),-1,-1,1,"settings=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->particleData)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__main92DctLN_Pythia8cLcLParticleData),-1,-1,1,"particleData=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->rndm)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__main92DctLN_Pythia8cLcLRndm),-1,-1,1,"rndm=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->couplings)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__main92DctLN_Pythia8cLcLCouplings),-1,-1,1,"couplings=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->couplingsPtr)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__main92DctLN_Pythia8cLcLCouplings),-1,-1,1,"couplingsPtr=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->slhaInterface)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__main92DctLN_Pythia8cLcLSLHAinterface),-1,-1,1,"slhaInterface=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->partonSystems)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__main92DctLN_Pythia8cLcLPartonSystems),-1,-1,1,"partonSystems=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->merging)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__main92DctLN_Pythia8cLcLMerging),-1,-1,1,"merging=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->mergingHooksPtr)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__main92DctLN_Pythia8cLcLMergingHooks),-1,-1,1,"mergingHooksPtr=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,1,-1,-1,-2,4,"VERSIONNUMBERCODE=",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,-1,-1,-2,4,"NTRY=0LL",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,-1,-1,-2,4,"SUBRUNDEFAULT=0LL",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__main92DctLN_string),-1,-1,4,"xmlPath=",0,(char*)NULL);
   G__memvar_setup((void*)0,103,0,0,-1,-1,-1,4,"doProcessLevel=",0,(char*)NULL);
   G__memvar_setup((void*)0,103,0,0,-1,-1,-1,4,"doPartonLevel=",0,(char*)NULL);
   G__memvar_setup((void*)0,103,0,0,-1,-1,-1,4,"doHadronLevel=",0,(char*)NULL);
   G__memvar_setup((void*)0,103,0,0,-1,-1,-1,4,"doDiffraction=",0,(char*)NULL);
   G__memvar_setup((void*)0,103,0,0,-1,-1,-1,4,"doResDec=",0,(char*)NULL);
   G__memvar_setup((void*)0,103,0,0,-1,-1,-1,4,"doFSRinRes=",0,(char*)NULL);
   G__memvar_setup((void*)0,103,0,0,-1,-1,-1,4,"decayRHadrons=",0,(char*)NULL);
   G__memvar_setup((void*)0,103,0,0,-1,-1,-1,4,"abortIfVeto=",0,(char*)NULL);
   G__memvar_setup((void*)0,103,0,0,-1,-1,-1,4,"checkEvent=",0,(char*)NULL);
   G__memvar_setup((void*)0,103,0,0,-1,-1,-1,4,"checkHistory=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"nErrList=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"epTolErr=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"epTolWarn=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"mTolErr=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"mTolWarn=",0,(char*)NULL);
   G__memvar_setup((void*)0,103,0,0,-1,-1,-1,4,"isConstructed=",0,(char*)NULL);
   G__memvar_setup((void*)0,103,0,0,-1,-1,-1,4,"isInit=",0,(char*)NULL);
   G__memvar_setup((void*)0,103,0,0,-1,-1,-1,4,"isUnresolvedA=",0,(char*)NULL);
   G__memvar_setup((void*)0,103,0,0,-1,-1,-1,4,"isUnresolvedB=",0,(char*)NULL);
   G__memvar_setup((void*)0,103,0,0,-1,-1,-1,4,"showSaV=",0,(char*)NULL);
   G__memvar_setup((void*)0,103,0,0,-1,-1,-1,4,"showMaD=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"idA=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"idB=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"frameType=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"boostType=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"nCount=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"nShowLHA=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"nShowInfo=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"nShowProc=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"nShowEvt=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"mA=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"mB=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"pxA=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"pxB=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"pyA=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"pyB=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"pzA=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"pzB=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"eA=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"eB=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"pzAcm=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"pzBcm=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"eCM=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"betaZ=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"gammaZ=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__main92DctLN_Pythia8cLcLVec4),-1,-1,4,"pAinit=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__main92DctLN_Pythia8cLcLVec4),-1,-1,4,"pBinit=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__main92DctLN_Pythia8cLcLVec4),-1,-1,4,"pAnow=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__main92DctLN_Pythia8cLcLVec4),-1,-1,4,"pBnow=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__main92DctLN_Pythia8cLcLRotBstMatrix),-1,-1,4,"MfromCM=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__main92DctLN_Pythia8cLcLRotBstMatrix),-1,-1,4,"MtoCM=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"nErrEvent=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__main92DctLN_vectorlEintcOallocatorlEintgRsPgR),G__defined_typename("vector<int>"),-1,4,"iErrId=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__main92DctLN_vectorlEintcOallocatorlEintgRsPgR),G__defined_typename("vector<int>"),-1,4,"iErrCol=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__main92DctLN_vectorlEintcOallocatorlEintgRsPgR),G__defined_typename("vector<int>"),-1,4,"iErrEpm=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__main92DctLN_vectorlEintcOallocatorlEintgRsPgR),G__defined_typename("vector<int>"),-1,4,"iErrNan=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__main92DctLN_vectorlEintcOallocatorlEintgRsPgR),G__defined_typename("vector<int>"),-1,4,"iErrNanVtx=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__main92DctLN_Pythia8cLcLPDF),-1,-1,4,"pdfAPtr=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__main92DctLN_Pythia8cLcLPDF),-1,-1,4,"pdfBPtr=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__main92DctLN_Pythia8cLcLPDF),-1,-1,4,"pdfHardAPtr=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__main92DctLN_Pythia8cLcLPDF),-1,-1,4,"pdfHardBPtr=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__main92DctLN_Pythia8cLcLPDF),-1,-1,4,"pdfPomAPtr=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__main92DctLN_Pythia8cLcLPDF),-1,-1,4,"pdfPomBPtr=",0,(char*)NULL);
   G__memvar_setup((void*)0,103,0,0,-1,-1,-1,4,"useNewPdfA=",0,(char*)NULL);
   G__memvar_setup((void*)0,103,0,0,-1,-1,-1,4,"useNewPdfB=",0,(char*)NULL);
   G__memvar_setup((void*)0,103,0,0,-1,-1,-1,4,"useNewPdfHard=",0,(char*)NULL);
   G__memvar_setup((void*)0,103,0,0,-1,-1,-1,4,"useNewPdfPomA=",0,(char*)NULL);
   G__memvar_setup((void*)0,103,0,0,-1,-1,-1,4,"useNewPdfPomB=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__main92DctLN_Pythia8cLcLBeamParticle),-1,-1,4,"beamA=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__main92DctLN_Pythia8cLcLBeamParticle),-1,-1,4,"beamB=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__main92DctLN_Pythia8cLcLBeamParticle),-1,-1,4,"beamPomA=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__main92DctLN_Pythia8cLcLBeamParticle),-1,-1,4,"beamPomB=",0,(char*)NULL);
   G__memvar_setup((void*)0,103,0,0,-1,-1,-1,4,"doLHA=",0,(char*)NULL);
   G__memvar_setup((void*)0,103,0,0,-1,-1,-1,4,"useNewLHA=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__main92DctLN_Pythia8cLcLLHAup),-1,-1,4,"lhaUpPtr=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__main92DctLN_Pythia8cLcLDecayHandler),-1,-1,4,"decayHandlePtr=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__main92DctLN_vectorlEintcOallocatorlEintgRsPgR),G__defined_typename("vector<int>"),-1,4,"handledParticles=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__main92DctLN_Pythia8cLcLUserHooks),-1,-1,4,"userHooksPtr=",0,(char*)NULL);
   G__memvar_setup((void*)0,103,0,0,-1,-1,-1,4,"hasUserHooks=",0,(char*)NULL);
   G__memvar_setup((void*)0,103,0,0,-1,-1,-1,4,"doVetoProcess=",0,(char*)NULL);
   G__memvar_setup((void*)0,103,0,0,-1,-1,-1,4,"doVetoPartons=",0,(char*)NULL);
   G__memvar_setup((void*)0,103,0,0,-1,-1,-1,4,"retryPartonLevel=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__main92DctLN_Pythia8cLcLBeamShape),-1,-1,4,"beamShapePtr=",0,(char*)NULL);
   G__memvar_setup((void*)0,103,0,0,-1,-1,-1,4,"useNewBeamShape=",0,(char*)NULL);
   G__memvar_setup((void*)0,103,0,0,-1,-1,-1,4,"doMomentumSpread=",0,(char*)NULL);
   G__memvar_setup((void*)0,103,0,0,-1,-1,-1,4,"doVertexSpread=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__main92DctLN_vectorlEPythia8cLcLSigmaProcessmUcOallocatorlEPythia8cLcLSigmaProcessmUgRsPgR),G__defined_typename("vector<SigmaProcess*>"),-1,4,"sigmaPtrs=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__main92DctLN_vectorlEPythia8cLcLResonanceWidthsmUcOallocatorlEPythia8cLcLResonanceWidthsmUgRsPgR),G__defined_typename("vector<ResonanceWidths*>"),-1,4,"resonancePtrs=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__main92DctLN_Pythia8cLcLTimeShower),-1,-1,4,"timesDecPtr=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__main92DctLN_Pythia8cLcLTimeShower),-1,-1,4,"timesPtr=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__main92DctLN_Pythia8cLcLSpaceShower),-1,-1,4,"spacePtr=",0,(char*)NULL);
   G__memvar_setup((void*)0,103,0,0,-1,-1,-1,4,"useNewTimes=",0,(char*)NULL);
   G__memvar_setup((void*)0,103,0,0,-1,-1,-1,4,"useNewSpace=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__main92DctLN_Pythia8cLcLProcessLevel),-1,-1,4,"processLevel=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__main92DctLN_Pythia8cLcLPartonLevel),-1,-1,4,"partonLevel=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__main92DctLN_Pythia8cLcLPartonLevel),-1,-1,4,"trialPartonLevel=",0,(char*)NULL);
   G__memvar_setup((void*)0,103,0,0,-1,-1,-1,4,"hasMergingHooks=",0,(char*)NULL);
   G__memvar_setup((void*)0,103,0,0,-1,-1,-1,4,"hasOwnMergingHooks=",0,(char*)NULL);
   G__memvar_setup((void*)0,103,0,0,-1,-1,-1,4,"doMerging=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__main92DctLN_Pythia8cLcLHadronLevel),-1,-1,4,"hadronLevel=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__main92DctLN_Pythia8cLcLSigmaTotal),-1,-1,4,"sigmaTot=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__main92DctLN_Pythia8cLcLRHadrons),-1,-1,4,"rHadrons=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* vector<Pythia8::ResonanceWidths,allocator<Pythia8::ResonanceWidths> > */
static void G__setup_memvarvectorlEPythia8cLcLResonanceWidthscOallocatorlEPythia8cLcLResonanceWidthsgRsPgR(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__main92DctLN_vectorlEPythia8cLcLResonanceWidthscOallocatorlEPythia8cLcLResonanceWidthsgRsPgR));
   { vector<Pythia8::ResonanceWidths,allocator<Pythia8::ResonanceWidths> > *p; p=(vector<Pythia8::ResonanceWidths,allocator<Pythia8::ResonanceWidths> >*)0x1000; if (p) { }
   }
   G__tag_memvar_reset();
}

extern "C" void G__cpp_setup_memvarmain92Dct() {
}
/***********************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
***********************************************************/

/*********************************************************
* Member function information setup for each class
*********************************************************/
static void G__setup_memfuncPythia8(void) {
   /* Pythia8 */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__main92DctLN_Pythia8));
   G__memfunc_setup("pow2",392,G__main92Dct_497_0_1, 100, -1, -1, 0, 1, 1, 1, 0, "d - - 11 - x", (char*)NULL, (void*) G__func2void( (double (*)(const double&))(&Pythia8::pow2) ), 0);
   G__memfunc_setup("pow3",393,G__main92Dct_497_0_2, 100, -1, -1, 0, 1, 1, 1, 0, "d - - 11 - x", (char*)NULL, (void*) G__func2void( (double (*)(const double&))(&Pythia8::pow3) ), 0);
   G__memfunc_setup("pow4",394,G__main92Dct_497_0_3, 100, -1, -1, 0, 1, 1, 1, 0, "d - - 11 - x", (char*)NULL, (void*) G__func2void( (double (*)(const double&))(&Pythia8::pow4) ), 0);
   G__memfunc_setup("pow5",395,G__main92Dct_497_0_4, 100, -1, -1, 0, 1, 1, 1, 0, "d - - 11 - x", (char*)NULL, (void*) G__func2void( (double (*)(const double&))(&Pythia8::pow5) ), 0);
   G__memfunc_setup("pow6",396,G__main92Dct_497_0_5, 100, -1, -1, 0, 1, 1, 1, 0, "d - - 11 - x", (char*)NULL, (void*) G__func2void( (double (*)(const double&))(&Pythia8::pow6) ), 0);
   G__memfunc_setup("sqrtpos",796,G__main92Dct_497_0_6, 100, -1, -1, 0, 1, 1, 1, 0, "d - - 11 - x", (char*)NULL, (void*) G__func2void( (double (*)(const double&))(&Pythia8::sqrtpos) ), 0);
   G__memfunc_setup("GammaReal",871,G__main92Dct_497_0_7, 100, -1, -1, 0, 1, 1, 1, 0, "d - - 0 - x", (char*)NULL, (void*) G__func2void( (double (*)(double))(&Pythia8::GammaReal) ), 0);
   G__memfunc_setup("operator+",919,G__main92Dct_497_0_8, 117, G__get_linked_tagnum(&G__main92DctLN_Pythia8cLcLVec4), -1, 0, 2, 1, 1, 0, 
"u 'Pythia8::Vec4' - 11 - v1 u 'Pythia8::Vec4' - 11 - v2", (char*)NULL, (void*) G__func2void( (Pythia8::Vec4 (*)(const Pythia8::Vec4&, const Pythia8::Vec4&))(&Pythia8::operator+) ), 0);
   G__memfunc_setup("operator-",921,G__main92Dct_497_0_9, 117, G__get_linked_tagnum(&G__main92DctLN_Pythia8cLcLVec4), -1, 0, 2, 1, 1, 0, 
"u 'Pythia8::Vec4' - 11 - v1 u 'Pythia8::Vec4' - 11 - v2", (char*)NULL, (void*) G__func2void( (Pythia8::Vec4 (*)(const Pythia8::Vec4&, const Pythia8::Vec4&))(&Pythia8::operator-) ), 0);
   G__memfunc_setup("operator*",918,G__main92Dct_497_0_10, 117, G__get_linked_tagnum(&G__main92DctLN_Pythia8cLcLVec4), -1, 0, 2, 1, 1, 0, 
"d - - 0 - f u 'Pythia8::Vec4' - 11 - v1", (char*)NULL, (void*) G__func2void( (Pythia8::Vec4 (*)(double, const Pythia8::Vec4&))(&Pythia8::operator*) ), 0);
   G__memfunc_setup("operator*",918,G__main92Dct_497_0_11, 117, G__get_linked_tagnum(&G__main92DctLN_Pythia8cLcLVec4), -1, 0, 2, 1, 1, 0, 
"u 'Pythia8::Vec4' - 11 - v1 d - - 0 - f", (char*)NULL, (void*) G__func2void( (Pythia8::Vec4 (*)(const Pythia8::Vec4&, double))(&Pythia8::operator*) ), 0);
   G__memfunc_setup("operator/",923,G__main92Dct_497_0_12, 117, G__get_linked_tagnum(&G__main92DctLN_Pythia8cLcLVec4), -1, 0, 2, 1, 1, 0, 
"u 'Pythia8::Vec4' - 11 - v1 d - - 0 - f", (char*)NULL, (void*) G__func2void( (Pythia8::Vec4 (*)(const Pythia8::Vec4&, double))(&Pythia8::operator/) ), 0);
   G__memfunc_setup("operator*",918,G__main92Dct_497_0_13, 100, -1, -1, 0, 2, 1, 1, 0, 
"u 'Pythia8::Vec4' - 11 - v1 u 'Pythia8::Vec4' - 11 - v2", (char*)NULL, (void*) G__func2void( (double (*)(const Pythia8::Vec4&, const Pythia8::Vec4&))(&Pythia8::operator*) ), 0);
   G__memfunc_setup("m",109,G__main92Dct_497_0_14, 100, -1, -1, 0, 2, 1, 1, 0, 
"u 'Pythia8::Vec4' - 11 - v1 u 'Pythia8::Vec4' - 11 - v2", (char*)NULL, (void*) G__func2void( (double (*)(const Pythia8::Vec4&, const Pythia8::Vec4&))(&Pythia8::m) ), 0);
   G__memfunc_setup("m2",159,G__main92Dct_497_0_15, 100, -1, -1, 0, 2, 1, 1, 0, 
"u 'Pythia8::Vec4' - 11 - v1 u 'Pythia8::Vec4' - 11 - v2", (char*)NULL, (void*) G__func2void( (double (*)(const Pythia8::Vec4&, const Pythia8::Vec4&))(&Pythia8::m2) ), 0);
   G__memfunc_setup("dot3",378,G__main92Dct_497_0_16, 100, -1, -1, 0, 2, 1, 1, 0, 
"u 'Pythia8::Vec4' - 11 - v1 u 'Pythia8::Vec4' - 11 - v2", (char*)NULL, (void*) G__func2void( (double (*)(const Pythia8::Vec4&, const Pythia8::Vec4&))(&Pythia8::dot3) ), 0);
   G__memfunc_setup("cross3",605,G__main92Dct_497_0_17, 117, G__get_linked_tagnum(&G__main92DctLN_Pythia8cLcLVec4), -1, 0, 2, 1, 1, 0, 
"u 'Pythia8::Vec4' - 11 - v1 u 'Pythia8::Vec4' - 11 - v2", (char*)NULL, (void*) G__func2void( (Pythia8::Vec4 (*)(const Pythia8::Vec4&, const Pythia8::Vec4&))(&Pythia8::cross3) ), 0);
   G__memfunc_setup("theta",534,G__main92Dct_497_0_18, 100, -1, -1, 0, 2, 1, 1, 0, 
"u 'Pythia8::Vec4' - 11 - v1 u 'Pythia8::Vec4' - 11 - v2", (char*)NULL, (void*) G__func2void( (double (*)(const Pythia8::Vec4&, const Pythia8::Vec4&))(&Pythia8::theta) ), 0);
   G__memfunc_setup("costheta",859,G__main92Dct_497_0_19, 100, -1, -1, 0, 2, 1, 1, 0, 
"u 'Pythia8::Vec4' - 11 - v1 u 'Pythia8::Vec4' - 11 - v2", (char*)NULL, (void*) G__func2void( (double (*)(const Pythia8::Vec4&, const Pythia8::Vec4&))(&Pythia8::costheta) ), 0);
   G__memfunc_setup("phi",321,G__main92Dct_497_0_20, 100, -1, -1, 0, 2, 1, 1, 0, 
"u 'Pythia8::Vec4' - 11 - v1 u 'Pythia8::Vec4' - 11 - v2", (char*)NULL, (void*) G__func2void( (double (*)(const Pythia8::Vec4&, const Pythia8::Vec4&))(&Pythia8::phi) ), 0);
   G__memfunc_setup("cosphi",646,G__main92Dct_497_0_21, 100, -1, -1, 0, 2, 1, 1, 0, 
"u 'Pythia8::Vec4' - 11 - v1 u 'Pythia8::Vec4' - 11 - v2", (char*)NULL, (void*) G__func2void( (double (*)(const Pythia8::Vec4&, const Pythia8::Vec4&))(&Pythia8::cosphi) ), 0);
   G__memfunc_setup("phi",321,G__main92Dct_497_0_22, 100, -1, -1, 0, 3, 1, 1, 0, 
"u 'Pythia8::Vec4' - 11 - v1 u 'Pythia8::Vec4' - 11 - v2 "
"u 'Pythia8::Vec4' - 11 - n", (char*)NULL, (void*) G__func2void( (double (*)(const Pythia8::Vec4&, const Pythia8::Vec4&, const Pythia8::Vec4&))(&Pythia8::phi) ), 0);
   G__memfunc_setup("cosphi",646,G__main92Dct_497_0_23, 100, -1, -1, 0, 3, 1, 1, 0, 
"u 'Pythia8::Vec4' - 11 - v1 u 'Pythia8::Vec4' - 11 - v2 "
"u 'Pythia8::Vec4' - 11 - n", (char*)NULL, (void*) G__func2void( (double (*)(const Pythia8::Vec4&, const Pythia8::Vec4&, const Pythia8::Vec4&))(&Pythia8::cosphi) ), 0);
   G__memfunc_setup("RRapPhi",662,G__main92Dct_497_0_24, 100, -1, -1, 0, 2, 1, 1, 0, 
"u 'Pythia8::Vec4' - 11 - v1 u 'Pythia8::Vec4' - 11 - v2", (char*)NULL, (void*) G__func2void( (double (*)(const Pythia8::Vec4&, const Pythia8::Vec4&))(&Pythia8::RRapPhi) ), 0);
   G__memfunc_setup("REtaPhi",653,G__main92Dct_497_0_25, 100, -1, -1, 0, 2, 1, 1, 0, 
"u 'Pythia8::Vec4' - 11 - v1 u 'Pythia8::Vec4' - 11 - v2", (char*)NULL, (void*) G__func2void( (double (*)(const Pythia8::Vec4&, const Pythia8::Vec4&))(&Pythia8::REtaPhi) ), 0);
   G__memfunc_setup("operator<<",996,G__main92Dct_497_0_26, 117, G__get_linked_tagnum(&G__main92DctLN_basic_ostreamlEcharcOchar_traitslEchargRsPgR), G__defined_typename("ostream"), 1, 2, 1, 1, 0, 
"u 'basic_ostream<char,char_traits<char> >' 'ostream' 1 - - u 'Pythia8::Vec4' - 11 - v", (char*)NULL, (void*) G__func2void( (ostream& (*)(ostream&, const Pythia8::Vec4&))(&Pythia8::operator<<) ), 0);
   G__memfunc_setup("operator<<",996,G__main92Dct_497_0_27, 117, G__get_linked_tagnum(&G__main92DctLN_basic_ostreamlEcharcOchar_traitslEchargRsPgR), G__defined_typename("ostream"), 1, 2, 1, 1, 0, 
"u 'basic_ostream<char,char_traits<char> >' 'ostream' 1 - - u 'Pythia8::RotBstMatrix' - 11 - -", (char*)NULL, (void*) G__func2void( (ostream& (*)(ostream&, const Pythia8::RotBstMatrix&))(&Pythia8::operator<<) ), 0);
   G__memfunc_setup("operator<<",996,G__main92Dct_497_0_28, 117, G__get_linked_tagnum(&G__main92DctLN_basic_ostreamlEcharcOchar_traitslEchargRsPgR), G__defined_typename("ostream"), 1, 2, 1, 1, 0, 
"u 'basic_ostream<char,char_traits<char> >' 'ostream' 1 - os u 'Pythia8::Hist' - 11 - h", (char*)NULL, (void*) G__func2void( (ostream& (*)(ostream&, const Pythia8::Hist&))(&Pythia8::operator<<) ), 0);
   G__memfunc_setup("table",520,G__main92Dct_497_0_29, 121, -1, -1, 0, 5, 1, 1, 0, 
"u 'Pythia8::Hist' - 11 - h1 u 'Pythia8::Hist' - 11 - h2 "
"u 'basic_ostream<char,char_traits<char> >' 'ostream' 1 - os g - - 0 - printOverUnder "
"g - - 0 - xMidBin", (char*)NULL, (void*) G__func2void( (void (*)(const Pythia8::Hist&, const Pythia8::Hist&, ostream&, bool, bool))(&Pythia8::table) ), 0);
   G__memfunc_setup("table",520,G__main92Dct_497_0_30, 121, -1, -1, 0, 5, 1, 1, 0, 
"u 'Pythia8::Hist' - 11 - h1 u 'Pythia8::Hist' - 11 - h2 "
"u 'string' - 0 - fileName g - - 0 - printOverUnder "
"g - - 0 - xMidBin", (char*)NULL, (void*) G__func2void( (void (*)(const Pythia8::Hist&, const Pythia8::Hist&, string, bool, bool))(&Pythia8::table) ), 0);
   G__memfunc_setup("operator+",919,G__main92Dct_497_0_31, 117, G__get_linked_tagnum(&G__main92DctLN_Pythia8cLcLHist), -1, 0, 2, 1, 1, 0, 
"d - - 0 - f u 'Pythia8::Hist' - 11 - h1", (char*)NULL, (void*) G__func2void( (Pythia8::Hist (*)(double, const Pythia8::Hist&))(&Pythia8::operator+) ), 0);
   G__memfunc_setup("operator+",919,G__main92Dct_497_0_32, 117, G__get_linked_tagnum(&G__main92DctLN_Pythia8cLcLHist), -1, 0, 2, 1, 1, 0, 
"u 'Pythia8::Hist' - 11 - h1 d - - 0 - f", (char*)NULL, (void*) G__func2void( (Pythia8::Hist (*)(const Pythia8::Hist&, double))(&Pythia8::operator+) ), 0);
   G__memfunc_setup("operator+",919,G__main92Dct_497_0_33, 117, G__get_linked_tagnum(&G__main92DctLN_Pythia8cLcLHist), -1, 0, 2, 1, 1, 0, 
"u 'Pythia8::Hist' - 11 - h1 u 'Pythia8::Hist' - 11 - h2", (char*)NULL, (void*) G__func2void( (Pythia8::Hist (*)(const Pythia8::Hist&, const Pythia8::Hist&))(&Pythia8::operator+) ), 0);
   G__memfunc_setup("operator-",921,G__main92Dct_497_0_34, 117, G__get_linked_tagnum(&G__main92DctLN_Pythia8cLcLHist), -1, 0, 2, 1, 1, 0, 
"d - - 0 - f u 'Pythia8::Hist' - 11 - h1", (char*)NULL, (void*) G__func2void( (Pythia8::Hist (*)(double, const Pythia8::Hist&))(&Pythia8::operator-) ), 0);
   G__memfunc_setup("operator-",921,G__main92Dct_497_0_35, 117, G__get_linked_tagnum(&G__main92DctLN_Pythia8cLcLHist), -1, 0, 2, 1, 1, 0, 
"u 'Pythia8::Hist' - 11 - h1 d - - 0 - f", (char*)NULL, (void*) G__func2void( (Pythia8::Hist (*)(const Pythia8::Hist&, double))(&Pythia8::operator-) ), 0);
   G__memfunc_setup("operator-",921,G__main92Dct_497_0_36, 117, G__get_linked_tagnum(&G__main92DctLN_Pythia8cLcLHist), -1, 0, 2, 1, 1, 0, 
"u 'Pythia8::Hist' - 11 - h1 u 'Pythia8::Hist' - 11 - h2", (char*)NULL, (void*) G__func2void( (Pythia8::Hist (*)(const Pythia8::Hist&, const Pythia8::Hist&))(&Pythia8::operator-) ), 0);
   G__memfunc_setup("operator*",918,G__main92Dct_497_0_37, 117, G__get_linked_tagnum(&G__main92DctLN_Pythia8cLcLHist), -1, 0, 2, 1, 1, 0, 
"d - - 0 - f u 'Pythia8::Hist' - 11 - h1", (char*)NULL, (void*) G__func2void( (Pythia8::Hist (*)(double, const Pythia8::Hist&))(&Pythia8::operator*) ), 0);
   G__memfunc_setup("operator*",918,G__main92Dct_497_0_38, 117, G__get_linked_tagnum(&G__main92DctLN_Pythia8cLcLHist), -1, 0, 2, 1, 1, 0, 
"u 'Pythia8::Hist' - 11 - h1 d - - 0 - f", (char*)NULL, (void*) G__func2void( (Pythia8::Hist (*)(const Pythia8::Hist&, double))(&Pythia8::operator*) ), 0);
   G__memfunc_setup("operator*",918,G__main92Dct_497_0_39, 117, G__get_linked_tagnum(&G__main92DctLN_Pythia8cLcLHist), -1, 0, 2, 1, 1, 0, 
"u 'Pythia8::Hist' - 11 - h1 u 'Pythia8::Hist' - 11 - h2", (char*)NULL, (void*) G__func2void( (Pythia8::Hist (*)(const Pythia8::Hist&, const Pythia8::Hist&))(&Pythia8::operator*) ), 0);
   G__memfunc_setup("operator/",923,G__main92Dct_497_0_40, 117, G__get_linked_tagnum(&G__main92DctLN_Pythia8cLcLHist), -1, 0, 2, 1, 1, 0, 
"d - - 0 - f u 'Pythia8::Hist' - 11 - h1", (char*)NULL, (void*) G__func2void( (Pythia8::Hist (*)(double, const Pythia8::Hist&))(&Pythia8::operator/) ), 0);
   G__memfunc_setup("operator/",923,G__main92Dct_497_0_41, 117, G__get_linked_tagnum(&G__main92DctLN_Pythia8cLcLHist), -1, 0, 2, 1, 1, 0, 
"u 'Pythia8::Hist' - 11 - h1 d - - 0 - f", (char*)NULL, (void*) G__func2void( (Pythia8::Hist (*)(const Pythia8::Hist&, double))(&Pythia8::operator/) ), 0);
   G__memfunc_setup("operator/",923,G__main92Dct_497_0_42, 117, G__get_linked_tagnum(&G__main92DctLN_Pythia8cLcLHist), -1, 0, 2, 1, 1, 0, 
"u 'Pythia8::Hist' - 11 - h1 u 'Pythia8::Hist' - 11 - h2", (char*)NULL, (void*) G__func2void( (Pythia8::Hist (*)(const Pythia8::Hist&, const Pythia8::Hist&))(&Pythia8::operator/) ), 0);
   G__memfunc_setup("m",109,G__main92Dct_497_0_43, 100, -1, -1, 0, 2, 1, 1, 0, 
"u 'Pythia8::Particle' - 11 - - u 'Pythia8::Particle' - 11 - -", (char*)NULL, (void*) G__func2void( (double (*)(const Pythia8::Particle&, const Pythia8::Particle&))(&Pythia8::m) ), 0);
   G__memfunc_setup("m2",159,G__main92Dct_497_0_44, 100, -1, -1, 0, 2, 1, 1, 0, 
"u 'Pythia8::Particle' - 11 - - u 'Pythia8::Particle' - 11 - -", (char*)NULL, (void*) G__func2void( (double (*)(const Pythia8::Particle&, const Pythia8::Particle&))(&Pythia8::m2) ), 0);
   G__memfunc_setup("dist2Fun",783,G__main92Dct_497_0_45, 100, -1, -1, 0, 3, 1, 1, 0, 
"i - - 0 - measure u 'Pythia8::SingleClusterJet' - 11 - j1 "
"u 'Pythia8::SingleClusterJet' - 11 - j2", (char*)NULL, (void*) G__func2void( (double (*)(int, const Pythia8::SingleClusterJet&, const Pythia8::SingleClusterJet&))(&Pythia8::dist2Fun) ), 0);
   G__memfunc_setup("operator*",918,G__main92Dct_497_0_46, 117, G__get_linked_tagnum(&G__main92DctLN_Pythia8cLcLWave4), -1, 0, 2, 1, 1, 0, 
"u 'complex<double>' 'Pythia8::complex' 0 - s u 'Pythia8::Wave4' - 11 - w", (char*)NULL, (void*) G__func2void( (Pythia8::Wave4 (*)(Pythia8::complex, const Pythia8::Wave4&))(&Pythia8::operator*) ), 0);
   G__memfunc_setup("operator*",918,G__main92Dct_497_0_47, 117, G__get_linked_tagnum(&G__main92DctLN_Pythia8cLcLWave4), -1, 0, 2, 1, 1, 0, 
"d - - 0 - s u 'Pythia8::Wave4' - 11 - w", (char*)NULL, (void*) G__func2void( (Pythia8::Wave4 (*)(double, const Pythia8::Wave4&))(&Pythia8::operator*) ), 0);
   G__memfunc_setup("conj",426,G__main92Dct_497_0_48, 117, G__get_linked_tagnum(&G__main92DctLN_Pythia8cLcLWave4), -1, 0, 1, 1, 1, 0, "u 'Pythia8::Wave4' - 0 - w", (char*)NULL, (void*) G__func2void( (Pythia8::Wave4 (*)(Pythia8::Wave4))(&Pythia8::conj) ), 0);
   G__memfunc_setup("epsilon",762,G__main92Dct_497_0_49, 117, G__get_linked_tagnum(&G__main92DctLN_Pythia8cLcLWave4), -1, 0, 3, 1, 1, 0, 
"u 'Pythia8::Wave4' - 0 - w1 u 'Pythia8::Wave4' - 0 - w2 "
"u 'Pythia8::Wave4' - 0 - w3", (char*)NULL, (void*) G__func2void( (Pythia8::Wave4 (*)(Pythia8::Wave4, Pythia8::Wave4, Pythia8::Wave4))(&Pythia8::epsilon) ), 0);
   G__memfunc_setup("m2",159,G__main92Dct_497_0_50, 100, -1, -1, 0, 1, 1, 1, 0, "u 'Pythia8::Wave4' - 0 - w", (char*)NULL, (void*) G__func2void( (double (*)(Pythia8::Wave4))(&Pythia8::m2) ), 0);
   G__memfunc_setup("m2",159,G__main92Dct_497_0_51, 100, -1, -1, 0, 2, 1, 1, 0, 
"u 'Pythia8::Wave4' - 0 - w1 u 'Pythia8::Wave4' - 0 - w2", (char*)NULL, (void*) G__func2void( (double (*)(Pythia8::Wave4, Pythia8::Wave4))(&Pythia8::m2) ), 0);
   G__memfunc_setup("operator<<",996,G__main92Dct_497_0_52, 117, G__get_linked_tagnum(&G__main92DctLN_basic_ostreamlEcharcOchar_traitslEchargRsPgR), G__defined_typename("ostream"), 1, 2, 1, 1, 0, 
"u 'basic_ostream<char,char_traits<char> >' 'ostream' 1 - output u 'Pythia8::Wave4' - 0 - w", (char*)NULL, (void*) G__func2void( (ostream& (*)(ostream&, Pythia8::Wave4))(&Pythia8::operator<<) ), 0);
   G__memfunc_setup("operator*",918,G__main92Dct_497_0_53, 117, G__get_linked_tagnum(&G__main92DctLN_Pythia8cLcLWave4), -1, 0, 2, 1, 1, 0, 
"u 'Pythia8::Wave4' - 0 - w u 'Pythia8::GammaMatrix' - 0 - g", (char*)NULL, (void*) G__func2void( (Pythia8::Wave4 (*)(Pythia8::Wave4, Pythia8::GammaMatrix))(&Pythia8::operator*) ), 0);
   G__memfunc_setup("operator*",918,G__main92Dct_497_0_54, 117, G__get_linked_tagnum(&G__main92DctLN_Pythia8cLcLGammaMatrix), -1, 0, 2, 1, 1, 0, 
"u 'complex<double>' 'Pythia8::complex' 0 - s u 'Pythia8::GammaMatrix' - 0 - g", (char*)NULL, (void*) G__func2void( (Pythia8::GammaMatrix (*)(Pythia8::complex, Pythia8::GammaMatrix))(&Pythia8::operator*) ), 0);
   G__memfunc_setup("operator-",921,G__main92Dct_497_0_55, 117, G__get_linked_tagnum(&G__main92DctLN_Pythia8cLcLGammaMatrix), -1, 0, 2, 1, 1, 0, 
"u 'complex<double>' 'Pythia8::complex' 0 - s u 'Pythia8::GammaMatrix' - 0 - g", (char*)NULL, (void*) G__func2void( (Pythia8::GammaMatrix (*)(Pythia8::complex, Pythia8::GammaMatrix))(&Pythia8::operator-) ), 0);
   G__memfunc_setup("operator+",919,G__main92Dct_497_0_56, 117, G__get_linked_tagnum(&G__main92DctLN_Pythia8cLcLGammaMatrix), -1, 0, 2, 1, 1, 0, 
"u 'complex<double>' 'Pythia8::complex' 0 - s u 'Pythia8::GammaMatrix' - 0 - g", (char*)NULL, (void*) G__func2void( (Pythia8::GammaMatrix (*)(Pythia8::complex, Pythia8::GammaMatrix))(&Pythia8::operator+) ), 0);
   G__memfunc_setup("operator<<",996,G__main92Dct_497_0_57, 117, G__get_linked_tagnum(&G__main92DctLN_basic_ostreamlEcharcOchar_traitslEchargRsPgR), G__defined_typename("ostream"), 1, 2, 1, 1, 0, 
"u 'basic_ostream<char,char_traits<char> >' 'ostream' 1 - os u 'Pythia8::GammaMatrix' - 0 - g", (char*)NULL, (void*) G__func2void( (ostream& (*)(ostream&, Pythia8::GammaMatrix))(&Pythia8::operator<<) ), 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncPythia8cLcLRndmEngine(void) {
   /* Pythia8::RndmEngine */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__main92DctLN_Pythia8cLcLRndmEngine));
   G__memfunc_setup("flat",423,G__main92Dct_498_0_1, 100, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 3);
   // automatic destructor
   G__memfunc_setup("~RndmEngine", 1125, G__main92Dct_498_0_2, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__main92Dct_498_0_3, (int) ('u'), G__get_linked_tagnum(&G__main92DctLN_Pythia8cLcLRndmEngine), -1, 1, 1, 1, 1, 0, "u 'Pythia8::RndmEngine' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncPythia8cLcLRndm(void) {
   /* Pythia8::Rndm */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__main92DctLN_Pythia8cLcLRndm));
   G__memfunc_setup("Rndm",401,G__main92Dct_499_0_1, 105, G__get_linked_tagnum(&G__main92DctLN_Pythia8cLcLRndm), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Rndm",401,G__main92Dct_499_0_2, 105, G__get_linked_tagnum(&G__main92DctLN_Pythia8cLcLRndm), -1, 0, 1, 1, 1, 0, "i - - 0 - seedIn", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("rndmEnginePtr",1341,G__main92Dct_499_0_3, 103, -1, -1, 0, 1, 1, 1, 0, "U 'Pythia8::RndmEngine' - 0 - rndmEngPtrIn", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("init",436,G__main92Dct_499_0_4, 121, -1, -1, 0, 1, 1, 1, 0, "i - - 0 '0' seedIn", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("flat",423,G__main92Dct_499_0_5, 100, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("exp",333,G__main92Dct_499_0_6, 100, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("xexp",453,G__main92Dct_499_0_7, 100, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("gauss",547,G__main92Dct_499_0_8, 100, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("gauss2",597,G__main92Dct_499_0_9, 117, G__get_linked_tagnum(&G__main92DctLN_pairlEdoublecOdoublegR), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("pick",423,G__main92Dct_499_0_10, 105, -1, -1, 0, 1, 1, 1, 0, "u 'vector<double,allocator<double> >' 'vector<double>' 11 - prob", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("dumpState",951,G__main92Dct_499_0_11, 103, -1, -1, 0, 1, 1, 1, 0, "u 'string' - 0 - fileName", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("readState",925,G__main92Dct_499_0_12, 103, -1, -1, 0, 1, 1, 1, 0, "u 'string' - 0 - fileName", (char*)NULL, (void*) NULL, 0);
   // automatic copy constructor
   G__memfunc_setup("Rndm", 401, G__main92Dct_499_0_13, (int) ('i'), G__get_linked_tagnum(&G__main92DctLN_Pythia8cLcLRndm), -1, 0, 1, 1, 1, 0, "u 'Pythia8::Rndm' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~Rndm", 527, G__main92Dct_499_0_14, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__main92Dct_499_0_15, (int) ('u'), G__get_linked_tagnum(&G__main92DctLN_Pythia8cLcLRndm), -1, 1, 1, 1, 1, 0, "u 'Pythia8::Rndm' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncPythia8cLcLVec4(void) {
   /* Pythia8::Vec4 */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__main92DctLN_Pythia8cLcLVec4));
   G__memfunc_setup("Vec4",338,G__main92Dct_501_0_1, 105, G__get_linked_tagnum(&G__main92DctLN_Pythia8cLcLVec4), -1, 0, 4, 1, 1, 0, 
"d - - 0 '0.' xIn d - - 0 '0.' yIn "
"d - - 0 '0.' zIn d - - 0 '0.' tIn", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Vec4",338,G__main92Dct_501_0_2, 105, G__get_linked_tagnum(&G__main92DctLN_Pythia8cLcLVec4), -1, 0, 1, 1, 1, 0, "u 'Pythia8::Vec4' - 11 - v", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator=",937,G__main92Dct_501_0_3, 117, G__get_linked_tagnum(&G__main92DctLN_Pythia8cLcLVec4), -1, 1, 1, 1, 1, 0, "u 'Pythia8::Vec4' - 11 - v", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator=",937,G__main92Dct_501_0_4, 117, G__get_linked_tagnum(&G__main92DctLN_Pythia8cLcLVec4), -1, 1, 1, 1, 1, 0, "d - - 0 - value", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("reset",547,G__main92Dct_501_0_5, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("p",112,G__main92Dct_501_0_6, 121, -1, -1, 0, 4, 1, 1, 0, 
"d - - 0 - xIn d - - 0 - yIn "
"d - - 0 - zIn d - - 0 - tIn", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("p",112,G__main92Dct_501_0_7, 121, -1, -1, 0, 1, 1, 1, 0, "u 'Pythia8::Vec4' - 0 - pIn", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("px",232,G__main92Dct_501_0_8, 121, -1, -1, 0, 1, 1, 1, 0, "d - - 0 - xIn", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("py",233,G__main92Dct_501_0_9, 121, -1, -1, 0, 1, 1, 1, 0, "d - - 0 - yIn", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("pz",234,G__main92Dct_501_0_10, 121, -1, -1, 0, 1, 1, 1, 0, "d - - 0 - zIn", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("e",101,G__main92Dct_501_0_11, 121, -1, -1, 0, 1, 1, 1, 0, "d - - 0 - tIn", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("px",232,G__main92Dct_501_0_12, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("py",233,G__main92Dct_501_0_13, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("pz",234,G__main92Dct_501_0_14, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("e",101,G__main92Dct_501_0_15, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("mCalc",480,G__main92Dct_501_0_16, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("m2Calc",530,G__main92Dct_501_0_17, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("pT",196,G__main92Dct_501_0_18, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("pT2",246,G__main92Dct_501_0_19, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("pAbs",390,G__main92Dct_501_0_20, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("pAbs2",440,G__main92Dct_501_0_21, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("eT",185,G__main92Dct_501_0_22, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("eT2",235,G__main92Dct_501_0_23, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("theta",534,G__main92Dct_501_0_24, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("phi",321,G__main92Dct_501_0_25, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("thetaXZ",712,G__main92Dct_501_0_26, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("pPos",418,G__main92Dct_501_0_27, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("pNeg",394,G__main92Dct_501_0_28, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("rap",323,G__main92Dct_501_0_29, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("eta",314,G__main92Dct_501_0_30, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("rescale3",786,G__main92Dct_501_0_31, 121, -1, -1, 0, 1, 1, 1, 0, "d - - 0 - fac", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("rescale4",787,G__main92Dct_501_0_32, 121, -1, -1, 0, 1, 1, 1, 0, "d - - 0 - fac", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("flip3",478,G__main92Dct_501_0_33, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("flip4",479,G__main92Dct_501_0_34, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("rot",341,G__main92Dct_501_0_35, 121, -1, -1, 0, 2, 1, 1, 0, 
"d - - 0 - thetaIn d - - 0 - phiIn", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("rotaxis",778,G__main92Dct_501_0_36, 121, -1, -1, 0, 4, 1, 1, 0, 
"d - - 0 - phiIn d - - 0 - nx "
"d - - 0 - ny d - - 0 - nz", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("rotaxis",778,G__main92Dct_501_0_37, 121, -1, -1, 0, 2, 1, 1, 0, 
"d - - 0 - phiIn u 'Pythia8::Vec4' - 11 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("bst",329,G__main92Dct_501_0_38, 121, -1, -1, 0, 3, 1, 1, 0, 
"d - - 0 - betaX d - - 0 - betaY "
"d - - 0 - betaZ", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("bst",329,G__main92Dct_501_0_39, 121, -1, -1, 0, 4, 1, 1, 0, 
"d - - 0 - betaX d - - 0 - betaY "
"d - - 0 - betaZ d - - 0 - gamma", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("bst",329,G__main92Dct_501_0_40, 121, -1, -1, 0, 1, 1, 1, 0, "u 'Pythia8::Vec4' - 11 - pIn", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("bst",329,G__main92Dct_501_0_41, 121, -1, -1, 0, 2, 1, 1, 0, 
"u 'Pythia8::Vec4' - 11 - pIn d - - 0 - mIn", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("bstback",730,G__main92Dct_501_0_42, 121, -1, -1, 0, 1, 1, 1, 0, "u 'Pythia8::Vec4' - 11 - pIn", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("bstback",730,G__main92Dct_501_0_43, 121, -1, -1, 0, 2, 1, 1, 0, 
"u 'Pythia8::Vec4' - 11 - pIn d - - 0 - mIn", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("rotbst",670,G__main92Dct_501_0_44, 121, -1, -1, 0, 1, 1, 1, 0, "u 'Pythia8::RotBstMatrix' - 11 - M", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator-",921,G__main92Dct_501_0_45, 117, G__get_linked_tagnum(&G__main92DctLN_Pythia8cLcLVec4), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator+=",980,G__main92Dct_501_0_46, 117, G__get_linked_tagnum(&G__main92DctLN_Pythia8cLcLVec4), -1, 1, 1, 1, 1, 0, "u 'Pythia8::Vec4' - 11 - v", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator-=",982,G__main92Dct_501_0_47, 117, G__get_linked_tagnum(&G__main92DctLN_Pythia8cLcLVec4), -1, 1, 1, 1, 1, 0, "u 'Pythia8::Vec4' - 11 - v", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator*=",979,G__main92Dct_501_0_48, 117, G__get_linked_tagnum(&G__main92DctLN_Pythia8cLcLVec4), -1, 1, 1, 1, 1, 0, "d - - 0 - f", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator/=",984,G__main92Dct_501_0_49, 117, G__get_linked_tagnum(&G__main92DctLN_Pythia8cLcLVec4), -1, 1, 1, 1, 1, 0, "d - - 0 - f", (char*)NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~Vec4", 464, G__main92Dct_501_0_50, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncPythia8cLcLInfo(void) {
   /* Pythia8::Info */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__main92DctLN_Pythia8cLcLInfo));
   G__memfunc_setup("Info",396,G__main92Dct_575_0_1, 105, G__get_linked_tagnum(&G__main92DctLN_Pythia8cLcLInfo), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("list",444,G__main92Dct_575_0_2, 121, -1, -1, 0, 1, 1, 1, 8, "u 'basic_ostream<char,char_traits<char> >' 'ostream' 1 'cout' os", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("idA",270,G__main92Dct_575_0_3, 105, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("idB",271,G__main92Dct_575_0_4, 105, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("pzA",299,G__main92Dct_575_0_5, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("pzB",300,G__main92Dct_575_0_6, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("eA",166,G__main92Dct_575_0_7, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("eB",167,G__main92Dct_575_0_8, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("mA",174,G__main92Dct_575_0_9, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("mB",175,G__main92Dct_575_0_10, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("eCM",245,G__main92Dct_575_0_11, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("s",115,G__main92Dct_575_0_12, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("tooLowPTmin",1132,G__main92Dct_575_0_13, 103, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("name",417,G__main92Dct_575_0_14, 117, G__get_linked_tagnum(&G__main92DctLN_string), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("code",411,G__main92Dct_575_0_15, 105, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("nFinal",600,G__main92Dct_575_0_16, 105, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("isResolved",1056,G__main92Dct_575_0_17, 103, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("isDiffractiveA",1412,G__main92Dct_575_0_18, 103, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("isDiffractiveB",1413,G__main92Dct_575_0_19, 103, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("isDiffractiveC",1414,G__main92Dct_575_0_20, 103, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("isNonDiffractive",1646,G__main92Dct_575_0_21, 103, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("isMinBias",895,G__main92Dct_575_0_22, 103, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("isLHA",433,G__main92Dct_575_0_23, 103, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("atEndOfFile",1057,G__main92Dct_575_0_24, 103, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("hasSub",614,G__main92Dct_575_0_25, 103, -1, -1, 0, 1, 1, 1, 8, "i - - 0 '0' i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("nameSub",715,G__main92Dct_575_0_26, 117, G__get_linked_tagnum(&G__main92DctLN_string), -1, 0, 1, 1, 1, 8, "i - - 0 '0' i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("codeSub",709,G__main92Dct_575_0_27, 105, -1, -1, 0, 1, 1, 1, 8, "i - - 0 '0' i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("nFinalSub",898,G__main92Dct_575_0_28, 105, -1, -1, 0, 1, 1, 1, 8, "i - - 0 '0' i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("id1",254,G__main92Dct_575_0_29, 105, -1, -1, 0, 1, 1, 1, 8, "i - - 0 '0' i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("id2",255,G__main92Dct_575_0_30, 105, -1, -1, 0, 1, 1, 1, 8, "i - - 0 '0' i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("x1",169,G__main92Dct_575_0_31, 100, -1, -1, 0, 1, 1, 1, 8, "i - - 0 '0' i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("x2",170,G__main92Dct_575_0_32, 100, -1, -1, 0, 1, 1, 1, 8, "i - - 0 '0' i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("y",121,G__main92Dct_575_0_33, 100, -1, -1, 0, 1, 1, 1, 8, "i - - 0 '0' i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("tau",330,G__main92Dct_575_0_34, 100, -1, -1, 0, 1, 1, 1, 8, "i - - 0 '0' i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("id1pdf",568,G__main92Dct_575_0_35, 105, -1, -1, 0, 1, 1, 1, 8, "i - - 0 '0' i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("id2pdf",569,G__main92Dct_575_0_36, 105, -1, -1, 0, 1, 1, 1, 8, "i - - 0 '0' i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("x1pdf",483,G__main92Dct_575_0_37, 100, -1, -1, 0, 1, 1, 1, 8, "i - - 0 '0' i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("x2pdf",484,G__main92Dct_575_0_38, 100, -1, -1, 0, 1, 1, 1, 8, "i - - 0 '0' i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("pdf1",363,G__main92Dct_575_0_39, 100, -1, -1, 0, 1, 1, 1, 8, "i - - 0 '0' i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("pdf2",364,G__main92Dct_575_0_40, 100, -1, -1, 0, 1, 1, 1, 8, "i - - 0 '0' i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("QFac",347,G__main92Dct_575_0_41, 100, -1, -1, 0, 1, 1, 1, 8, "i - - 0 '0' i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Q2Fac",397,G__main92Dct_575_0_42, 100, -1, -1, 0, 1, 1, 1, 8, "i - - 0 '0' i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("isValence1",971,G__main92Dct_575_0_43, 103, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("isValence2",972,G__main92Dct_575_0_44, 103, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("alphaS",601,G__main92Dct_575_0_45, 100, -1, -1, 0, 1, 1, 1, 8, "i - - 0 '0' i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("alphaEM",664,G__main92Dct_575_0_46, 100, -1, -1, 0, 1, 1, 1, 8, "i - - 0 '0' i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("QRen",374,G__main92Dct_575_0_47, 100, -1, -1, 0, 1, 1, 1, 8, "i - - 0 '0' i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Q2Ren",424,G__main92Dct_575_0_48, 100, -1, -1, 0, 1, 1, 1, 8, "i - - 0 '0' i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("scalup",648,G__main92Dct_575_0_49, 100, -1, -1, 0, 1, 1, 1, 8, "i - - 0 '0' i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("mHat",394,G__main92Dct_575_0_50, 100, -1, -1, 0, 1, 1, 1, 8, "i - - 0 '0' i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("sHat",400,G__main92Dct_575_0_51, 100, -1, -1, 0, 1, 1, 1, 8, "i - - 0 '0' i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("tHat",401,G__main92Dct_575_0_52, 100, -1, -1, 0, 1, 1, 1, 8, "i - - 0 '0' i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("uHat",402,G__main92Dct_575_0_53, 100, -1, -1, 0, 1, 1, 1, 8, "i - - 0 '0' i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("pTHat",481,G__main92Dct_575_0_54, 100, -1, -1, 0, 1, 1, 1, 8, "i - - 0 '0' i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("pT2Hat",531,G__main92Dct_575_0_55, 100, -1, -1, 0, 1, 1, 1, 8, "i - - 0 '0' i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("m3Hat",445,G__main92Dct_575_0_56, 100, -1, -1, 0, 1, 1, 1, 8, "i - - 0 '0' i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("m4Hat",446,G__main92Dct_575_0_57, 100, -1, -1, 0, 1, 1, 1, 8, "i - - 0 '0' i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("thetaHat",819,G__main92Dct_575_0_58, 100, -1, -1, 0, 1, 1, 1, 8, "i - - 0 '0' i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("phiHat",606,G__main92Dct_575_0_59, 100, -1, -1, 0, 1, 1, 1, 8, "i - - 0 '0' i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("weight",648,G__main92Dct_575_0_60, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("weightSum",957,G__main92Dct_575_0_61, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("lhaStrategy",1160,G__main92Dct_575_0_62, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("nISR",348,G__main92Dct_575_0_63, 105, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("nFSRinProc",964,G__main92Dct_575_0_64, 105, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("nFSRinRes",858,G__main92Dct_575_0_65, 105, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("pTmaxMPI",752,G__main92Dct_575_0_66, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("pTmaxISR",760,G__main92Dct_575_0_67, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("pTmaxFSR",757,G__main92Dct_575_0_68, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("pTnow",536,G__main92Dct_575_0_69, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("a0MPI",375,G__main92Dct_575_0_70, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("bMPI",328,G__main92Dct_575_0_71, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("enhanceMPI",952,G__main92Dct_575_0_72, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("eMPI",331,G__main92Dct_575_0_73, 100, -1, -1, 0, 1, 1, 1, 8, "i - - 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("nMPI",340,G__main92Dct_575_0_74, 105, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("codeMPI",641,G__main92Dct_575_0_75, 105, -1, -1, 0, 1, 1, 1, 8, "i - - 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("pTMPI",426,G__main92Dct_575_0_76, 100, -1, -1, 0, 1, 1, 1, 8, "i - - 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("iAMPI",400,G__main92Dct_575_0_77, 105, -1, -1, 0, 1, 1, 1, 8, "i - - 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("iBMPI",401,G__main92Dct_575_0_78, 105, -1, -1, 0, 1, 1, 1, 8, "i - - 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("codesHard",909,G__main92Dct_575_0_79, 117, G__get_linked_tagnum(&G__main92DctLN_vectorlEintcOallocatorlEintgRsPgR), G__defined_typename("vector<int>"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("nameProc",821,G__main92Dct_575_0_80, 117, G__get_linked_tagnum(&G__main92DctLN_string), -1, 0, 1, 1, 1, 0, "i - - 0 '0' i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("nTried",614,G__main92Dct_575_0_81, 108, -1, -1, 0, 1, 1, 1, 0, "i - - 0 '0' i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("nSelected",919,G__main92Dct_575_0_82, 108, -1, -1, 0, 1, 1, 1, 0, "i - - 0 '0' i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("nAccepted",903,G__main92Dct_575_0_83, 108, -1, -1, 0, 1, 1, 1, 0, "i - - 0 '0' i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("sigmaGen",811,G__main92Dct_575_0_84, 100, -1, -1, 0, 1, 1, 1, 0, "i - - 0 '0' i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("sigmaErr",826,G__main92Dct_575_0_85, 100, -1, -1, 0, 1, 1, 1, 0, "i - - 0 '0' i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getCounter",1056,G__main92Dct_575_0_86, 105, -1, -1, 0, 1, 1, 1, 8, "i - - 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setCounter",1068,G__main92Dct_575_0_87, 121, -1, -1, 0, 2, 1, 1, 0, 
"i - - 0 - i i - - 0 '0' value", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("addCounter",1033,G__main92Dct_575_0_88, 121, -1, -1, 0, 2, 1, 1, 0, 
"i - - 0 - i i - - 0 '1' value", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("errorReset",1069,G__main92Dct_575_0_89, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("errorMsg",849,G__main92Dct_575_0_90, 121, -1, -1, 0, 4, 1, 1, 0, 
"u 'string' - 0 - messageIn u 'string' - 0 '\" \"' extraIn "
"g - - 0 'false' showAlways u 'basic_ostream<char,char_traits<char> >' 'ostream' 1 'cout' os", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("errorTotalNumber",1687,G__main92Dct_575_0_91, 105, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("errorStatistics",1621,G__main92Dct_575_0_92, 121, -1, -1, 0, 1, 1, 1, 0, "u 'basic_ostream<char,char_traits<char> >' 'ostream' 1 'cout' os", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setTooLowPTmin",1432,G__main92Dct_575_0_93, 121, -1, -1, 0, 1, 1, 1, 0, "g - - 0 - lowPTminIn", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setValence",1034,G__main92Dct_575_0_94, 121, -1, -1, 0, 2, 1, 1, 0, 
"g - - 0 - isVal1In g - - 0 - isVal2In", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("hasHistory",1070,G__main92Dct_575_0_95, 121, -1, -1, 0, 1, 1, 1, 0, "g - - 0 - hasHistoryIn", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("hasHistory",1070,G__main92Dct_575_0_96, 103, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("zNowISR",668,G__main92Dct_575_0_97, 121, -1, -1, 0, 1, 1, 1, 0, "d - - 0 - zNowIn", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("zNowISR",668,G__main92Dct_575_0_98, 100, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("pT2NowISR",792,G__main92Dct_575_0_99, 121, -1, -1, 0, 1, 1, 1, 0, "d - - 0 - pT2NowIn", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("pT2NowISR",792,G__main92Dct_575_0_100, 100, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getWeightCKKWL",1316,G__main92Dct_575_0_101, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setWeightCKKWL",1328,G__main92Dct_575_0_102, 121, -1, -1, 0, 1, 1, 1, 0, "d - - 0 - weightIn", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("mergingWeight",1361,G__main92Dct_575_0_103, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("mergingWeightNLO",1594,G__main92Dct_575_0_104, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getWeightFIRST",1328,G__main92Dct_575_0_105, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setWeightFIRST",1340,G__main92Dct_575_0_106, 121, -1, -1, 0, 1, 1, 1, 0, "d - - 0 - weightIn", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("header",617,G__main92Dct_575_0_107, 117, G__get_linked_tagnum(&G__main92DctLN_string), -1, 0, 1, 1, 1, 0, "u 'string' - 11 - key", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("headerKeys",1029,G__main92Dct_575_0_108, 117, G__get_linked_tagnum(&G__main92DctLN_vectorlEstringcOallocatorlEstringgRsPgR), G__defined_typename("vector<string>"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("nProcessesLHEF",1348,G__main92Dct_575_0_109, 105, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("sigmaLHEF",816,G__main92Dct_575_0_110, 100, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - iProcess", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setLHEF3InitInfo",1470,G__main92Dct_575_0_111, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setLHEF3InitInfo",1470,G__main92Dct_575_0_112, 121, -1, -1, 0, 5, 1, 1, 0, 
"i - - 0 - LHEFversionIn U 'Pythia8::LHAinitrwgt' - 0 - initrwgtIn "
"U 'vector<Pythia8::LHAgenerator,allocator<Pythia8::LHAgenerator> >' 'vector<LHAgenerator>' 0 - generatorsIn U 'map<string,Pythia8::LHAweightgroup,less<string>,allocator<pair<const string,Pythia8::LHAweightgroup> > >' 'map<string,LHAweightgroup>' 0 - weightgroupsIn "
"U 'map<string,Pythia8::LHAweight,less<string>,allocator<pair<const string,Pythia8::LHAweight> > >' 'map<string,LHAweight>' 0 - init_weightsIn", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setLHEF3EventInfo",1580,G__main92Dct_575_0_113, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setLHEF3EventInfo",1580,G__main92Dct_575_0_114, 121, -1, -1, 0, 6, 1, 1, 0, 
"U 'map<string,string,less<string>,allocator<pair<const string,string> > >' 'map<string,string>' 0 - eventAttributesIn U 'map<string,double,less<string>,allocator<pair<const string,double> > >' 'map<string,double>' 0 - weights_detailedIn "
"U 'vector<double,allocator<double> >' 'vector<double>' 0 - weights_compressedIn U 'Pythia8::LHAscales' - 0 - scalesIn "
"U 'Pythia8::LHAweights' - 0 - weightsIn U 'Pythia8::LHArwgt' - 0 - rwgtIn", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getEventAttribute",1782,G__main92Dct_575_0_115, 117, G__get_linked_tagnum(&G__main92DctLN_string), -1, 0, 2, 1, 1, 0, 
"u 'string' - 0 - key g - - 0 'false' doRemoveWhitespace", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("LHEFversion",1061,G__main92Dct_575_0_116, 105, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getInitrwgtSize",1587,G__main92Dct_575_0_117, 104, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getGeneratorSize",1666,G__main92Dct_575_0_118, 104, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getGeneratorValue",1764,G__main92Dct_575_0_119, 117, G__get_linked_tagnum(&G__main92DctLN_string), -1, 0, 1, 1, 1, 0, "h - - 0 '0' n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getGeneratorAttribute",2203,G__main92Dct_575_0_120, 117, G__get_linked_tagnum(&G__main92DctLN_string), -1, 0, 3, 1, 1, 0, 
"h - - 0 - n u 'string' - 0 - key "
"g - - 0 'false' doRemoveWhitespace", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getWeightsDetailedSize",2258,G__main92Dct_575_0_121, 104, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getWeightsDetailedValue",2356,G__main92Dct_575_0_122, 100, -1, -1, 0, 1, 1, 1, 0, "u 'string' - 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getWeightsDetailedAttribute",2795,G__main92Dct_575_0_123, 117, G__get_linked_tagnum(&G__main92DctLN_string), -1, 0, 3, 1, 1, 0, 
"u 'string' - 0 - n u 'string' - 0 - key "
"g - - 0 'false' doRemoveWhitespace", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getWeightsCompressedSize",2507,G__main92Dct_575_0_124, 104, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getWeightsCompressedValue",2605,G__main92Dct_575_0_125, 100, -1, -1, 0, 1, 1, 1, 0, "h - - 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getWeightsCompressedAttribute",3044,G__main92Dct_575_0_126, 117, G__get_linked_tagnum(&G__main92DctLN_string), -1, 0, 2, 1, 1, 0, 
"u 'string' - 0 - key g - - 0 'false' doRemoveWhitespace", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getScalesValue",1432,G__main92Dct_575_0_127, 117, G__get_linked_tagnum(&G__main92DctLN_string), -1, 0, 1, 1, 1, 0, "g - - 0 'false' doRemoveWhitespace", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getScalesAttribute",1871,G__main92Dct_575_0_128, 100, -1, -1, 0, 1, 1, 1, 0, "u 'string' - 0 - key", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setHeader",917,G__main92Dct_575_0_129, 121, -1, -1, 0, 2, 1, 1, 0, 
"u 'string' - 11 - key u 'string' - 11 - val", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setBeamA",770,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 4, 1, 4, 0, 
"i - - 0 - idAin d - - 0 - pzAin "
"d - - 0 - eAin d - - 0 - mAin", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setBeamB",771,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 4, 1, 4, 0, 
"i - - 0 - idBin d - - 0 - pzBin "
"d - - 0 - eBin d - - 0 - mBin", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setECM",545,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 1, 1, 4, 0, "d - - 0 - eCMin", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("clear",519,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("sizeMPIarrays",1331,(G__InterfaceMethod) NULL, 105, -1, -1, 0, 0, 1, 4, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("resizeMPIarrays",1546,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 1, 1, 4, 0, "i - - 0 - newSize", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setType",750,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 9, 1, 4, 0, 
"u 'string' - 0 - nameIn i - - 0 - codeIn "
"i - - 0 - nFinalIn g - - 0 'false' isNonDiffIn "
"g - - 0 'true' isResolvedIn g - - 0 'false' isDiffractiveAin "
"g - - 0 'false' isDiffractiveBin g - - 0 'false' isDiffractiveCin "
"g - - 0 'false' isLHAin", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setSubType",1048,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 4, 1, 4, 0, 
"i - - 0 - iDS u 'string' - 0 - nameSubIn "
"i - - 0 - codeSubIn i - - 0 - nFinalSubIn", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setPDFalpha",1068,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 12, 1, 4, 0, 
"i - - 0 - iDS i - - 0 - id1pdfIn "
"i - - 0 - id2pdfIn d - - 0 - x1pdfIn "
"d - - 0 - x2pdfIn d - - 0 - pdf1In "
"d - - 0 - pdf2In d - - 0 - Q2FacIn "
"d - - 0 - alphaEMIn d - - 0 - alphaSIn "
"d - - 0 - Q2RenIn d - - 0 - scalupIn", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setScalup",948,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 2, 1, 4, 0, 
"i - - 0 - iDS d - - 0 - scalupIn", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setKin",622,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 13, 1, 4, 0, 
"i - - 0 - iDS i - - 0 - id1In "
"i - - 0 - id2In d - - 0 - x1In "
"d - - 0 - x2In d - - 0 - sHatIn "
"d - - 0 - tHatIn d - - 0 - uHatIn "
"d - - 0 - pTHatIn d - - 0 - m3HatIn "
"d - - 0 - m4HatIn d - - 0 - thetaHatIn "
"d - - 0 - phiHatIn", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setTypeMPI",980,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 5, 1, 4, 0, 
"i - - 0 - codeMPIIn d - - 0 - pTMPIIn "
"i - - 0 '0' iAMPIIn i - - 0 '0' iBMPIIn "
"d - - 0 '1.' eMPIIn", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("sigmaReset",1044,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setSigma",829,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 8, 1, 4, 0, 
"i - - 0 - i u 'string' - 0 - procNameIn "
"l - - 0 - nTryIn l - - 0 - nSelIn "
"l - - 0 - nAccIn d - - 0 - sigGenIn "
"d - - 0 - sigErrIn d - - 0 - wtAccSumIn", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("addSigma",794,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 6, 1, 4, 0, 
"i - - 0 - i l - - 0 - nTryIn "
"l - - 0 - nSelIn l - - 0 - nAccIn "
"d - - 0 - sigGenIn d - - 0 - sigErrIn", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setImpact",938,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 3, 1, 4, 0, 
"d - - 0 - bMPIIn d - - 0 - enhanceMPIIn "
"g - - 0 'true' bIsSetIn", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setPartEvolved",1464,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 2, 1, 4, 0, 
"i - - 0 - nMPIIn i - - 0 - nISRIn", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setEvolution",1297,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 7, 1, 4, 0, 
"d - - 0 - pTmaxMPIIn d - - 0 - pTmaxISRIn "
"d - - 0 - pTmaxFSRIn i - - 0 - nMPIIn "
"i - - 0 - nISRIn i - - 0 - nFSRinProcIn "
"i - - 0 - nFSRinResIn", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setPTnow",836,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 1, 1, 4, 0, "d - - 0 - pTnowIn", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("seta0MPI",707,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 1, 1, 4, 0, "d - - 0 - a0MPIin", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setEndOfFile",1176,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 1, 1, 4, 0, "g - - 0 - atEOFin", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setWeight",948,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 2, 1, 4, 0, 
"d - - 0 - weightIn i - - 0 - lhaStrategyIn", (char*)NULL, (void*) NULL, 0);
   // automatic copy constructor
   G__memfunc_setup("Info", 396, G__main92Dct_575_0_152, (int) ('i'), G__get_linked_tagnum(&G__main92DctLN_Pythia8cLcLInfo), -1, 0, 1, 1, 1, 0, "u 'Pythia8::Info' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~Info", 522, G__main92Dct_575_0_153, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__main92Dct_575_0_154, (int) ('u'), G__get_linked_tagnum(&G__main92DctLN_Pythia8cLcLInfo), -1, 1, 1, 1, 1, 0, "u 'Pythia8::Info' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncPythia8cLcLSettings(void) {
   /* Pythia8::Settings */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__main92DctLN_Pythia8cLcLSettings));
   G__memfunc_setup("Settings",849,G__main92Dct_622_0_1, 105, G__get_linked_tagnum(&G__main92DctLN_Pythia8cLcLSettings), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("initPtr",746,G__main92Dct_622_0_2, 121, -1, -1, 0, 1, 1, 1, 0, "U 'Pythia8::Info' - 0 - infoPtrIn", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("init",436,G__main92Dct_622_0_3, 103, -1, -1, 0, 3, 1, 1, 0, 
"u 'string' - 0 '\"../xmldoc/Index.xml\"' startFile g - - 0 'false' append "
"u 'basic_ostream<char,char_traits<char> >' 'ostream' 1 'cout' os", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("reInit",619,G__main92Dct_622_0_4, 103, -1, -1, 0, 2, 1, 1, 0, 
"u 'string' - 0 '\"../xmldoc/Index.xml\"' startFile u 'basic_ostream<char,char_traits<char> >' 'ostream' 1 'cout' os", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("readString",1043,G__main92Dct_622_0_5, 103, -1, -1, 0, 3, 1, 1, 0, 
"u 'string' - 0 - line g - - 0 'true' warn "
"u 'basic_ostream<char,char_traits<char> >' 'ostream' 1 'cout' os", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("readingFailed",1311,G__main92Dct_622_0_6, 103, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("writeFile",939,G__main92Dct_622_0_7, 103, -1, -1, 0, 2, 1, 1, 0, 
"u 'string' - 0 - toFile g - - 0 'false' writeAll", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("writeFile",939,G__main92Dct_622_0_8, 103, -1, -1, 0, 2, 1, 1, 0, 
"u 'basic_ostream<char,char_traits<char> >' 'ostream' 1 'cout' os g - - 0 'false' writeAll", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("listAll",725,G__main92Dct_622_0_9, 121, -1, -1, 0, 1, 1, 1, 0, "u 'basic_ostream<char,char_traits<char> >' 'ostream' 1 'cout' os", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("listChanged",1126,G__main92Dct_622_0_10, 121, -1, -1, 0, 1, 1, 1, 0, "u 'basic_ostream<char,char_traits<char> >' 'ostream' 1 'cout' os", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("list",444,G__main92Dct_622_0_11, 121, -1, -1, 0, 2, 1, 1, 0, 
"u 'string' - 0 - match u 'basic_ostream<char,char_traits<char> >' 'ostream' 1 'cout' os", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("resetAll",828,G__main92Dct_622_0_12, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("isFlag",598,G__main92Dct_622_0_13, 103, -1, -1, 0, 1, 1, 1, 0, "u 'string' - 0 - keyIn", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("isMode",609,G__main92Dct_622_0_14, 103, -1, -1, 0, 1, 1, 1, 0, "u 'string' - 0 - keyIn", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("isParm",620,G__main92Dct_622_0_15, 103, -1, -1, 0, 1, 1, 1, 0, "u 'string' - 0 - keyIn", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("isWord",632,G__main92Dct_622_0_16, 103, -1, -1, 0, 1, 1, 1, 0, "u 'string' - 0 - keyIn", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("isFVec",576,G__main92Dct_622_0_17, 103, -1, -1, 0, 1, 1, 1, 0, "u 'string' - 0 - keyIn", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("isMVec",583,G__main92Dct_622_0_18, 103, -1, -1, 0, 1, 1, 1, 0, "u 'string' - 0 - keyIn", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("isPVec",586,G__main92Dct_622_0_19, 103, -1, -1, 0, 1, 1, 1, 0, "u 'string' - 0 - keyIn", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("addFlag",675,G__main92Dct_622_0_20, 121, -1, -1, 0, 2, 1, 1, 0, 
"u 'string' - 0 - keyIn g - - 0 - defaultIn", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("addMode",686,G__main92Dct_622_0_21, 121, -1, -1, 0, 6, 1, 1, 0, 
"u 'string' - 0 - keyIn i - - 0 - defaultIn "
"g - - 0 - hasMinIn g - - 0 - hasMaxIn "
"i - - 0 - minIn i - - 0 - maxIn", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("addParm",697,G__main92Dct_622_0_22, 121, -1, -1, 0, 6, 1, 1, 0, 
"u 'string' - 0 - keyIn d - - 0 - defaultIn "
"g - - 0 - hasMinIn g - - 0 - hasMaxIn "
"d - - 0 - minIn d - - 0 - maxIn", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("addWord",709,G__main92Dct_622_0_23, 121, -1, -1, 0, 2, 1, 1, 0, 
"u 'string' - 0 - keyIn u 'string' - 0 - defaultIn", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("addFVec",653,G__main92Dct_622_0_24, 121, -1, -1, 0, 2, 1, 1, 0, 
"u 'string' - 0 - keyIn u 'vector<bool,allocator<bool> >' 'vector<bool>' 0 - defaultIn", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("addMVec",660,G__main92Dct_622_0_25, 121, -1, -1, 0, 6, 1, 1, 0, 
"u 'string' - 0 - keyIn u 'vector<int,allocator<int> >' 'vector<int>' 0 - defaultIn "
"g - - 0 - hasMinIn g - - 0 - hasMaxIn "
"i - - 0 - minIn i - - 0 - maxIn", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("addPVec",663,G__main92Dct_622_0_26, 121, -1, -1, 0, 6, 1, 1, 0, 
"u 'string' - 0 - keyIn u 'vector<double,allocator<double> >' 'vector<double>' 0 - defaultIn "
"g - - 0 - hasMinIn g - - 0 - hasMaxIn "
"d - - 0 - minIn d - - 0 - maxIn", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("flag",410,G__main92Dct_622_0_27, 103, -1, -1, 0, 1, 1, 1, 0, "u 'string' - 0 - keyIn", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("mode",421,G__main92Dct_622_0_28, 105, -1, -1, 0, 1, 1, 1, 0, "u 'string' - 0 - keyIn", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("parm",432,G__main92Dct_622_0_29, 100, -1, -1, 0, 1, 1, 1, 0, "u 'string' - 0 - keyIn", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("word",444,G__main92Dct_622_0_30, 117, G__get_linked_tagnum(&G__main92DctLN_string), -1, 0, 1, 1, 1, 0, "u 'string' - 0 - keyIn", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("fvec",420,G__main92Dct_622_0_31, 117, G__get_linked_tagnum(&G__main92DctLN_vectorlEboolcOallocatorlEboolgRsPgR), G__defined_typename("vector<bool>"), 0, 1, 1, 1, 0, "u 'string' - 0 - keyIn", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("mvec",427,G__main92Dct_622_0_32, 117, G__get_linked_tagnum(&G__main92DctLN_vectorlEintcOallocatorlEintgRsPgR), G__defined_typename("vector<int>"), 0, 1, 1, 1, 0, "u 'string' - 0 - keyIn", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("pvec",430,G__main92Dct_622_0_33, 117, G__get_linked_tagnum(&G__main92DctLN_vectorlEdoublecOallocatorlEdoublegRsPgR), G__defined_typename("vector<double>"), 0, 1, 1, 1, 0, "u 'string' - 0 - keyIn", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("flagDefault",1119,G__main92Dct_622_0_34, 103, -1, -1, 0, 1, 1, 1, 0, "u 'string' - 0 - keyIn", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("modeDefault",1130,G__main92Dct_622_0_35, 105, -1, -1, 0, 1, 1, 1, 0, "u 'string' - 0 - keyIn", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("parmDefault",1141,G__main92Dct_622_0_36, 100, -1, -1, 0, 1, 1, 1, 0, "u 'string' - 0 - keyIn", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("wordDefault",1153,G__main92Dct_622_0_37, 117, G__get_linked_tagnum(&G__main92DctLN_string), -1, 0, 1, 1, 1, 0, "u 'string' - 0 - keyIn", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("fvecDefault",1129,G__main92Dct_622_0_38, 117, G__get_linked_tagnum(&G__main92DctLN_vectorlEboolcOallocatorlEboolgRsPgR), G__defined_typename("vector<bool>"), 0, 1, 1, 1, 0, "u 'string' - 0 - keyIn", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("mvecDefault",1136,G__main92Dct_622_0_39, 117, G__get_linked_tagnum(&G__main92DctLN_vectorlEintcOallocatorlEintgRsPgR), G__defined_typename("vector<int>"), 0, 1, 1, 1, 0, "u 'string' - 0 - keyIn", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("pvecDefault",1139,G__main92Dct_622_0_40, 117, G__get_linked_tagnum(&G__main92DctLN_vectorlEdoublecOallocatorlEdoublegRsPgR), G__defined_typename("vector<double>"), 0, 1, 1, 1, 0, "u 'string' - 0 - keyIn", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getFlagMap",984,G__main92Dct_622_0_41, 117, G__get_linked_tagnum(&G__main92DctLN_maplEstringcOPythia8cLcLFlagcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOPythia8cLcLFlaggRsPgRsPgR), G__defined_typename("map<string,Flag>"), 0, 1, 1, 1, 0, "u 'string' - 0 - match", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getModeMap",995,G__main92Dct_622_0_42, 117, G__get_linked_tagnum(&G__main92DctLN_maplEstringcOPythia8cLcLModecOlesslEstringgRcOallocatorlEpairlEconstsPstringcOPythia8cLcLModegRsPgRsPgR), G__defined_typename("map<string,Mode>"), 0, 1, 1, 1, 0, "u 'string' - 0 - match", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getParmMap",1006,G__main92Dct_622_0_43, 117, G__get_linked_tagnum(&G__main92DctLN_maplEstringcOPythia8cLcLParmcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOPythia8cLcLParmgRsPgRsPgR), G__defined_typename("map<string,Parm>"), 0, 1, 1, 1, 0, "u 'string' - 0 - match", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getWordMap",1018,G__main92Dct_622_0_44, 117, G__get_linked_tagnum(&G__main92DctLN_maplEstringcOPythia8cLcLWordcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOPythia8cLcLWordgRsPgRsPgR), G__defined_typename("map<string,Word>"), 0, 1, 1, 1, 0, "u 'string' - 0 - match", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getFVecMap",962,G__main92Dct_622_0_45, 117, G__get_linked_tagnum(&G__main92DctLN_maplEstringcOPythia8cLcLFVeccOlesslEstringgRcOallocatorlEpairlEconstsPstringcOPythia8cLcLFVecgRsPgRsPgR), G__defined_typename("map<string,FVec>"), 0, 1, 1, 1, 0, "u 'string' - 0 - match", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getMVecMap",969,G__main92Dct_622_0_46, 117, G__get_linked_tagnum(&G__main92DctLN_maplEstringcOPythia8cLcLMVeccOlesslEstringgRcOallocatorlEpairlEconstsPstringcOPythia8cLcLMVecgRsPgRsPgR), G__defined_typename("map<string,MVec>"), 0, 1, 1, 1, 0, "u 'string' - 0 - match", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getPVecMap",972,G__main92Dct_622_0_47, 117, G__get_linked_tagnum(&G__main92DctLN_maplEstringcOPythia8cLcLPVeccOlesslEstringgRcOallocatorlEpairlEconstsPstringcOPythia8cLcLPVecgRsPgRsPgR), G__defined_typename("map<string,PVec>"), 0, 1, 1, 1, 0, "u 'string' - 0 - match", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("flag",410,G__main92Dct_622_0_48, 121, -1, -1, 0, 2, 1, 1, 0, 
"u 'string' - 0 - keyIn g - - 0 - nowIn", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("mode",421,G__main92Dct_622_0_49, 121, -1, -1, 0, 2, 1, 1, 0, 
"u 'string' - 0 - keyIn i - - 0 - nowIn", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("parm",432,G__main92Dct_622_0_50, 121, -1, -1, 0, 2, 1, 1, 0, 
"u 'string' - 0 - keyIn d - - 0 - nowIn", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("word",444,G__main92Dct_622_0_51, 121, -1, -1, 0, 2, 1, 1, 0, 
"u 'string' - 0 - keyIn u 'string' - 0 - nowIn", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("fvec",420,G__main92Dct_622_0_52, 121, -1, -1, 0, 2, 1, 1, 0, 
"u 'string' - 0 - keyIn u 'vector<bool,allocator<bool> >' 'vector<bool>' 0 - nowIn", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("mvec",427,G__main92Dct_622_0_53, 121, -1, -1, 0, 2, 1, 1, 0, 
"u 'string' - 0 - keyIn u 'vector<int,allocator<int> >' 'vector<int>' 0 - nowIn", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("pvec",430,G__main92Dct_622_0_54, 121, -1, -1, 0, 2, 1, 1, 0, 
"u 'string' - 0 - keyIn u 'vector<double,allocator<double> >' 'vector<double>' 0 - nowIn", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("forceMode",916,G__main92Dct_622_0_55, 121, -1, -1, 0, 2, 1, 1, 0, 
"u 'string' - 0 - keyIn i - - 0 - nowIn", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("forceParm",927,G__main92Dct_622_0_56, 121, -1, -1, 0, 2, 1, 1, 0, 
"u 'string' - 0 - keyIn d - - 0 - nowIn", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("forceMVec",890,G__main92Dct_622_0_57, 121, -1, -1, 0, 2, 1, 1, 0, 
"u 'string' - 0 - keyIn u 'vector<int,allocator<int> >' 'vector<int>' 0 - nowIn", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("forcePVec",893,G__main92Dct_622_0_58, 121, -1, -1, 0, 2, 1, 1, 0, 
"u 'string' - 0 - keyIn u 'vector<double,allocator<double> >' 'vector<double>' 0 - nowIn", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("resetFlag",925,G__main92Dct_622_0_59, 121, -1, -1, 0, 1, 1, 1, 0, "u 'string' - 0 - keyIn", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("resetMode",936,G__main92Dct_622_0_60, 121, -1, -1, 0, 1, 1, 1, 0, "u 'string' - 0 - keyIn", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("resetParm",947,G__main92Dct_622_0_61, 121, -1, -1, 0, 1, 1, 1, 0, "u 'string' - 0 - keyIn", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("resetWord",959,G__main92Dct_622_0_62, 121, -1, -1, 0, 1, 1, 1, 0, "u 'string' - 0 - keyIn", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("resetFVec",903,G__main92Dct_622_0_63, 121, -1, -1, 0, 1, 1, 1, 0, "u 'string' - 0 - keyIn", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("resetMVec",910,G__main92Dct_622_0_64, 121, -1, -1, 0, 1, 1, 1, 0, "u 'string' - 0 - keyIn", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("resetPVec",913,G__main92Dct_622_0_65, 121, -1, -1, 0, 1, 1, 1, 0, "u 'string' - 0 - keyIn", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("list",444,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 4, 1, 4, 0, 
"g - - 0 - doListAll g - - 0 - doListString "
"u 'string' - 0 - match u 'basic_ostream<char,char_traits<char> >' 'ostream' 1 'cout' os", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("printQuiet",1077,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 1, 1, 4, 0, "g - - 0 - quiet", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("resetTuneEE",1097,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("resetTunePP",1119,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("initTuneEE",986,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 1, 1, 4, 0, "i - - 0 - eeTune", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("initTunePP",1008,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 1, 1, 4, 0, "i - - 0 - ppTune", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("toLower",748,(G__InterfaceMethod) NULL, 117, G__get_linked_tagnum(&G__main92DctLN_string), -1, 0, 1, 1, 4, 0, "u 'string' - 11 - name", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("boolString",1059,(G__InterfaceMethod) NULL, 103, -1, -1, 0, 1, 1, 4, 0, "u 'string' - 0 - tag", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("attributeValue",1489,(G__InterfaceMethod) NULL, 117, G__get_linked_tagnum(&G__main92DctLN_string), -1, 0, 2, 1, 4, 0, 
"u 'string' - 0 - line u 'string' - 0 - attribute", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("boolAttributeValue",1885,(G__InterfaceMethod) NULL, 103, -1, -1, 0, 2, 1, 4, 0, 
"u 'string' - 0 - line u 'string' - 0 - attribute", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("intAttributeValue",1788,(G__InterfaceMethod) NULL, 105, -1, -1, 0, 2, 1, 4, 0, 
"u 'string' - 0 - line u 'string' - 0 - attribute", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("doubleAttributeValue",2092,(G__InterfaceMethod) NULL, 100, -1, -1, 0, 2, 1, 4, 0, 
"u 'string' - 0 - line u 'string' - 0 - attribute", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("boolVectorAttributeValue",2512,(G__InterfaceMethod) NULL, 117, G__get_linked_tagnum(&G__main92DctLN_vectorlEboolcOallocatorlEboolgRsPgR), G__defined_typename("vector<bool>"), 0, 2, 1, 4, 0, 
"u 'string' - 0 - line u 'string' - 0 - attribute", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("intVectorAttributeValue",2415,(G__InterfaceMethod) NULL, 117, G__get_linked_tagnum(&G__main92DctLN_vectorlEintcOallocatorlEintgRsPgR), G__defined_typename("vector<int>"), 0, 2, 1, 4, 0, 
"u 'string' - 0 - line u 'string' - 0 - attribute", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("doubleVectorAttributeValue",2719,(G__InterfaceMethod) NULL, 117, G__get_linked_tagnum(&G__main92DctLN_vectorlEdoublecOallocatorlEdoublegRsPgR), G__defined_typename("vector<double>"), 0, 2, 1, 4, 0, 
"u 'string' - 0 - line u 'string' - 0 - attribute", (char*)NULL, (void*) NULL, 0);
   // automatic copy constructor
   G__memfunc_setup("Settings", 849, G__main92Dct_622_0_81, (int) ('i'), G__get_linked_tagnum(&G__main92DctLN_Pythia8cLcLSettings), -1, 0, 1, 1, 1, 0, "u 'Pythia8::Settings' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~Settings", 975, G__main92Dct_622_0_82, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__main92Dct_622_0_83, (int) ('u'), G__get_linked_tagnum(&G__main92DctLN_Pythia8cLcLSettings), -1, 1, 1, 1, 1, 0, "u 'Pythia8::Settings' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncPythia8cLcLAlphaStrong(void) {
   /* Pythia8::AlphaStrong */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__main92DctLN_Pythia8cLcLAlphaStrong));
   G__memfunc_setup("AlphaStrong",1123,G__main92Dct_672_0_1, 105, G__get_linked_tagnum(&G__main92DctLN_Pythia8cLcLAlphaStrong), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("AlphaStrong",1123,G__main92Dct_672_0_2, 105, G__get_linked_tagnum(&G__main92DctLN_Pythia8cLcLAlphaStrong), -1, 0, 2, 1, 1, 0, 
"d - - 0 - valueIn i - - 0 '1' orderIn", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("init",436,G__main92Dct_672_0_3, 121, -1, -1, 0, 4, 1, 1, 0, 
"d - - 0 '0.12' valueIn i - - 0 '1' orderIn "
"i - - 0 '6' nfmaxIn g - - 0 'false' useCMWIn", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("alphaS",601,G__main92Dct_672_0_4, 100, -1, -1, 0, 1, 1, 1, 0, "d - - 0 - scale2", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("alphaS1Ord",943,G__main92Dct_672_0_5, 100, -1, -1, 0, 1, 1, 1, 0, "d - - 0 - scale2", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("alphaS2OrdCorr",1350,G__main92Dct_672_0_6, 100, -1, -1, 0, 1, 1, 1, 0, "d - - 0 - scale2", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Lambda3",628,G__main92Dct_672_0_7, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Lambda4",629,G__main92Dct_672_0_8, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Lambda5",630,G__main92Dct_672_0_9, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Lambda6",631,G__main92Dct_672_0_10, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("muThres",744,G__main92Dct_672_0_11, 100, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - idQ", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("muThres2",794,G__main92Dct_672_0_12, 100, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - idQ", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("facCMW",529,G__main92Dct_672_0_13, 100, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - nFin", (char*)NULL, (void*) NULL, 0);
   // automatic copy constructor
   G__memfunc_setup("AlphaStrong", 1123, G__main92Dct_672_0_14, (int) ('i'), G__get_linked_tagnum(&G__main92DctLN_Pythia8cLcLAlphaStrong), -1, 0, 1, 1, 1, 0, "u 'Pythia8::AlphaStrong' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~AlphaStrong", 1249, G__main92Dct_672_0_15, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__main92Dct_672_0_16, (int) ('u'), G__get_linked_tagnum(&G__main92DctLN_Pythia8cLcLAlphaStrong), -1, 1, 1, 1, 1, 0, "u 'Pythia8::AlphaStrong' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncPythia8cLcLAlphaEM(void) {
   /* Pythia8::AlphaEM */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__main92DctLN_Pythia8cLcLAlphaEM));
   G__memfunc_setup("AlphaEM",632,G__main92Dct_673_0_1, 105, G__get_linked_tagnum(&G__main92DctLN_Pythia8cLcLAlphaEM), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("init",436,G__main92Dct_673_0_2, 121, -1, -1, 0, 2, 1, 1, 0, 
"i - - 0 - orderIn U 'Pythia8::Settings' - 0 - settingsPtr", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("alphaEM",664,G__main92Dct_673_0_3, 100, -1, -1, 0, 1, 1, 1, 0, "d - - 0 - scale2", (char*)NULL, (void*) NULL, 0);
   // automatic copy constructor
   G__memfunc_setup("AlphaEM", 632, G__main92Dct_673_0_4, (int) ('i'), G__get_linked_tagnum(&G__main92DctLN_Pythia8cLcLAlphaEM), -1, 0, 1, 1, 1, 0, "u 'Pythia8::AlphaEM' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~AlphaEM", 758, G__main92Dct_673_0_5, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__main92Dct_673_0_6, (int) ('u'), G__get_linked_tagnum(&G__main92DctLN_Pythia8cLcLAlphaEM), -1, 1, 1, 1, 1, 0, "u 'Pythia8::AlphaEM' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncPythia8cLcLCoupSM(void) {
   /* Pythia8::CoupSM */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__main92DctLN_Pythia8cLcLCoupSM));
   G__memfunc_setup("CoupSM",567,G__main92Dct_674_0_1, 105, G__get_linked_tagnum(&G__main92DctLN_Pythia8cLcLCoupSM), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("init",436,G__main92Dct_674_0_2, 121, -1, -1, 0, 2, 1, 1, 0, 
"u 'Pythia8::Settings' - 1 - settings U 'Pythia8::Rndm' - 0 - rndmPtrIn", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("alphaS",601,G__main92Dct_674_0_3, 100, -1, -1, 0, 1, 1, 1, 0, "d - - 0 - scale2", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("alphaS1Ord",943,G__main92Dct_674_0_4, 100, -1, -1, 0, 1, 1, 1, 0, "d - - 0 - scale2", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("alphaS2OrdCorr",1350,G__main92Dct_674_0_5, 100, -1, -1, 0, 1, 1, 1, 0, "d - - 0 - scale2", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Lambda3",628,G__main92Dct_674_0_6, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Lambda4",629,G__main92Dct_674_0_7, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Lambda5",630,G__main92Dct_674_0_8, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("alphaEM",664,G__main92Dct_674_0_9, 100, -1, -1, 0, 1, 1, 1, 0, "d - - 0 - scale2", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("sin2thetaW",1001,G__main92Dct_674_0_10, 100, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("cos2thetaW",996,G__main92Dct_674_0_11, 100, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("sin2thetaWbar",1310,G__main92Dct_674_0_12, 100, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GF",141,G__main92Dct_674_0_13, 100, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ef",203,G__main92Dct_674_0_14, 100, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - idAbs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("vf",220,G__main92Dct_674_0_15, 100, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - idAbs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("af",199,G__main92Dct_674_0_16, 100, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - idAbs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("t3f",269,G__main92Dct_674_0_17, 100, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - idAbs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("lf",210,G__main92Dct_674_0_18, 100, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - idAbs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("rf",216,G__main92Dct_674_0_19, 100, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - idAbs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ef2",253,G__main92Dct_674_0_20, 100, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - idAbs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("vf2",270,G__main92Dct_674_0_21, 100, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - idAbs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("af2",249,G__main92Dct_674_0_22, 100, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - idAbs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("efvf",423,G__main92Dct_674_0_23, 100, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - idAbs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("vf2af2",519,G__main92Dct_674_0_24, 100, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - idAbs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("VCKMgen",619,G__main92Dct_674_0_25, 100, -1, -1, 0, 2, 1, 1, 0, 
"i - - 0 - genU i - - 0 - genD", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("V2CKMgen",669,G__main92Dct_674_0_26, 100, -1, -1, 0, 2, 1, 1, 0, 
"i - - 0 - genU i - - 0 - genD", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("VCKMid",510,G__main92Dct_674_0_27, 100, -1, -1, 0, 2, 1, 1, 0, 
"i - - 0 - id1 i - - 0 - id2", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("V2CKMid",560,G__main92Dct_674_0_28, 100, -1, -1, 0, 2, 1, 1, 0, 
"i - - 0 - id1 i - - 0 - id2", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("V2CKMsum",696,G__main92Dct_674_0_29, 100, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - id", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("V2CKMpick",778,G__main92Dct_674_0_30, 105, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - id", (char*)NULL, (void*) NULL, 0);
   // automatic copy constructor
   G__memfunc_setup("CoupSM", 567, G__main92Dct_674_0_31, (int) ('i'), G__get_linked_tagnum(&G__main92DctLN_Pythia8cLcLCoupSM), -1, 0, 1, 1, 1, 0, "u 'Pythia8::CoupSM' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~CoupSM", 693, G__main92Dct_674_0_32, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__main92Dct_674_0_33, (int) ('u'), G__get_linked_tagnum(&G__main92DctLN_Pythia8cLcLCoupSM), -1, 1, 1, 1, 1, 0, "u 'Pythia8::CoupSM' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncPythia8cLcLCouplings(void) {
   /* Pythia8::Couplings */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__main92DctLN_Pythia8cLcLCouplings));
   G__memfunc_setup("Couplings",948,G__main92Dct_675_0_1, 105, G__get_linked_tagnum(&G__main92DctLN_Pythia8cLcLCouplings), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   // automatic copy constructor
   G__memfunc_setup("Couplings", 948, G__main92Dct_675_0_2, (int) ('i'), G__get_linked_tagnum(&G__main92DctLN_Pythia8cLcLCouplings), -1, 0, 1, 1, 1, 0, "u 'Pythia8::Couplings' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~Couplings", 1074, G__main92Dct_675_0_3, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__main92Dct_675_0_4, (int) ('u'), G__get_linked_tagnum(&G__main92DctLN_Pythia8cLcLCouplings), -1, 1, 1, 1, 1, 0, "u 'Pythia8::Couplings' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncPythia8cLcLParticleData(void) {
   /* Pythia8::ParticleData */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__main92DctLN_Pythia8cLcLParticleData));
   G__memfunc_setup("ParticleData",1198,G__main92Dct_676_0_1, 105, G__get_linked_tagnum(&G__main92DctLN_Pythia8cLcLParticleData), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("initPtr",746,G__main92Dct_676_0_2, 121, -1, -1, 0, 4, 1, 1, 0, 
"U 'Pythia8::Info' - 0 - infoPtrIn U 'Pythia8::Settings' - 0 - settingsPtrIn "
"U 'Pythia8::Rndm' - 0 - rndmPtrIn U 'Pythia8::Couplings' - 0 - couplingsPtrIn", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("init",436,G__main92Dct_676_0_3, 103, -1, -1, 0, 1, 1, 1, 0, "u 'string' - 0 '\"../xmldoc/ParticleData.xml\"' startFile", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("reInit",619,G__main92Dct_676_0_4, 103, -1, -1, 0, 2, 1, 1, 0, 
"u 'string' - 0 - startFile g - - 0 'true' xmlFormat", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("initWidths",1063,G__main92Dct_676_0_5, 121, -1, -1, 0, 1, 1, 1, 0, "u 'vector<Pythia8::ResonanceWidths*,allocator<Pythia8::ResonanceWidths*> >' 'vector<ResonanceWidths*>' 0 - resonancePtrs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("readXML",653,G__main92Dct_676_0_6, 103, -1, -1, 0, 2, 1, 1, 0, 
"u 'string' - 0 - inFile g - - 0 'true' reset", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("listXML",685,G__main92Dct_676_0_7, 121, -1, -1, 0, 1, 1, 1, 0, "u 'string' - 0 - outFile", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("readFF",552,G__main92Dct_676_0_8, 103, -1, -1, 0, 2, 1, 1, 0, 
"u 'string' - 0 - inFile g - - 0 'true' reset", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("listFF",584,G__main92Dct_676_0_9, 121, -1, -1, 0, 1, 1, 1, 0, "u 'string' - 0 - outFile", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("readString",1043,G__main92Dct_676_0_10, 103, -1, -1, 0, 3, 1, 1, 0, 
"u 'string' - 0 - lineIn g - - 0 'true' warn "
"u 'basic_ostream<char,char_traits<char> >' 'ostream' 1 'cout' os", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("readingFailed",1311,G__main92Dct_676_0_11, 103, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("listAll",725,G__main92Dct_676_0_12, 121, -1, -1, 0, 1, 1, 1, 0, "u 'basic_ostream<char,char_traits<char> >' 'ostream' 1 'cout' os", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("listChanged",1126,G__main92Dct_676_0_13, 121, -1, -1, 0, 1, 1, 1, 0, "u 'basic_ostream<char,char_traits<char> >' 'ostream' 1 'cout' os", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("listChanged",1126,G__main92Dct_676_0_14, 121, -1, -1, 0, 2, 1, 1, 0, 
"g - - 0 - changedRes u 'basic_ostream<char,char_traits<char> >' 'ostream' 1 'cout' os", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("list",444,G__main92Dct_676_0_15, 121, -1, -1, 0, 3, 1, 1, 0, 
"g - - 0 'false' changedOnly g - - 0 'true' changedRes "
"u 'basic_ostream<char,char_traits<char> >' 'ostream' 1 'cout' os", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("list",444,G__main92Dct_676_0_16, 121, -1, -1, 0, 2, 1, 1, 0, 
"i - - 0 - idList u 'basic_ostream<char,char_traits<char> >' 'ostream' 1 'cout' os", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("list",444,G__main92Dct_676_0_17, 121, -1, -1, 0, 2, 1, 1, 0, 
"u 'vector<int,allocator<int> >' 'vector<int>' 0 - idList u 'basic_ostream<char,char_traits<char> >' 'ostream' 1 'cout' os", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("checkTable",998,G__main92Dct_676_0_18, 121, -1, -1, 0, 1, 1, 1, 0, "u 'basic_ostream<char,char_traits<char> >' 'ostream' 1 'cout' os", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("checkTable",998,G__main92Dct_676_0_19, 121, -1, -1, 0, 2, 1, 1, 0, 
"i - - 0 - verbosity u 'basic_ostream<char,char_traits<char> >' 'ostream' 1 'cout' os", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("addParticle",1117,G__main92Dct_676_0_20, 121, -1, -1, 0, 10, 1, 1, 0, 
"i - - 0 - idIn u 'string' - 0 '\" \"' nameIn "
"i - - 0 '0' spinTypeIn i - - 0 '0' chargeTypeIn "
"i - - 0 '0' colTypeIn d - - 0 '0.' m0In "
"d - - 0 '0.' mWidthIn d - - 0 '0.' mMinIn "
"d - - 0 '0.' mMaxIn d - - 0 '0.' tau0In", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("addParticle",1117,G__main92Dct_676_0_21, 121, -1, -1, 0, 11, 1, 1, 0, 
"i - - 0 - idIn u 'string' - 0 - nameIn "
"u 'string' - 0 - antiNameIn i - - 0 '0' spinTypeIn "
"i - - 0 '0' chargeTypeIn i - - 0 '0' colTypeIn "
"d - - 0 '0.' m0In d - - 0 '0.' mWidthIn "
"d - - 0 '0.' mMinIn d - - 0 '0.' mMaxIn "
"d - - 0 '0.' tau0In", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setAll",613,G__main92Dct_676_0_22, 121, -1, -1, 0, 11, 1, 1, 0, 
"i - - 0 - idIn u 'string' - 0 - nameIn "
"u 'string' - 0 - antiNameIn i - - 0 '0' spinTypeIn "
"i - - 0 '0' chargeTypeIn i - - 0 '0' colTypeIn "
"d - - 0 '0.' m0In d - - 0 '0.' mWidthIn "
"d - - 0 '0.' mMinIn d - - 0 '0.' mMaxIn "
"d - - 0 '0.' tau0In", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("isParticle",1040,G__main92Dct_676_0_23, 103, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - idIn", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("nextId",620,G__main92Dct_676_0_24, 105, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - idIn", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("name",417,G__main92Dct_676_0_25, 121, -1, -1, 0, 2, 1, 1, 0, 
"i - - 0 - idIn u 'string' - 0 - nameIn", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("antiName",813,G__main92Dct_676_0_26, 121, -1, -1, 0, 2, 1, 1, 0, 
"i - - 0 - idIn u 'string' - 0 - antiNameIn", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("names",532,G__main92Dct_676_0_27, 121, -1, -1, 0, 3, 1, 1, 0, 
"i - - 0 - idIn u 'string' - 0 - nameIn "
"u 'string' - 0 - antiNameIn", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("spinType",860,G__main92Dct_676_0_28, 121, -1, -1, 0, 2, 1, 1, 0, 
"i - - 0 - idIn i - - 0 - spinTypeIn", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("chargeType",1036,G__main92Dct_676_0_29, 121, -1, -1, 0, 2, 1, 1, 0, 
"i - - 0 - idIn i - - 0 - chargeTypeIn", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("colType",736,G__main92Dct_676_0_30, 121, -1, -1, 0, 2, 1, 1, 0, 
"i - - 0 - idIn i - - 0 - colTypeIn", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("m0",157,G__main92Dct_676_0_31, 121, -1, -1, 0, 2, 1, 1, 0, 
"i - - 0 - idIn d - - 0 - m0In", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("mWidth",621,G__main92Dct_676_0_32, 121, -1, -1, 0, 2, 1, 1, 0, 
"i - - 0 - idIn d - - 0 - mWidthIn", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("mMin",401,G__main92Dct_676_0_33, 121, -1, -1, 0, 2, 1, 1, 0, 
"i - - 0 - idIn d - - 0 - mMinIn", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("mMax",403,G__main92Dct_676_0_34, 121, -1, -1, 0, 2, 1, 1, 0, 
"i - - 0 - idIn d - - 0 - mMaxIn", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("tau0",378,G__main92Dct_676_0_35, 121, -1, -1, 0, 2, 1, 1, 0, 
"i - - 0 - idIn d - - 0 - tau0In", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("isResonance",1146,G__main92Dct_676_0_36, 121, -1, -1, 0, 2, 1, 1, 0, 
"i - - 0 - idIn g - - 0 - isResonanceIn", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("mayDecay",813,G__main92Dct_676_0_37, 121, -1, -1, 0, 2, 1, 1, 0, 
"i - - 0 - idIn g - - 0 - mayDecayIn", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("doExternalDecay",1532,G__main92Dct_676_0_38, 121, -1, -1, 0, 2, 1, 1, 0, 
"i - - 0 - idIn g - - 0 - doExternalDecayIn", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("isVisible",938,G__main92Dct_676_0_39, 121, -1, -1, 0, 2, 1, 1, 0, 
"i - - 0 - idIn g - - 0 - isVisibleIn", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("doForceWidth",1218,G__main92Dct_676_0_40, 121, -1, -1, 0, 2, 1, 1, 0, 
"i - - 0 - idIn g - - 0 - doForceWidthIn", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("hasChanged",998,G__main92Dct_676_0_41, 121, -1, -1, 0, 2, 1, 1, 0, 
"i - - 0 - idIn g - - 0 - hasChangedIn", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("hasAnti",712,G__main92Dct_676_0_42, 103, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - idIn", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("name",417,G__main92Dct_676_0_43, 117, G__get_linked_tagnum(&G__main92DctLN_string), -1, 0, 1, 1, 1, 0, "i - - 0 - idIn", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("spinType",860,G__main92Dct_676_0_44, 105, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - idIn", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("chargeType",1036,G__main92Dct_676_0_45, 105, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - idIn", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("charge",618,G__main92Dct_676_0_46, 100, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - idIn", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("colType",736,G__main92Dct_676_0_47, 105, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - idIn", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("m0",157,G__main92Dct_676_0_48, 100, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - idIn", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("mWidth",621,G__main92Dct_676_0_49, 100, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - idIn", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("mMin",401,G__main92Dct_676_0_50, 100, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - idIn", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("m0Min",449,G__main92Dct_676_0_51, 100, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - idIn", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("mMax",403,G__main92Dct_676_0_52, 100, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - idIn", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("m0Max",451,G__main92Dct_676_0_53, 100, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - idIn", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("tau0",378,G__main92Dct_676_0_54, 100, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - idIn", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("isResonance",1146,G__main92Dct_676_0_55, 103, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - idIn", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("mayDecay",813,G__main92Dct_676_0_56, 103, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - idIn", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("doExternalDecay",1532,G__main92Dct_676_0_57, 103, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - idIn", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("isVisible",938,G__main92Dct_676_0_58, 103, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - idIn", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("doForceWidth",1218,G__main92Dct_676_0_59, 103, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - idIn", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("hasChanged",998,G__main92Dct_676_0_60, 103, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - idIn", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("useBreitWigner",1455,G__main92Dct_676_0_61, 103, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - idIn", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("constituentMass",1620,G__main92Dct_676_0_62, 100, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - idIn", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("mSel",401,G__main92Dct_676_0_63, 100, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - idIn", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("mRun",418,G__main92Dct_676_0_64, 100, -1, -1, 0, 2, 1, 1, 0, 
"i - - 0 - idIn d - - 0 - mH", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("canDecay",792,G__main92Dct_676_0_65, 103, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - idIn", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("isLepton",846,G__main92Dct_676_0_66, 103, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - idIn", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("isQuark",736,G__main92Dct_676_0_67, 103, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - idIn", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("isGluon",737,G__main92Dct_676_0_68, 103, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - idIn", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("isDiquark",941,G__main92Dct_676_0_69, 103, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - idIn", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("isParton",848,G__main92Dct_676_0_70, 103, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - idIn", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("isHadron",824,G__main92Dct_676_0_71, 103, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - idIn", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("isMeson",734,G__main92Dct_676_0_72, 103, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - idIn", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("isBaryon",839,G__main92Dct_676_0_73, 103, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - idIn", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("isOctetHadron",1335,G__main92Dct_676_0_74, 103, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - idIn", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("heaviestQuark",1373,G__main92Dct_676_0_75, 105, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - idIn", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("baryonNumberType",1686,G__main92Dct_676_0_76, 105, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - idIn", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("rescaleBR",883,G__main92Dct_676_0_77, 121, -1, -1, 0, 2, 1, 1, 0, 
"i - - 0 - idIn d - - 0 '1.' newSumBR", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setResonancePtr",1568,G__main92Dct_676_0_78, 121, -1, -1, 0, 2, 1, 1, 0, 
"i - - 0 - idIn U 'Pythia8::ResonanceWidths' - 0 - resonancePtrIn", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("resInit",734,G__main92Dct_676_0_79, 121, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - idIn", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("resWidth",842,G__main92Dct_676_0_80, 100, -1, -1, 0, 5, 1, 1, 0, 
"i - - 0 - idIn d - - 0 - mHat "
"i - - 0 '0' idInFlav g - - 0 'false' openOnly "
"g - - 0 'false' setBR", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("resWidthOpen",1244,G__main92Dct_676_0_81, 100, -1, -1, 0, 3, 1, 1, 0, 
"i - - 0 - idIn d - - 0 - mHat "
"i - - 0 '0' idInFlav", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("resWidthStore",1367,G__main92Dct_676_0_82, 100, -1, -1, 0, 3, 1, 1, 0, 
"i - - 0 - idIn d - - 0 - mHat "
"i - - 0 '0' idInFlav", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("resOpenFrac",1112,G__main92Dct_676_0_83, 100, -1, -1, 0, 3, 1, 1, 0, 
"i - - 0 - id1In i - - 0 '0' id2In "
"i - - 0 '0' id3In", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("resWidthRescaleFactor",2152,G__main92Dct_676_0_84, 100, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - idIn", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("resWidthChan",1220,G__main92Dct_676_0_85, 100, -1, -1, 0, 4, 1, 1, 0, 
"i - - 0 - idIn d - - 0 - mHat "
"i - - 0 '0' idAbs1 i - - 0 '0' idAbs2", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("particleDataEntryPtr",2070,G__main92Dct_676_0_86, 85, G__get_linked_tagnum(&G__main92DctLN_Pythia8cLcLParticleDataEntry), -1, 0, 1, 1, 1, 0, "i - - 0 - idIn", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("initCommon",1053,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("toLower",748,(G__InterfaceMethod) NULL, 117, G__get_linked_tagnum(&G__main92DctLN_string), -1, 0, 1, 1, 4, 0, "u 'string' - 11 - nameConv", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("boolString",1059,(G__InterfaceMethod) NULL, 103, -1, -1, 0, 1, 1, 4, 0, "u 'string' - 0 - tag", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("attributeValue",1489,(G__InterfaceMethod) NULL, 117, G__get_linked_tagnum(&G__main92DctLN_string), -1, 0, 2, 1, 4, 0, 
"u 'string' - 0 - line u 'string' - 0 - attribute", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("boolAttributeValue",1885,(G__InterfaceMethod) NULL, 103, -1, -1, 0, 2, 1, 4, 0, 
"u 'string' - 0 - line u 'string' - 0 - attribute", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("intAttributeValue",1788,(G__InterfaceMethod) NULL, 105, -1, -1, 0, 2, 1, 4, 0, 
"u 'string' - 0 - line u 'string' - 0 - attribute", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("doubleAttributeValue",2092,(G__InterfaceMethod) NULL, 100, -1, -1, 0, 2, 1, 4, 0, 
"u 'string' - 0 - line u 'string' - 0 - attribute", (char*)NULL, (void*) NULL, 0);
   // automatic copy constructor
   G__memfunc_setup("ParticleData", 1198, G__main92Dct_676_0_94, (int) ('i'), G__get_linked_tagnum(&G__main92DctLN_Pythia8cLcLParticleData), -1, 0, 1, 1, 1, 0, "u 'Pythia8::ParticleData' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~ParticleData", 1324, G__main92Dct_676_0_95, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__main92Dct_676_0_96, (int) ('u'), G__get_linked_tagnum(&G__main92DctLN_Pythia8cLcLParticleData), -1, 1, 1, 1, 1, 0, "u 'Pythia8::ParticleData' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncPythia8cLcLResonanceWidths(void) {
   /* Pythia8::ResonanceWidths */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__main92DctLN_Pythia8cLcLResonanceWidths));
   G__memfunc_setup("initBasic",918,G__main92Dct_677_0_1, 121, -1, -1, 0, 2, 1, 1, 0, 
"i - - 0 - idResIn g - - 0 'false' isGenericIn", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("init",436,G__main92Dct_677_0_2, 103, -1, -1, 0, 4, 1, 1, 0, 
"U 'Pythia8::Info' - 0 - infoPtrIn U 'Pythia8::Settings' - 0 - settingsPtrIn "
"U 'Pythia8::ParticleData' - 0 - particleDataPtrIn U 'Pythia8::Couplings' - 0 - couplingsPtrIn", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("id",205,G__main92Dct_677_0_3, 105, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("width",544,G__main92Dct_677_0_4, 100, -1, -1, 0, 7, 1, 1, 0, 
"i - - 0 - idSgn d - - 0 - mHatIn "
"i - - 0 '0' idInFlavIn g - - 0 'false' openOnly "
"g - - 0 'false' setBR i - - 0 '0' idOutFlav1 "
"i - - 0 '0' idOutFlav2", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("widthOpen",946,G__main92Dct_677_0_5, 100, -1, -1, 0, 3, 1, 1, 0, 
"i - - 0 - idSgn d - - 0 - mHatIn "
"i - - 0 '0' idIn", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("widthStore",1069,G__main92Dct_677_0_6, 100, -1, -1, 0, 3, 1, 1, 0, 
"i - - 0 - idSgn d - - 0 - mHatIn "
"i - - 0 '0' idIn", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("openFrac",814,G__main92Dct_677_0_7, 100, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - idSgn", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("widthRescaleFactor",1854,G__main92Dct_677_0_8, 100, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("widthChan",922,G__main92Dct_677_0_9, 100, -1, -1, 0, 3, 1, 1, 0, 
"d - - 0 - mHatIn i - - 0 - idOutFlav1 "
"i - - 0 - idOutFlav2", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ResonanceWidths",1553,(G__InterfaceMethod) NULL, 105, G__get_linked_tagnum(&G__main92DctLN_Pythia8cLcLResonanceWidths), -1, 0, 0, 1, 2, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("initConstants",1393,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 2, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("initBSM",662,(G__InterfaceMethod) NULL, 103, -1, -1, 0, 0, 1, 2, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("allowCalc",914,(G__InterfaceMethod) NULL, 103, -1, -1, 0, 0, 1, 2, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("calcPreFac",964,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 1, 1, 2, 0, "g - - 0 'false' -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("calcWidth",915,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 1, 1, 2, 0, "g - - 0 'false' -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("numInt1BW",837,(G__InterfaceMethod) NULL, 100, -1, -1, 0, 6, 1, 2, 0, 
"d - - 0 - mHatIn d - - 0 - m1 "
"d - - 0 - Gamma1 d - - 0 - mMin1 "
"d - - 0 - m2 i - - 0 '1' psMode", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("numInt2BW",838,(G__InterfaceMethod) NULL, 100, -1, -1, 0, 8, 1, 2, 0, 
"d - - 0 - mHatIn d - - 0 - m1 "
"d - - 0 - Gamma1 d - - 0 - mMin1 "
"d - - 0 - m2 d - - 0 - Gamma2 "
"d - - 0 - mMin2 i - - 0 '1' psMode", (char*)NULL, (void*) NULL, 0);
   // automatic copy constructor
   G__memfunc_setup("ResonanceWidths", 1553, G__main92Dct_677_0_18, (int) ('i'), G__get_linked_tagnum(&G__main92DctLN_Pythia8cLcLResonanceWidths), -1, 0, 1, 1, 1, 0, "u 'Pythia8::ResonanceWidths' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~ResonanceWidths", 1679, G__main92Dct_677_0_19, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__main92Dct_677_0_20, (int) ('u'), G__get_linked_tagnum(&G__main92DctLN_Pythia8cLcLResonanceWidths), -1, 1, 1, 1, 1, 0, "u 'Pythia8::ResonanceWidths' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncPythia8cLcLDecayChannel(void) {
   /* Pythia8::DecayChannel */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__main92DctLN_Pythia8cLcLDecayChannel));
   G__memfunc_setup("DecayChannel",1183,G__main92Dct_680_0_1, 105, G__get_linked_tagnum(&G__main92DctLN_Pythia8cLcLDecayChannel), -1, 0, 11, 1, 1, 0, 
"i - - 0 '0' onModeIn d - - 0 '0.' bRatioIn "
"i - - 0 '0' meModeIn i - - 0 '0' prod0 "
"i - - 0 '0' prod1 i - - 0 '0' prod2 "
"i - - 0 '0' prod3 i - - 0 '0' prod4 "
"i - - 0 '0' prod5 i - - 0 '0' prod6 "
"i - - 0 '0' prod7", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("onMode",610,G__main92Dct_680_0_2, 121, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - onModeIn", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("bRatio",609,G__main92Dct_680_0_3, 121, -1, -1, 0, 2, 1, 1, 0, 
"d - - 0 - bRatioIn g - - 0 'true' countAsChanged", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("rescaleBR",883,G__main92Dct_680_0_4, 121, -1, -1, 0, 1, 1, 1, 0, "d - - 0 - fac", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("meMode",599,G__main92Dct_680_0_5, 121, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - meModeIn", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("multiplicity",1321,G__main92Dct_680_0_6, 121, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - multIn", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("product",769,G__main92Dct_680_0_7, 121, -1, -1, 0, 2, 1, 1, 0, 
"i - - 0 - i i - - 0 - prodIn", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setHasChanged",1298,G__main92Dct_680_0_8, 121, -1, -1, 0, 1, 1, 1, 0, "g - - 0 - hasChangedIn", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("onMode",610,G__main92Dct_680_0_9, 105, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("bRatio",609,G__main92Dct_680_0_10, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("meMode",599,G__main92Dct_680_0_11, 105, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("multiplicity",1321,G__main92Dct_680_0_12, 105, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("product",769,G__main92Dct_680_0_13, 105, -1, -1, 0, 1, 1, 1, 8, "i - - 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("hasChanged",998,G__main92Dct_680_0_14, 103, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("contains",863,G__main92Dct_680_0_15, 103, -1, -1, 0, 1, 1, 1, 8, "i - - 0 - id1", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("contains",863,G__main92Dct_680_0_16, 103, -1, -1, 0, 2, 1, 1, 8, 
"i - - 0 - id1 i - - 0 - id2", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("contains",863,G__main92Dct_680_0_17, 103, -1, -1, 0, 3, 1, 1, 8, 
"i - - 0 - id1 i - - 0 - id2 "
"i - - 0 - id3", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("currentBR",919,G__main92Dct_680_0_18, 121, -1, -1, 0, 1, 1, 1, 0, "d - - 0 - currentBRIn", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("currentBR",919,G__main92Dct_680_0_19, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("onShellWidth",1237,G__main92Dct_680_0_20, 121, -1, -1, 0, 1, 1, 1, 0, "d - - 0 - onShellWidthIn", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("onShellWidth",1237,G__main92Dct_680_0_21, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("onShellWidthFactor",1844,G__main92Dct_680_0_22, 121, -1, -1, 0, 1, 1, 1, 0, "d - - 0 - factor", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("openSec",717,G__main92Dct_680_0_23, 121, -1, -1, 0, 2, 1, 1, 0, 
"i - - 0 - idSgn d - - 0 - openSecIn", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("openSec",717,G__main92Dct_680_0_24, 100, -1, -1, 0, 1, 1, 1, 8, "i - - 0 - idSgn", (char*)NULL, (void*) NULL, 0);
   // automatic copy constructor
   G__memfunc_setup("DecayChannel", 1183, G__main92Dct_680_0_25, (int) ('i'), G__get_linked_tagnum(&G__main92DctLN_Pythia8cLcLDecayChannel), -1, 0, 1, 1, 1, 0, "u 'Pythia8::DecayChannel' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~DecayChannel", 1309, G__main92Dct_680_0_26, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__main92Dct_680_0_27, (int) ('u'), G__get_linked_tagnum(&G__main92DctLN_Pythia8cLcLDecayChannel), -1, 1, 1, 1, 1, 0, "u 'Pythia8::DecayChannel' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncPythia8cLcLParticleDataEntry(void) {
   /* Pythia8::ParticleDataEntry */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__main92DctLN_Pythia8cLcLParticleDataEntry));
   G__memfunc_setup("ParticleDataEntry",1728,G__main92Dct_681_0_1, 105, G__get_linked_tagnum(&G__main92DctLN_Pythia8cLcLParticleDataEntry), -1, 0, 10, 1, 1, 0, 
"i - - 0 '0' idIn u 'string' - 0 '\" \"' nameIn "
"i - - 0 '0' spinTypeIn i - - 0 '0' chargeTypeIn "
"i - - 0 '0' colTypeIn d - - 0 '0.' m0In "
"d - - 0 '0.' mWidthIn d - - 0 '0.' mMinIn "
"d - - 0 '0.' mMaxIn d - - 0 '0.' tau0In", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ParticleDataEntry",1728,G__main92Dct_681_0_2, 105, G__get_linked_tagnum(&G__main92DctLN_Pythia8cLcLParticleDataEntry), -1, 0, 11, 1, 1, 0, 
"i - - 0 - idIn u 'string' - 0 - nameIn "
"u 'string' - 0 - antiNameIn i - - 0 '0' spinTypeIn "
"i - - 0 '0' chargeTypeIn i - - 0 '0' colTypeIn "
"d - - 0 '0.' m0In d - - 0 '0.' mWidthIn "
"d - - 0 '0.' mMinIn d - - 0 '0.' mMaxIn "
"d - - 0 '0.' tau0In", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setDefaults",1156,G__main92Dct_681_0_3, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("initPtr",746,G__main92Dct_681_0_4, 121, -1, -1, 0, 1, 1, 1, 0, "U 'Pythia8::ParticleData' - 0 - particleDataPtrIn", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setAll",613,G__main92Dct_681_0_5, 121, -1, -1, 0, 10, 1, 1, 0, 
"u 'string' - 0 - nameIn u 'string' - 0 - antiNameIn "
"i - - 0 '0' spinTypeIn i - - 0 '0' chargeTypeIn "
"i - - 0 '0' colTypeIn d - - 0 '0.' m0In "
"d - - 0 '0.' mWidthIn d - - 0 '0.' mMinIn "
"d - - 0 '0.' mMaxIn d - - 0 '0.' tau0In", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setName",717,G__main92Dct_681_0_6, 121, -1, -1, 0, 1, 1, 1, 0, "u 'string' - 0 - nameIn", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setAntiName",1113,G__main92Dct_681_0_7, 121, -1, -1, 0, 1, 1, 1, 0, "u 'string' - 0 - antiNameIn", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setNames",832,G__main92Dct_681_0_8, 121, -1, -1, 0, 2, 1, 1, 0, 
"u 'string' - 0 - nameIn u 'string' - 0 - antiNameIn", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setSpinType",1160,G__main92Dct_681_0_9, 121, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - spinTypeIn", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setChargeType",1336,G__main92Dct_681_0_10, 121, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - chargeTypeIn", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setColType",1036,G__main92Dct_681_0_11, 121, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - colTypeIn", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setM0",457,G__main92Dct_681_0_12, 121, -1, -1, 0, 1, 1, 1, 0, "d - - 0 - m0In", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setMWidth",921,G__main92Dct_681_0_13, 121, -1, -1, 0, 2, 1, 1, 0, 
"d - - 0 - mWidthIn g - - 0 'true' countAsChanged", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setMMin",701,G__main92Dct_681_0_14, 121, -1, -1, 0, 1, 1, 1, 0, "d - - 0 - mMinIn", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setMMax",703,G__main92Dct_681_0_15, 121, -1, -1, 0, 1, 1, 1, 0, "d - - 0 - mMaxIn", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setMMinNoChange",1472,G__main92Dct_681_0_16, 121, -1, -1, 0, 1, 1, 1, 0, "d - - 0 - mMinIn", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setMMaxNoChange",1474,G__main92Dct_681_0_17, 121, -1, -1, 0, 1, 1, 1, 0, "d - - 0 - mMaxIn", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setTau0",678,G__main92Dct_681_0_18, 121, -1, -1, 0, 1, 1, 1, 0, "d - - 0 - tau0In", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setIsResonance",1446,G__main92Dct_681_0_19, 121, -1, -1, 0, 1, 1, 1, 0, "g - - 0 - isResonanceIn", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setMayDecay",1113,G__main92Dct_681_0_20, 121, -1, -1, 0, 2, 1, 1, 0, 
"g - - 0 - mayDecayIn g - - 0 'true' countAsChanged", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setDoExternalDecay",1832,G__main92Dct_681_0_21, 121, -1, -1, 0, 1, 1, 1, 0, "g - - 0 - doExternalDecayIn", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setIsVisible",1238,G__main92Dct_681_0_22, 121, -1, -1, 0, 1, 1, 1, 0, "g - - 0 - isVisibleIn", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setDoForceWidth",1518,G__main92Dct_681_0_23, 121, -1, -1, 0, 1, 1, 1, 0, "g - - 0 - doForceWidthIn", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setHasChanged",1298,G__main92Dct_681_0_24, 121, -1, -1, 0, 1, 1, 1, 0, "g - - 0 - hasChangedIn", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("id",205,G__main92Dct_681_0_25, 105, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("hasAnti",712,G__main92Dct_681_0_26, 103, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("name",417,G__main92Dct_681_0_27, 117, G__get_linked_tagnum(&G__main92DctLN_string), -1, 0, 1, 1, 1, 8, "i - - 0 '1' idIn", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("spinType",860,G__main92Dct_681_0_28, 105, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("chargeType",1036,G__main92Dct_681_0_29, 105, -1, -1, 0, 1, 1, 1, 8, "i - - 0 '1' idIn", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("charge",618,G__main92Dct_681_0_30, 100, -1, -1, 0, 1, 1, 1, 8, "i - - 0 '1' idIn", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("colType",736,G__main92Dct_681_0_31, 105, -1, -1, 0, 1, 1, 1, 8, "i - - 0 '1' idIn", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("m0",157,G__main92Dct_681_0_32, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("mWidth",621,G__main92Dct_681_0_33, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("mMin",401,G__main92Dct_681_0_34, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("mMax",403,G__main92Dct_681_0_35, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("m0Min",449,G__main92Dct_681_0_36, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("m0Max",451,G__main92Dct_681_0_37, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("tau0",378,G__main92Dct_681_0_38, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("isResonance",1146,G__main92Dct_681_0_39, 103, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("mayDecay",813,G__main92Dct_681_0_40, 103, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("doExternalDecay",1532,G__main92Dct_681_0_41, 103, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("isVisible",938,G__main92Dct_681_0_42, 103, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("doForceWidth",1218,G__main92Dct_681_0_43, 103, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("hasChanged",998,G__main92Dct_681_0_44, 103, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("initBWmass",1025,G__main92Dct_681_0_45, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("constituentMass",1620,G__main92Dct_681_0_46, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("mSel",401,G__main92Dct_681_0_47, 100, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("mRun",418,G__main92Dct_681_0_48, 100, -1, -1, 0, 1, 1, 1, 0, "d - - 0 - mH", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("useBreitWigner",1455,G__main92Dct_681_0_49, 103, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("canDecay",792,G__main92Dct_681_0_50, 103, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("isLepton",846,G__main92Dct_681_0_51, 103, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("isQuark",736,G__main92Dct_681_0_52, 103, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("isGluon",737,G__main92Dct_681_0_53, 103, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("isDiquark",941,G__main92Dct_681_0_54, 103, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("isParton",848,G__main92Dct_681_0_55, 103, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("isHadron",824,G__main92Dct_681_0_56, 103, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("isMeson",734,G__main92Dct_681_0_57, 103, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("isBaryon",839,G__main92Dct_681_0_58, 103, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("isOctetHadron",1335,G__main92Dct_681_0_59, 103, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("heaviestQuark",1373,G__main92Dct_681_0_60, 105, -1, -1, 0, 1, 1, 1, 8, "i - - 0 '1' idIn", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("baryonNumberType",1686,G__main92Dct_681_0_61, 105, -1, -1, 0, 1, 1, 1, 8, "i - - 0 '1' idIn", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("clearChannels",1331,G__main92Dct_681_0_62, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("addChannel",994,G__main92Dct_681_0_63, 121, -1, -1, 0, 11, 1, 1, 0, 
"i - - 0 '0' onMode d - - 0 '0.' bRatio "
"i - - 0 '0' meMode i - - 0 '0' prod0 "
"i - - 0 '0' prod1 i - - 0 '0' prod2 "
"i - - 0 '0' prod3 i - - 0 '0' prod4 "
"i - - 0 '0' prod5 i - - 0 '0' prod6 "
"i - - 0 '0' prod7", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("sizeChannels",1255,G__main92Dct_681_0_64, 105, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("channel",729,G__main92Dct_681_0_65, 117, G__get_linked_tagnum(&G__main92DctLN_Pythia8cLcLDecayChannel), -1, 1, 1, 1, 1, 0, "i - - 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("channel",729,G__main92Dct_681_0_66, 117, G__get_linked_tagnum(&G__main92DctLN_Pythia8cLcLDecayChannel), -1, 1, 1, 1, 1, 9, "i - - 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("rescaleBR",883,G__main92Dct_681_0_67, 121, -1, -1, 0, 1, 1, 1, 0, "d - - 0 '1.' newSumBR", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("preparePick",1142,G__main92Dct_681_0_68, 103, -1, -1, 0, 3, 1, 1, 0, 
"i - - 0 - idSgn d - - 0 '0.' mHat "
"i - - 0 '0' idInFlav", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("pickChannel",1120,G__main92Dct_681_0_69, 117, G__get_linked_tagnum(&G__main92DctLN_Pythia8cLcLDecayChannel), -1, 1, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setResonancePtr",1568,G__main92Dct_681_0_70, 121, -1, -1, 0, 1, 1, 1, 0, "U 'Pythia8::ResonanceWidths' - 0 - resonancePtrIn", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getResonancePtr",1556,G__main92Dct_681_0_71, 85, G__get_linked_tagnum(&G__main92DctLN_Pythia8cLcLResonanceWidths), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("resInit",734,G__main92Dct_681_0_72, 121, -1, -1, 0, 4, 1, 1, 0, 
"U 'Pythia8::Info' - 0 - infoPtrIn U 'Pythia8::Settings' - 0 - settingsPtrIn "
"U 'Pythia8::ParticleData' - 0 - particleDataPtrIn U 'Pythia8::Couplings' - 0 - couplingsPtrIn", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("resWidth",842,G__main92Dct_681_0_73, 100, -1, -1, 0, 5, 1, 1, 0, 
"i - - 0 - idSgn d - - 0 - mHat "
"i - - 0 '0' idIn g - - 0 'false' openOnly "
"g - - 0 'false' setBR", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("resWidthOpen",1244,G__main92Dct_681_0_74, 100, -1, -1, 0, 3, 1, 1, 0, 
"i - - 0 - idSgn d - - 0 - mHat "
"i - - 0 '0' idIn", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("resWidthStore",1367,G__main92Dct_681_0_75, 100, -1, -1, 0, 3, 1, 1, 0, 
"i - - 0 - idSgn d - - 0 - mHat "
"i - - 0 '0' idIn", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("resOpenFrac",1112,G__main92Dct_681_0_76, 100, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - idSgn", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("resWidthRescaleFactor",2152,G__main92Dct_681_0_77, 100, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("resWidthChan",1220,G__main92Dct_681_0_78, 100, -1, -1, 0, 3, 1, 1, 0, 
"d - - 0 - mHat i - - 0 '0' idAbs1 "
"i - - 0 '0' idAbs2", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setConstituentMass",1920,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("toLower",748,(G__InterfaceMethod) NULL, 117, G__get_linked_tagnum(&G__main92DctLN_string), -1, 0, 1, 1, 4, 0, "u 'string' - 11 - nameConv", (char*)NULL, (void*) NULL, 0);
   // automatic copy constructor
   G__memfunc_setup("ParticleDataEntry", 1728, G__main92Dct_681_0_81, (int) ('i'), G__get_linked_tagnum(&G__main92DctLN_Pythia8cLcLParticleDataEntry), -1, 0, 1, 1, 1, 0, "u 'Pythia8::ParticleDataEntry' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~ParticleDataEntry", 1854, G__main92Dct_681_0_82, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__main92Dct_681_0_83, (int) ('u'), G__get_linked_tagnum(&G__main92DctLN_Pythia8cLcLParticleDataEntry), -1, 1, 1, 1, 1, 0, "u 'Pythia8::ParticleDataEntry' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncpairlEintcOPythia8cLcLParticleDataEntrygR(void) {
   /* pair<int,Pythia8::ParticleDataEntry> */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__main92DctLN_pairlEintcOPythia8cLcLParticleDataEntrygR));
   G__memfunc_setup("pair<int,Pythia8::ParticleDataEntry>",3448,G__main92Dct_693_0_1, 105, G__get_linked_tagnum(&G__main92DctLN_pairlEintcOPythia8cLcLParticleDataEntrygR), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("pair<int,Pythia8::ParticleDataEntry>",3448,G__main92Dct_693_0_2, 105, G__get_linked_tagnum(&G__main92DctLN_pairlEintcOPythia8cLcLParticleDataEntrygR), -1, 0, 2, 1, 1, 0, 
"i - - 11 - a u 'Pythia8::ParticleDataEntry' - 11 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator=",937,(G__InterfaceMethod) NULL, 117, G__get_linked_tagnum(&G__main92DctLN_pairlEintcOPythia8cLcLParticleDataEntrygR), -1, 1, 1, 1, 4, 0, "u 'pair<int,Pythia8::ParticleDataEntry>' - 11 - x", (char*)NULL, (void*) NULL, 0);
   // automatic copy constructor
   G__memfunc_setup("pair<int,Pythia8::ParticleDataEntry>", 3448, G__main92Dct_693_0_4, (int) ('i'), 
G__get_linked_tagnum(&G__main92DctLN_pairlEintcOPythia8cLcLParticleDataEntrygR), -1, 0, 1, 1, 1, 0, "u 'pair<int,Pythia8::ParticleDataEntry>' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~pair<int,Pythia8::ParticleDataEntry>", 3574, G__main92Dct_693_0_5, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncPythia8cLcLEvent(void) {
   /* Pythia8::Event */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__main92DctLN_Pythia8cLcLEvent));
   G__memfunc_setup("Event",514,G__main92Dct_697_0_1, 105, G__get_linked_tagnum(&G__main92DctLN_Pythia8cLcLEvent), -1, 0, 1, 1, 1, 0, "i - - 0 '100' capacity", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator=",937,G__main92Dct_697_0_2, 117, G__get_linked_tagnum(&G__main92DctLN_Pythia8cLcLEvent), -1, 1, 1, 1, 1, 0, "u 'Pythia8::Event' - 11 - oldEvent", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Event",514,G__main92Dct_697_0_3, 105, G__get_linked_tagnum(&G__main92DctLN_Pythia8cLcLEvent), -1, 0, 1, 1, 1, 0, "u 'Pythia8::Event' - 11 - oldEvent", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("init",436,G__main92Dct_697_0_4, 121, -1, -1, 0, 3, 1, 1, 0, 
"u 'string' - 0 '\"\"' headerIn U 'Pythia8::ParticleData' - 0 '0' particleDataPtrIn "
"i - - 0 '100' startColTagIn", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("clear",519,G__main92Dct_697_0_5, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("reset",547,G__main92Dct_697_0_6, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__main92Dct_697_0_7, 117, G__get_linked_tagnum(&G__main92DctLN_Pythia8cLcLParticle), -1, 1, 1, 1, 1, 0, "i - - 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__main92Dct_697_0_8, 117, G__get_linked_tagnum(&G__main92DctLN_Pythia8cLcLParticle), -1, 1, 1, 1, 1, 9, "i - - 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("front",553,G__main92Dct_697_0_9, 117, G__get_linked_tagnum(&G__main92DctLN_Pythia8cLcLParticle), -1, 1, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("at",213,G__main92Dct_697_0_10, 117, G__get_linked_tagnum(&G__main92DctLN_Pythia8cLcLParticle), -1, 1, 1, 1, 1, 0, "i - - 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("back",401,G__main92Dct_697_0_11, 117, G__get_linked_tagnum(&G__main92DctLN_Pythia8cLcLParticle), -1, 1, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("size",443,G__main92Dct_697_0_12, 105, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("append",632,G__main92Dct_697_0_13, 105, -1, -1, 0, 1, 1, 1, 0, "u 'Pythia8::Particle' - 0 - entryIn", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("append",632,G__main92Dct_697_0_14, 105, -1, -1, 0, 15, 1, 1, 0, 
"i - - 0 - id i - - 0 - status "
"i - - 0 - mother1 i - - 0 - mother2 "
"i - - 0 - daughter1 i - - 0 - daughter2 "
"i - - 0 - col i - - 0 - acol "
"d - - 0 - px d - - 0 - py "
"d - - 0 - pz d - - 0 - e "
"d - - 0 '0.' m d - - 0 '0.' scaleIn "
"d - - 0 '9.' polIn", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("append",632,G__main92Dct_697_0_15, 105, -1, -1, 0, 12, 1, 1, 0, 
"i - - 0 - id i - - 0 - status "
"i - - 0 - mother1 i - - 0 - mother2 "
"i - - 0 - daughter1 i - - 0 - daughter2 "
"i - - 0 - col i - - 0 - acol "
"u 'Pythia8::Vec4' - 0 - p d - - 0 '0.' m "
"d - - 0 '0.' scaleIn d - - 0 '9.' polIn", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("append",632,G__main92Dct_697_0_16, 105, -1, -1, 0, 11, 1, 1, 0, 
"i - - 0 - id i - - 0 - status "
"i - - 0 - col i - - 0 - acol "
"d - - 0 - px d - - 0 - py "
"d - - 0 - pz d - - 0 - e "
"d - - 0 '0.' m d - - 0 '0.' scaleIn "
"d - - 0 '9.' polIn", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("append",632,G__main92Dct_697_0_17, 105, -1, -1, 0, 8, 1, 1, 0, 
"i - - 0 - id i - - 0 - status "
"i - - 0 - col i - - 0 - acol "
"u 'Pythia8::Vec4' - 0 - p d - - 0 '0.' m "
"d - - 0 '0.' scaleIn d - - 0 '9.' polIn", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setEvtPtr",945,G__main92Dct_697_0_18, 121, -1, -1, 0, 1, 1, 1, 0, "i - - 0 '-1' iSet", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("copy",443,G__main92Dct_697_0_19, 105, -1, -1, 0, 2, 1, 1, 0, 
"i - - 0 - iCopy i - - 0 '0' newStatus", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("list",444,G__main92Dct_697_0_20, 121, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("list",444,G__main92Dct_697_0_21, 121, -1, -1, 0, 1, 1, 1, 8, "u 'basic_ostream<char,char_traits<char> >' 'ostream' 1 - os", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("list",444,G__main92Dct_697_0_22, 121, -1, -1, 0, 2, 1, 1, 8, 
"g - - 0 - showScaleAndVertex g - - 0 'false' showMothersAndDaughters", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("list",444,G__main92Dct_697_0_23, 121, -1, -1, 0, 3, 1, 1, 8, 
"g - - 0 - showScaleAndVertex g - - 0 - showMothersAndDaughters "
"u 'basic_ostream<char,char_traits<char> >' 'ostream' 1 - os", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("popBack",704,G__main92Dct_697_0_24, 121, -1, -1, 0, 1, 1, 1, 0, "i - - 0 '1' nRemove", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("remove",654,G__main92Dct_697_0_25, 121, -1, -1, 0, 2, 1, 1, 0, 
"i - - 0 - iFirst i - - 0 - iLast", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("restorePtrs",1197,G__main92Dct_697_0_26, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("saveSize",842,G__main92Dct_697_0_27, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("restoreSize",1183,G__main92Dct_697_0_28, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("savedSizeValue",1451,G__main92Dct_697_0_29, 105, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("initColTag",1006,G__main92Dct_697_0_30, 121, -1, -1, 0, 1, 1, 1, 0, "i - - 0 '0' colTag", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("lastColTag",1006,G__main92Dct_697_0_31, 105, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("nextColTag",1017,G__main92Dct_697_0_32, 105, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("scale",520,G__main92Dct_697_0_33, 121, -1, -1, 0, 1, 1, 1, 0, "d - - 0 - scaleIn", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("scale",520,G__main92Dct_697_0_34, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("scaleSecond",1124,G__main92Dct_697_0_35, 121, -1, -1, 0, 1, 1, 1, 0, "d - - 0 - scaleSecondIn", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("scaleSecond",1124,G__main92Dct_697_0_36, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("daughterList",1264,G__main92Dct_697_0_37, 117, G__get_linked_tagnum(&G__main92DctLN_vectorlEintcOallocatorlEintgRsPgR), G__defined_typename("vector<int>"), 0, 1, 1, 1, 8, "i - - 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("rot",341,G__main92Dct_697_0_38, 121, -1, -1, 0, 2, 1, 1, 0, 
"d - - 0 - theta d - - 0 - phi", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("bst",329,G__main92Dct_697_0_39, 121, -1, -1, 0, 3, 1, 1, 0, 
"d - - 0 - betaX d - - 0 - betaY "
"d - - 0 - betaZ", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("bst",329,G__main92Dct_697_0_40, 121, -1, -1, 0, 4, 1, 1, 0, 
"d - - 0 - betaX d - - 0 - betaY "
"d - - 0 - betaZ d - - 0 - gamma", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("bst",329,G__main92Dct_697_0_41, 121, -1, -1, 0, 1, 1, 1, 0, "u 'Pythia8::Vec4' - 11 - vec", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("rotbst",670,G__main92Dct_697_0_42, 121, -1, -1, 0, 1, 1, 1, 0, "u 'Pythia8::RotBstMatrix' - 11 - M", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("clearJunctions",1476,G__main92Dct_697_0_43, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("appendJunction",1474,G__main92Dct_697_0_44, 105, -1, -1, 0, 4, 1, 1, 0, 
"i - - 0 - kind i - - 0 - col0 "
"i - - 0 - col1 i - - 0 - col2", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("appendJunction",1474,G__main92Dct_697_0_45, 105, -1, -1, 0, 1, 1, 1, 0, "u 'Pythia8::Junction' - 0 - junctionIn", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("sizeJunction",1285,G__main92Dct_697_0_46, 105, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("remainsJunction",1593,G__main92Dct_697_0_47, 103, -1, -1, 0, 1, 1, 1, 8, "i - - 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("remainsJunction",1593,G__main92Dct_697_0_48, 121, -1, -1, 0, 2, 1, 1, 0, 
"i - - 0 - i g - - 0 - remainsIn", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("kindJunction",1264,G__main92Dct_697_0_49, 105, -1, -1, 0, 1, 1, 1, 8, "i - - 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("colJunction",1160,G__main92Dct_697_0_50, 105, -1, -1, 0, 2, 1, 1, 8, 
"i - - 0 - i i - - 0 - j", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("colJunction",1160,G__main92Dct_697_0_51, 121, -1, -1, 0, 3, 1, 1, 0, 
"i - - 0 - i i - - 0 - j "
"i - - 0 - colIn", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("endColJunction",1439,G__main92Dct_697_0_52, 105, -1, -1, 0, 2, 1, 1, 8, 
"i - - 0 - i i - - 0 - j", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("endColJunction",1439,G__main92Dct_697_0_53, 121, -1, -1, 0, 3, 1, 1, 0, 
"i - - 0 - i i - - 0 - j "
"i - - 0 - endColIn", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("statusJunction",1518,G__main92Dct_697_0_54, 105, -1, -1, 0, 2, 1, 1, 8, 
"i - - 0 - i i - - 0 - j", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("statusJunction",1518,G__main92Dct_697_0_55, 121, -1, -1, 0, 3, 1, 1, 0, 
"i - - 0 - i i - - 0 - j "
"i - - 0 - statusIn", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getJunction",1162,G__main92Dct_697_0_56, 117, G__get_linked_tagnum(&G__main92DctLN_Pythia8cLcLJunction), -1, 1, 1, 1, 1, 0, "i - - 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getJunction",1162,G__main92Dct_697_0_57, 117, G__get_linked_tagnum(&G__main92DctLN_Pythia8cLcLJunction), -1, 1, 1, 1, 1, 9, "i - - 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("eraseJunction",1370,G__main92Dct_697_0_58, 121, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("saveJunctionSize",1684,G__main92Dct_697_0_59, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("restoreJunctionSize",2025,G__main92Dct_697_0_60, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("listJunctions",1401,G__main92Dct_697_0_61, 121, -1, -1, 0, 1, 1, 1, 8, "u 'basic_ostream<char,char_traits<char> >' 'ostream' 1 'cout' os", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator+=",980,G__main92Dct_697_0_62, 117, G__get_linked_tagnum(&G__main92DctLN_Pythia8cLcLEvent), -1, 1, 1, 1, 1, 0, "u 'Pythia8::Event' - 11 - addEvent", (char*)NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~Event", 640, G__main92Dct_697_0_63, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncPythia8cLcLParticle(void) {
   /* Pythia8::Particle */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__main92DctLN_Pythia8cLcLParticle));
   G__memfunc_setup("Particle",820,G__main92Dct_698_0_1, 105, G__get_linked_tagnum(&G__main92DctLN_Pythia8cLcLParticle), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Particle",820,G__main92Dct_698_0_2, 105, G__get_linked_tagnum(&G__main92DctLN_Pythia8cLcLParticle), -1, 0, 15, 1, 1, 0, 
"i - - 0 - idIn i - - 0 '0' statusIn "
"i - - 0 '0' mother1In i - - 0 '0' mother2In "
"i - - 0 '0' daughter1In i - - 0 '0' daughter2In "
"i - - 0 '0' colIn i - - 0 '0' acolIn "
"d - - 0 '0.' pxIn d - - 0 '0.' pyIn "
"d - - 0 '0.' pzIn d - - 0 '0.' eIn "
"d - - 0 '0.' mIn d - - 0 '0.' scaleIn "
"d - - 0 '9.' polIn", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Particle",820,G__main92Dct_698_0_3, 105, G__get_linked_tagnum(&G__main92DctLN_Pythia8cLcLParticle), -1, 0, 12, 1, 1, 0, 
"i - - 0 - idIn i - - 0 - statusIn "
"i - - 0 - mother1In i - - 0 - mother2In "
"i - - 0 - daughter1In i - - 0 - daughter2In "
"i - - 0 - colIn i - - 0 - acolIn "
"u 'Pythia8::Vec4' - 0 - pIn d - - 0 '0.' mIn "
"d - - 0 '0.' scaleIn d - - 0 '9.' polIn", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Particle",820,G__main92Dct_698_0_4, 105, G__get_linked_tagnum(&G__main92DctLN_Pythia8cLcLParticle), -1, 0, 1, 1, 1, 0, "u 'Pythia8::Particle' - 11 - pt", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator=",937,G__main92Dct_698_0_5, 117, G__get_linked_tagnum(&G__main92DctLN_Pythia8cLcLParticle), -1, 1, 1, 1, 1, 0, "u 'Pythia8::Particle' - 11 - pt", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setEvtPtr",945,G__main92Dct_698_0_6, 121, -1, -1, 0, 1, 1, 1, 0, "U 'Pythia8::Event' - 0 - evtPtrIn", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setPDEPtr",859,G__main92Dct_698_0_7, 121, -1, -1, 0, 1, 1, 1, 0, "U 'Pythia8::ParticleDataEntry' - 0 '0' pdePtrIn", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("id",205,G__main92Dct_698_0_8, 121, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - idIn", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("status",676,G__main92Dct_698_0_9, 121, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - statusIn", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("statusPos",982,G__main92Dct_698_0_10, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("statusNeg",958,G__main92Dct_698_0_11, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("statusCode",1055,G__main92Dct_698_0_12, 121, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - statusIn", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("mother1",704,G__main92Dct_698_0_13, 121, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - mother1In", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("mother2",705,G__main92Dct_698_0_14, 121, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - mother2In", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("mothers",770,G__main92Dct_698_0_15, 121, -1, -1, 0, 2, 1, 1, 0, 
"i - - 0 '0' mother1In i - - 0 '0' mother2In", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("daughter1",901,G__main92Dct_698_0_16, 121, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - daughter1In", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("daughter2",902,G__main92Dct_698_0_17, 121, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - daughter2In", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("daughters",967,G__main92Dct_698_0_18, 121, -1, -1, 0, 2, 1, 1, 0, 
"i - - 0 '0' daughter1In i - - 0 '0' daughter2In", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("col",318,G__main92Dct_698_0_19, 121, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - colIn", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("acol",415,G__main92Dct_698_0_20, 121, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - acolIn", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("cols",433,G__main92Dct_698_0_21, 121, -1, -1, 0, 2, 1, 1, 0, 
"i - - 0 '0' colIn i - - 0 '0' acolIn", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("p",112,G__main92Dct_698_0_22, 121, -1, -1, 0, 1, 1, 1, 0, "u 'Pythia8::Vec4' - 0 - pIn", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("p",112,G__main92Dct_698_0_23, 121, -1, -1, 0, 4, 1, 1, 0, 
"d - - 0 - pxIn d - - 0 - pyIn "
"d - - 0 - pzIn d - - 0 - eIn", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("px",232,G__main92Dct_698_0_24, 121, -1, -1, 0, 1, 1, 1, 0, "d - - 0 - pxIn", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("py",233,G__main92Dct_698_0_25, 121, -1, -1, 0, 1, 1, 1, 0, "d - - 0 - pyIn", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("pz",234,G__main92Dct_698_0_26, 121, -1, -1, 0, 1, 1, 1, 0, "d - - 0 - pzIn", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("e",101,G__main92Dct_698_0_27, 121, -1, -1, 0, 1, 1, 1, 0, "d - - 0 - eIn", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("m",109,G__main92Dct_698_0_28, 121, -1, -1, 0, 1, 1, 1, 0, "d - - 0 - mIn", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("scale",520,G__main92Dct_698_0_29, 121, -1, -1, 0, 1, 1, 1, 0, "d - - 0 - scaleIn", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("pol",331,G__main92Dct_698_0_30, 121, -1, -1, 0, 1, 1, 1, 0, "d - - 0 - polIn", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("vProd",523,G__main92Dct_698_0_31, 121, -1, -1, 0, 1, 1, 1, 0, "u 'Pythia8::Vec4' - 0 - vProdIn", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("vProd",523,G__main92Dct_698_0_32, 121, -1, -1, 0, 4, 1, 1, 0, 
"d - - 0 - xProdIn d - - 0 - yProdIn "
"d - - 0 - zProdIn d - - 0 - tProdIn", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("xProd",525,G__main92Dct_698_0_33, 121, -1, -1, 0, 1, 1, 1, 0, "d - - 0 - xProdIn", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("yProd",526,G__main92Dct_698_0_34, 121, -1, -1, 0, 1, 1, 1, 0, "d - - 0 - yProdIn", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("zProd",527,G__main92Dct_698_0_35, 121, -1, -1, 0, 1, 1, 1, 0, "d - - 0 - zProdIn", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("tProd",521,G__main92Dct_698_0_36, 121, -1, -1, 0, 1, 1, 1, 0, "d - - 0 - tProdIn", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("tau",330,G__main92Dct_698_0_37, 121, -1, -1, 0, 1, 1, 1, 0, "d - - 0 - tauIn", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("id",205,G__main92Dct_698_0_38, 105, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("status",676,G__main92Dct_698_0_39, 105, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("mother1",704,G__main92Dct_698_0_40, 105, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("mother2",705,G__main92Dct_698_0_41, 105, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("daughter1",901,G__main92Dct_698_0_42, 105, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("daughter2",902,G__main92Dct_698_0_43, 105, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("col",318,G__main92Dct_698_0_44, 105, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("acol",415,G__main92Dct_698_0_45, 105, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("p",112,G__main92Dct_698_0_46, 117, G__get_linked_tagnum(&G__main92DctLN_Pythia8cLcLVec4), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("px",232,G__main92Dct_698_0_47, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("py",233,G__main92Dct_698_0_48, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("pz",234,G__main92Dct_698_0_49, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("e",101,G__main92Dct_698_0_50, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("m",109,G__main92Dct_698_0_51, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("scale",520,G__main92Dct_698_0_52, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("pol",331,G__main92Dct_698_0_53, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("hasVertex",954,G__main92Dct_698_0_54, 103, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("vProd",523,G__main92Dct_698_0_55, 117, G__get_linked_tagnum(&G__main92DctLN_Pythia8cLcLVec4), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("xProd",525,G__main92Dct_698_0_56, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("yProd",526,G__main92Dct_698_0_57, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("zProd",527,G__main92Dct_698_0_58, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("tProd",521,G__main92Dct_698_0_59, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("tau",330,G__main92Dct_698_0_60, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("idAbs",483,G__main92Dct_698_0_61, 105, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("statusAbs",954,G__main92Dct_698_0_62, 105, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("isFinal",710,G__main92Dct_698_0_63, 103, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("isRescatteredIncoming",2182,G__main92Dct_698_0_64, 103, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("m2",159,G__main92Dct_698_0_65, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("mCalc",480,G__main92Dct_698_0_66, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("m2Calc",530,G__main92Dct_698_0_67, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("eCalc",472,G__main92Dct_698_0_68, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("pT",196,G__main92Dct_698_0_69, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("pT2",246,G__main92Dct_698_0_70, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("mT",193,G__main92Dct_698_0_71, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("mT2",243,G__main92Dct_698_0_72, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("pAbs",390,G__main92Dct_698_0_73, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("pAbs2",440,G__main92Dct_698_0_74, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("eT",185,G__main92Dct_698_0_75, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("eT2",235,G__main92Dct_698_0_76, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("theta",534,G__main92Dct_698_0_77, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("phi",321,G__main92Dct_698_0_78, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("thetaXZ",712,G__main92Dct_698_0_79, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("pPos",418,G__main92Dct_698_0_80, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("pNeg",394,G__main92Dct_698_0_81, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("y",121,G__main92Dct_698_0_82, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("eta",314,G__main92Dct_698_0_83, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("vDec",386,G__main92Dct_698_0_84, 117, G__get_linked_tagnum(&G__main92DctLN_Pythia8cLcLVec4), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("xDec",388,G__main92Dct_698_0_85, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("yDec",389,G__main92Dct_698_0_86, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("zDec",390,G__main92Dct_698_0_87, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("tDec",384,G__main92Dct_698_0_88, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("index",536,G__main92Dct_698_0_89, 105, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("iTopCopy",823,G__main92Dct_698_0_90, 105, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("iBotCopy",809,G__main92Dct_698_0_91, 105, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("iTopCopyId",996,G__main92Dct_698_0_92, 105, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("iBotCopyId",982,G__main92Dct_698_0_93, 105, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("motherList",1067,G__main92Dct_698_0_94, 117, G__get_linked_tagnum(&G__main92DctLN_vectorlEintcOallocatorlEintgRsPgR), G__defined_typename("vector<int>"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("daughterList",1264,G__main92Dct_698_0_95, 117, G__get_linked_tagnum(&G__main92DctLN_vectorlEintcOallocatorlEintgRsPgR), G__defined_typename("vector<int>"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("sisterList",1078,G__main92Dct_698_0_96, 117, G__get_linked_tagnum(&G__main92DctLN_vectorlEintcOallocatorlEintgRsPgR), G__defined_typename("vector<int>"), 0, 1, 1, 1, 8, "g - - 0 'false' traceTopBot", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("isAncestor",1051,G__main92Dct_698_0_97, 103, -1, -1, 0, 1, 1, 1, 8, "i - - 0 - iAncestor", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("statusHepMC",1105,G__main92Dct_698_0_98, 105, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("undoDecay",924,G__main92Dct_698_0_99, 103, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("name",417,G__main92Dct_698_0_100, 117, G__get_linked_tagnum(&G__main92DctLN_string), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("nameWithStatus",1473,G__main92Dct_698_0_101, 117, G__get_linked_tagnum(&G__main92DctLN_string), -1, 0, 1, 1, 1, 8, "i - - 0 '20' maxLen", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("spinType",860,G__main92Dct_698_0_102, 105, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("chargeType",1036,G__main92Dct_698_0_103, 105, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("charge",618,G__main92Dct_698_0_104, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("isCharged",906,G__main92Dct_698_0_105, 103, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("isNeutral",951,G__main92Dct_698_0_106, 103, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("colType",736,G__main92Dct_698_0_107, 105, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("m0",157,G__main92Dct_698_0_108, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("mWidth",621,G__main92Dct_698_0_109, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("mMin",401,G__main92Dct_698_0_110, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("mMax",403,G__main92Dct_698_0_111, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("mSel",401,G__main92Dct_698_0_112, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("constituentMass",1620,G__main92Dct_698_0_113, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("tau0",378,G__main92Dct_698_0_114, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("mayDecay",813,G__main92Dct_698_0_115, 103, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("canDecay",792,G__main92Dct_698_0_116, 103, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("doExternalDecay",1532,G__main92Dct_698_0_117, 103, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("isResonance",1146,G__main92Dct_698_0_118, 103, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("isVisible",938,G__main92Dct_698_0_119, 103, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("isLepton",846,G__main92Dct_698_0_120, 103, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("isQuark",736,G__main92Dct_698_0_121, 103, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("isGluon",737,G__main92Dct_698_0_122, 103, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("isDiquark",941,G__main92Dct_698_0_123, 103, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("isParton",848,G__main92Dct_698_0_124, 103, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("isHadron",824,G__main92Dct_698_0_125, 103, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("particleDataEntry",1760,G__main92Dct_698_0_126, 117, G__get_linked_tagnum(&G__main92DctLN_Pythia8cLcLParticleDataEntry), -1, 1, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("rescale3",786,G__main92Dct_698_0_127, 121, -1, -1, 0, 1, 1, 1, 0, "d - - 0 - fac", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("rescale4",787,G__main92Dct_698_0_128, 121, -1, -1, 0, 1, 1, 1, 0, "d - - 0 - fac", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("rescale5",788,G__main92Dct_698_0_129, 121, -1, -1, 0, 1, 1, 1, 0, "d - - 0 - fac", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("rot",341,G__main92Dct_698_0_130, 121, -1, -1, 0, 2, 1, 1, 0, 
"d - - 0 - thetaIn d - - 0 - phiIn", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("bst",329,G__main92Dct_698_0_131, 121, -1, -1, 0, 3, 1, 1, 0, 
"d - - 0 - betaX d - - 0 - betaY "
"d - - 0 - betaZ", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("bst",329,G__main92Dct_698_0_132, 121, -1, -1, 0, 4, 1, 1, 0, 
"d - - 0 - betaX d - - 0 - betaY "
"d - - 0 - betaZ d - - 0 - gamma", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("bst",329,G__main92Dct_698_0_133, 121, -1, -1, 0, 1, 1, 1, 0, "u 'Pythia8::Vec4' - 11 - pBst", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("bst",329,G__main92Dct_698_0_134, 121, -1, -1, 0, 2, 1, 1, 0, 
"u 'Pythia8::Vec4' - 11 - pBst d - - 0 - mBst", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("bstback",730,G__main92Dct_698_0_135, 121, -1, -1, 0, 1, 1, 1, 0, "u 'Pythia8::Vec4' - 11 - pBst", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("bstback",730,G__main92Dct_698_0_136, 121, -1, -1, 0, 2, 1, 1, 0, 
"u 'Pythia8::Vec4' - 11 - pBst d - - 0 - mBst", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("rotbst",670,G__main92Dct_698_0_137, 121, -1, -1, 0, 1, 1, 1, 0, "u 'Pythia8::RotBstMatrix' - 11 - M", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("offsetHistory",1401,G__main92Dct_698_0_138, 121, -1, -1, 0, 4, 1, 1, 0, 
"i - - 0 - minMother i - - 0 - addMother "
"i - - 0 - minDaughter i - - 0 - addDaughter", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("offsetCol",933,G__main92Dct_698_0_139, 121, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - addCol", (char*)NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~Particle", 946, G__main92Dct_698_0_140, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncPythia8cLcLJunction(void) {
   /* Pythia8::Junction */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__main92DctLN_Pythia8cLcLJunction));
   G__memfunc_setup("Junction",842,G__main92Dct_699_0_1, 105, G__get_linked_tagnum(&G__main92DctLN_Pythia8cLcLJunction), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Junction",842,G__main92Dct_699_0_2, 105, G__get_linked_tagnum(&G__main92DctLN_Pythia8cLcLJunction), -1, 0, 4, 1, 1, 0, 
"i - - 0 - kindIn i - - 0 - col0In "
"i - - 0 - col1In i - - 0 - col2In", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Junction",842,G__main92Dct_699_0_3, 105, G__get_linked_tagnum(&G__main92DctLN_Pythia8cLcLJunction), -1, 0, 1, 1, 1, 0, "u 'Pythia8::Junction' - 11 - ju", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator=",937,G__main92Dct_699_0_4, 117, G__get_linked_tagnum(&G__main92DctLN_Pythia8cLcLJunction), -1, 1, 1, 1, 1, 0, "u 'Pythia8::Junction' - 11 - ju", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("remains",751,G__main92Dct_699_0_5, 121, -1, -1, 0, 1, 1, 1, 0, "g - - 0 - remainsIn", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("col",318,G__main92Dct_699_0_6, 121, -1, -1, 0, 2, 1, 1, 0, 
"i - - 0 - j i - - 0 - colIn", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("cols",433,G__main92Dct_699_0_7, 121, -1, -1, 0, 3, 1, 1, 0, 
"i - - 0 - j i - - 0 - colIn "
"i - - 0 - endColIn", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("endCol",597,G__main92Dct_699_0_8, 121, -1, -1, 0, 2, 1, 1, 0, 
"i - - 0 - j i - - 0 - endColIn", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("status",676,G__main92Dct_699_0_9, 121, -1, -1, 0, 2, 1, 1, 0, 
"i - - 0 - j i - - 0 - statusIn", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("remains",751,G__main92Dct_699_0_10, 103, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("kind",422,G__main92Dct_699_0_11, 105, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("col",318,G__main92Dct_699_0_12, 105, -1, -1, 0, 1, 1, 1, 8, "i - - 0 - j", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("endCol",597,G__main92Dct_699_0_13, 105, -1, -1, 0, 1, 1, 1, 8, "i - - 0 - j", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("status",676,G__main92Dct_699_0_14, 105, -1, -1, 0, 1, 1, 1, 8, "i - - 0 - j", (char*)NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~Junction", 968, G__main92Dct_699_0_15, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncPythia8cLcLResonanceGeneric(void) {
   /* Pythia8::ResonanceGeneric */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__main92DctLN_Pythia8cLcLResonanceGeneric));
   G__memfunc_setup("ResonanceGeneric",1627,G__main92Dct_874_0_1, 105, G__get_linked_tagnum(&G__main92DctLN_Pythia8cLcLResonanceGeneric), -1, 0, 1, 1, 1, 0, "i - - 0 - idResIn", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("allowCalc",914,(G__InterfaceMethod) NULL,103, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   // automatic copy constructor
   G__memfunc_setup("ResonanceGeneric", 1627, G__main92Dct_874_0_3, (int) ('i'), G__get_linked_tagnum(&G__main92DctLN_Pythia8cLcLResonanceGeneric), -1, 0, 1, 1, 1, 0, "u 'Pythia8::ResonanceGeneric' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~ResonanceGeneric", 1753, G__main92Dct_874_0_4, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__main92Dct_874_0_5, (int) ('u'), G__get_linked_tagnum(&G__main92DctLN_Pythia8cLcLResonanceGeneric), -1, 1, 1, 1, 1, 0, "u 'Pythia8::ResonanceGeneric' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncPythia8cLcLResonanceGmZ(void) {
   /* Pythia8::ResonanceGmZ */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__main92DctLN_Pythia8cLcLResonanceGmZ));
   G__memfunc_setup("ResonanceGmZ",1196,G__main92Dct_875_0_1, 105, G__get_linked_tagnum(&G__main92DctLN_Pythia8cLcLResonanceGmZ), -1, 0, 1, 1, 1, 0, "i - - 0 - idResIn", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("initConstants",1393,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("calcPreFac",964,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 1, 1, 4, 0, "g - - 0 'false' -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("calcWidth",915,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 1, 1, 4, 0, "g - - 0 'false' calledFromInit", (char*)NULL, (void*) NULL, 1);
   // automatic copy constructor
   G__memfunc_setup("ResonanceGmZ", 1196, G__main92Dct_875_0_5, (int) ('i'), G__get_linked_tagnum(&G__main92DctLN_Pythia8cLcLResonanceGmZ), -1, 0, 1, 1, 1, 0, "u 'Pythia8::ResonanceGmZ' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~ResonanceGmZ", 1322, G__main92Dct_875_0_6, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__main92Dct_875_0_7, (int) ('u'), G__get_linked_tagnum(&G__main92DctLN_Pythia8cLcLResonanceGmZ), -1, 1, 1, 1, 1, 0, "u 'Pythia8::ResonanceGmZ' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncPythia8cLcLResonanceW(void) {
   /* Pythia8::ResonanceW */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__main92DctLN_Pythia8cLcLResonanceW));
   G__memfunc_setup("ResonanceW",1013,G__main92Dct_876_0_1, 105, G__get_linked_tagnum(&G__main92DctLN_Pythia8cLcLResonanceW), -1, 0, 1, 1, 1, 0, "i - - 0 - idResIn", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("initConstants",1393,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("calcPreFac",964,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 1, 1, 4, 0, "g - - 0 'false' -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("calcWidth",915,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 1, 1, 4, 0, "g - - 0 'false' -", (char*)NULL, (void*) NULL, 1);
   // automatic copy constructor
   G__memfunc_setup("ResonanceW", 1013, G__main92Dct_876_0_5, (int) ('i'), G__get_linked_tagnum(&G__main92DctLN_Pythia8cLcLResonanceW), -1, 0, 1, 1, 1, 0, "u 'Pythia8::ResonanceW' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~ResonanceW", 1139, G__main92Dct_876_0_6, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__main92Dct_876_0_7, (int) ('u'), G__get_linked_tagnum(&G__main92DctLN_Pythia8cLcLResonanceW), -1, 1, 1, 1, 1, 0, "u 'Pythia8::ResonanceW' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncPythia8cLcLResonanceTop(void) {
   /* Pythia8::ResonanceTop */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__main92DctLN_Pythia8cLcLResonanceTop));
   G__memfunc_setup("ResonanceTop",1233,G__main92Dct_877_0_1, 105, G__get_linked_tagnum(&G__main92DctLN_Pythia8cLcLResonanceTop), -1, 0, 1, 1, 1, 0, "i - - 0 - idResIn", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("initConstants",1393,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("calcPreFac",964,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 1, 1, 4, 0, "g - - 0 'false' -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("calcWidth",915,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 1, 1, 4, 0, "g - - 0 'false' -", (char*)NULL, (void*) NULL, 1);
   // automatic copy constructor
   G__memfunc_setup("ResonanceTop", 1233, G__main92Dct_877_0_5, (int) ('i'), G__get_linked_tagnum(&G__main92DctLN_Pythia8cLcLResonanceTop), -1, 0, 1, 1, 1, 0, "u 'Pythia8::ResonanceTop' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~ResonanceTop", 1359, G__main92Dct_877_0_6, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__main92Dct_877_0_7, (int) ('u'), G__get_linked_tagnum(&G__main92DctLN_Pythia8cLcLResonanceTop), -1, 1, 1, 1, 1, 0, "u 'Pythia8::ResonanceTop' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncPythia8cLcLResonanceFour(void) {
   /* Pythia8::ResonanceFour */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__main92DctLN_Pythia8cLcLResonanceFour));
   G__memfunc_setup("ResonanceFour",1338,G__main92Dct_878_0_1, 105, G__get_linked_tagnum(&G__main92DctLN_Pythia8cLcLResonanceFour), -1, 0, 1, 1, 1, 0, "i - - 0 - idResIn", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("initConstants",1393,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("calcPreFac",964,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 1, 1, 4, 0, "g - - 0 'false' -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("calcWidth",915,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 1, 1, 4, 0, "g - - 0 'false' -", (char*)NULL, (void*) NULL, 1);
   // automatic copy constructor
   G__memfunc_setup("ResonanceFour", 1338, G__main92Dct_878_0_5, (int) ('i'), G__get_linked_tagnum(&G__main92DctLN_Pythia8cLcLResonanceFour), -1, 0, 1, 1, 1, 0, "u 'Pythia8::ResonanceFour' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~ResonanceFour", 1464, G__main92Dct_878_0_6, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__main92Dct_878_0_7, (int) ('u'), G__get_linked_tagnum(&G__main92DctLN_Pythia8cLcLResonanceFour), -1, 1, 1, 1, 1, 0, "u 'Pythia8::ResonanceFour' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncPythia8cLcLResonanceH(void) {
   /* Pythia8::ResonanceH */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__main92DctLN_Pythia8cLcLResonanceH));
   G__memfunc_setup("ResonanceH",998,G__main92Dct_879_0_1, 105, G__get_linked_tagnum(&G__main92DctLN_Pythia8cLcLResonanceH), -1, 0, 2, 1, 1, 0, 
"i - - 0 - higgsTypeIn i - - 0 - idResIn", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("initConstants",1393,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("calcPreFac",964,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 1, 1, 4, 0, "g - - 0 'false' -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("calcWidth",915,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 1, 1, 4, 0, "g - - 0 'false' -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("eta2gg",570,(G__InterfaceMethod) NULL, 100, -1, -1, 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("eta2gaga",764,(G__InterfaceMethod) NULL, 100, -1, -1, 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("eta2gaZ",654,(G__InterfaceMethod) NULL, 100, -1, -1, 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 0);
   // automatic copy constructor
   G__memfunc_setup("ResonanceH", 998, G__main92Dct_879_0_8, (int) ('i'), G__get_linked_tagnum(&G__main92DctLN_Pythia8cLcLResonanceH), -1, 0, 1, 1, 1, 0, "u 'Pythia8::ResonanceH' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~ResonanceH", 1124, G__main92Dct_879_0_9, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__main92Dct_879_0_10, (int) ('u'), G__get_linked_tagnum(&G__main92DctLN_Pythia8cLcLResonanceH), -1, 1, 1, 1, 1, 0, "u 'Pythia8::ResonanceH' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncPythia8cLcLResonanceHchg(void) {
   /* Pythia8::ResonanceHchg */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__main92DctLN_Pythia8cLcLResonanceHchg));
   G__memfunc_setup("ResonanceHchg",1304,G__main92Dct_880_0_1, 105, G__get_linked_tagnum(&G__main92DctLN_Pythia8cLcLResonanceHchg), -1, 0, 1, 1, 1, 0, "i - - 0 - idResIn", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("initConstants",1393,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("calcPreFac",964,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 1, 1, 4, 0, "g - - 0 'false' -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("calcWidth",915,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 1, 1, 4, 0, "g - - 0 'false' -", (char*)NULL, (void*) NULL, 1);
   // automatic copy constructor
   G__memfunc_setup("ResonanceHchg", 1304, G__main92Dct_880_0_5, (int) ('i'), G__get_linked_tagnum(&G__main92DctLN_Pythia8cLcLResonanceHchg), -1, 0, 1, 1, 1, 0, "u 'Pythia8::ResonanceHchg' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~ResonanceHchg", 1430, G__main92Dct_880_0_6, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__main92Dct_880_0_7, (int) ('u'), G__get_linked_tagnum(&G__main92DctLN_Pythia8cLcLResonanceHchg), -1, 1, 1, 1, 1, 0, "u 'Pythia8::ResonanceHchg' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncPythia8cLcLResonanceZprime(void) {
   /* Pythia8::ResonanceZprime */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__main92DctLN_Pythia8cLcLResonanceZprime));
   G__memfunc_setup("ResonanceZprime",1557,G__main92Dct_881_0_1, 105, G__get_linked_tagnum(&G__main92DctLN_Pythia8cLcLResonanceZprime), -1, 0, 1, 1, 1, 0, "i - - 0 - idResIn", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("initConstants",1393,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("calcPreFac",964,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 1, 1, 4, 0, "g - - 0 'false' -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("calcWidth",915,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 1, 1, 4, 0, "g - - 0 'false' calledFromInit", (char*)NULL, (void*) NULL, 1);
   // automatic copy constructor
   G__memfunc_setup("ResonanceZprime", 1557, G__main92Dct_881_0_5, (int) ('i'), G__get_linked_tagnum(&G__main92DctLN_Pythia8cLcLResonanceZprime), -1, 0, 1, 1, 1, 0, "u 'Pythia8::ResonanceZprime' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~ResonanceZprime", 1683, G__main92Dct_881_0_6, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__main92Dct_881_0_7, (int) ('u'), G__get_linked_tagnum(&G__main92DctLN_Pythia8cLcLResonanceZprime), -1, 1, 1, 1, 1, 0, "u 'Pythia8::ResonanceZprime' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncPythia8cLcLResonanceWprime(void) {
   /* Pythia8::ResonanceWprime */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__main92DctLN_Pythia8cLcLResonanceWprime));
   G__memfunc_setup("ResonanceWprime",1554,G__main92Dct_882_0_1, 105, G__get_linked_tagnum(&G__main92DctLN_Pythia8cLcLResonanceWprime), -1, 0, 1, 1, 1, 0, "i - - 0 - idResIn", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("initConstants",1393,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("calcPreFac",964,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 1, 1, 4, 0, "g - - 0 'false' -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("calcWidth",915,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 1, 1, 4, 0, "g - - 0 'false' -", (char*)NULL, (void*) NULL, 1);
   // automatic copy constructor
   G__memfunc_setup("ResonanceWprime", 1554, G__main92Dct_882_0_5, (int) ('i'), G__get_linked_tagnum(&G__main92DctLN_Pythia8cLcLResonanceWprime), -1, 0, 1, 1, 1, 0, "u 'Pythia8::ResonanceWprime' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~ResonanceWprime", 1680, G__main92Dct_882_0_6, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__main92Dct_882_0_7, (int) ('u'), G__get_linked_tagnum(&G__main92DctLN_Pythia8cLcLResonanceWprime), -1, 1, 1, 1, 1, 0, "u 'Pythia8::ResonanceWprime' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncPythia8cLcLResonanceRhorizontal(void) {
   /* Pythia8::ResonanceRhorizontal */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__main92DctLN_Pythia8cLcLResonanceRhorizontal));
   G__memfunc_setup("ResonanceRhorizontal",2106,G__main92Dct_883_0_1, 105, G__get_linked_tagnum(&G__main92DctLN_Pythia8cLcLResonanceRhorizontal), -1, 0, 1, 1, 1, 0, "i - - 0 - idResIn", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("initConstants",1393,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("calcPreFac",964,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 1, 1, 4, 0, "g - - 0 'false' -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("calcWidth",915,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 1, 1, 4, 0, "g - - 0 'false' -", (char*)NULL, (void*) NULL, 1);
   // automatic copy constructor
   G__memfunc_setup("ResonanceRhorizontal", 2106, G__main92Dct_883_0_5, (int) ('i'), G__get_linked_tagnum(&G__main92DctLN_Pythia8cLcLResonanceRhorizontal), -1, 0, 1, 1, 1, 0, "u 'Pythia8::ResonanceRhorizontal' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~ResonanceRhorizontal", 2232, G__main92Dct_883_0_6, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__main92Dct_883_0_7, (int) ('u'), G__get_linked_tagnum(&G__main92DctLN_Pythia8cLcLResonanceRhorizontal), -1, 1, 1, 1, 1, 0, "u 'Pythia8::ResonanceRhorizontal' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncPythia8cLcLResonanceExcited(void) {
   /* Pythia8::ResonanceExcited */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__main92DctLN_Pythia8cLcLResonanceExcited));
   G__memfunc_setup("ResonanceExcited",1636,G__main92Dct_884_0_1, 105, G__get_linked_tagnum(&G__main92DctLN_Pythia8cLcLResonanceExcited), -1, 0, 1, 1, 1, 0, "i - - 0 - idResIn", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("initConstants",1393,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("calcPreFac",964,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 1, 1, 4, 0, "g - - 0 'false' -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("calcWidth",915,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 1, 1, 4, 0, "g - - 0 'false' -", (char*)NULL, (void*) NULL, 1);
   // automatic copy constructor
   G__memfunc_setup("ResonanceExcited", 1636, G__main92Dct_884_0_5, (int) ('i'), G__get_linked_tagnum(&G__main92DctLN_Pythia8cLcLResonanceExcited), -1, 0, 1, 1, 1, 0, "u 'Pythia8::ResonanceExcited' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~ResonanceExcited", 1762, G__main92Dct_884_0_6, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__main92Dct_884_0_7, (int) ('u'), G__get_linked_tagnum(&G__main92DctLN_Pythia8cLcLResonanceExcited), -1, 1, 1, 1, 1, 0, "u 'Pythia8::ResonanceExcited' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncPythia8cLcLResonanceGraviton(void) {
   /* Pythia8::ResonanceGraviton */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__main92DctLN_Pythia8cLcLResonanceGraviton));
   G__memfunc_setup("ResonanceGraviton",1768,G__main92Dct_885_0_1, 105, G__get_linked_tagnum(&G__main92DctLN_Pythia8cLcLResonanceGraviton), -1, 0, 1, 1, 1, 0, "i - - 0 - idResIn", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("initConstants",1393,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("calcPreFac",964,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 1, 1, 4, 0, "g - - 0 'false' -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("calcWidth",915,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 1, 1, 4, 0, "g - - 0 'false' -", (char*)NULL, (void*) NULL, 1);
   // automatic copy constructor
   G__memfunc_setup("ResonanceGraviton", 1768, G__main92Dct_885_0_5, (int) ('i'), G__get_linked_tagnum(&G__main92DctLN_Pythia8cLcLResonanceGraviton), -1, 0, 1, 1, 1, 0, "u 'Pythia8::ResonanceGraviton' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~ResonanceGraviton", 1894, G__main92Dct_885_0_6, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__main92Dct_885_0_7, (int) ('u'), G__get_linked_tagnum(&G__main92DctLN_Pythia8cLcLResonanceGraviton), -1, 1, 1, 1, 1, 0, "u 'Pythia8::ResonanceGraviton' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncPythia8cLcLResonanceLeptoquark(void) {
   /* Pythia8::ResonanceLeptoquark */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__main92DctLN_Pythia8cLcLResonanceLeptoquark));
   G__memfunc_setup("ResonanceLeptoquark",1990,G__main92Dct_887_0_1, 105, G__get_linked_tagnum(&G__main92DctLN_Pythia8cLcLResonanceLeptoquark), -1, 0, 1, 1, 1, 0, "i - - 0 - idResIn", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("initConstants",1393,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("calcPreFac",964,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 1, 1, 4, 0, "g - - 0 'false' -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("calcWidth",915,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 1, 1, 4, 0, "g - - 0 'false' -", (char*)NULL, (void*) NULL, 1);
   // automatic copy constructor
   G__memfunc_setup("ResonanceLeptoquark", 1990, G__main92Dct_887_0_5, (int) ('i'), G__get_linked_tagnum(&G__main92DctLN_Pythia8cLcLResonanceLeptoquark), -1, 0, 1, 1, 1, 0, "u 'Pythia8::ResonanceLeptoquark' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~ResonanceLeptoquark", 2116, G__main92Dct_887_0_6, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__main92Dct_887_0_7, (int) ('u'), G__get_linked_tagnum(&G__main92DctLN_Pythia8cLcLResonanceLeptoquark), -1, 1, 1, 1, 1, 0, "u 'Pythia8::ResonanceLeptoquark' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncPythia8cLcLResonanceNuRight(void) {
   /* Pythia8::ResonanceNuRight */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__main92DctLN_Pythia8cLcLResonanceNuRight));
   G__memfunc_setup("ResonanceNuRight",1631,G__main92Dct_888_0_1, 105, G__get_linked_tagnum(&G__main92DctLN_Pythia8cLcLResonanceNuRight), -1, 0, 1, 1, 1, 0, "i - - 0 - idResIn", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("initConstants",1393,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("calcPreFac",964,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 1, 1, 4, 0, "g - - 0 'false' -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("calcWidth",915,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 1, 1, 4, 0, "g - - 0 'false' -", (char*)NULL, (void*) NULL, 1);
   // automatic copy constructor
   G__memfunc_setup("ResonanceNuRight", 1631, G__main92Dct_888_0_5, (int) ('i'), G__get_linked_tagnum(&G__main92DctLN_Pythia8cLcLResonanceNuRight), -1, 0, 1, 1, 1, 0, "u 'Pythia8::ResonanceNuRight' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~ResonanceNuRight", 1757, G__main92Dct_888_0_6, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__main92Dct_888_0_7, (int) ('u'), G__get_linked_tagnum(&G__main92DctLN_Pythia8cLcLResonanceNuRight), -1, 1, 1, 1, 1, 0, "u 'Pythia8::ResonanceNuRight' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncPythia8cLcLResonanceZRight(void) {
   /* Pythia8::ResonanceZRight */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__main92DctLN_Pythia8cLcLResonanceZRight));
   G__memfunc_setup("ResonanceZRight",1526,G__main92Dct_889_0_1, 105, G__get_linked_tagnum(&G__main92DctLN_Pythia8cLcLResonanceZRight), -1, 0, 1, 1, 1, 0, "i - - 0 - idResIn", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("initConstants",1393,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("calcPreFac",964,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 1, 1, 4, 0, "g - - 0 'false' -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("calcWidth",915,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 1, 1, 4, 0, "g - - 0 'false' -", (char*)NULL, (void*) NULL, 1);
   // automatic copy constructor
   G__memfunc_setup("ResonanceZRight", 1526, G__main92Dct_889_0_5, (int) ('i'), G__get_linked_tagnum(&G__main92DctLN_Pythia8cLcLResonanceZRight), -1, 0, 1, 1, 1, 0, "u 'Pythia8::ResonanceZRight' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~ResonanceZRight", 1652, G__main92Dct_889_0_6, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__main92Dct_889_0_7, (int) ('u'), G__get_linked_tagnum(&G__main92DctLN_Pythia8cLcLResonanceZRight), -1, 1, 1, 1, 1, 0, "u 'Pythia8::ResonanceZRight' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncPythia8cLcLResonanceWRight(void) {
   /* Pythia8::ResonanceWRight */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__main92DctLN_Pythia8cLcLResonanceWRight));
   G__memfunc_setup("ResonanceWRight",1523,G__main92Dct_890_0_1, 105, G__get_linked_tagnum(&G__main92DctLN_Pythia8cLcLResonanceWRight), -1, 0, 1, 1, 1, 0, "i - - 0 - idResIn", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("initConstants",1393,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("calcPreFac",964,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 1, 1, 4, 0, "g - - 0 'false' -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("calcWidth",915,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 1, 1, 4, 0, "g - - 0 'false' -", (char*)NULL, (void*) NULL, 1);
   // automatic copy constructor
   G__memfunc_setup("ResonanceWRight", 1523, G__main92Dct_890_0_5, (int) ('i'), G__get_linked_tagnum(&G__main92DctLN_Pythia8cLcLResonanceWRight), -1, 0, 1, 1, 1, 0, "u 'Pythia8::ResonanceWRight' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~ResonanceWRight", 1649, G__main92Dct_890_0_6, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__main92Dct_890_0_7, (int) ('u'), G__get_linked_tagnum(&G__main92DctLN_Pythia8cLcLResonanceWRight), -1, 1, 1, 1, 1, 0, "u 'Pythia8::ResonanceWRight' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncPythia8cLcLResonanceHchgchgLeft(void) {
   /* Pythia8::ResonanceHchgchgLeft */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__main92DctLN_Pythia8cLcLResonanceHchgchgLeft));
   G__memfunc_setup("ResonanceHchgchgLeft",2005,G__main92Dct_891_0_1, 105, G__get_linked_tagnum(&G__main92DctLN_Pythia8cLcLResonanceHchgchgLeft), -1, 0, 1, 1, 1, 0, "i - - 0 - idResIn", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("initConstants",1393,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("calcPreFac",964,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 1, 1, 4, 0, "g - - 0 'false' -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("calcWidth",915,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 1, 1, 4, 0, "g - - 0 'false' -", (char*)NULL, (void*) NULL, 1);
   // automatic copy constructor
   G__memfunc_setup("ResonanceHchgchgLeft", 2005, G__main92Dct_891_0_5, (int) ('i'), G__get_linked_tagnum(&G__main92DctLN_Pythia8cLcLResonanceHchgchgLeft), -1, 0, 1, 1, 1, 0, "u 'Pythia8::ResonanceHchgchgLeft' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~ResonanceHchgchgLeft", 2131, G__main92Dct_891_0_6, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__main92Dct_891_0_7, (int) ('u'), G__get_linked_tagnum(&G__main92DctLN_Pythia8cLcLResonanceHchgchgLeft), -1, 1, 1, 1, 1, 0, "u 'Pythia8::ResonanceHchgchgLeft' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncPythia8cLcLResonanceHchgchgRight(void) {
   /* Pythia8::ResonanceHchgchgRight */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__main92DctLN_Pythia8cLcLResonanceHchgchgRight));
   G__memfunc_setup("ResonanceHchgchgRight",2120,G__main92Dct_892_0_1, 105, G__get_linked_tagnum(&G__main92DctLN_Pythia8cLcLResonanceHchgchgRight), -1, 0, 1, 1, 1, 0, "i - - 0 - idResIn", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("initConstants",1393,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("calcPreFac",964,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 1, 1, 4, 0, "g - - 0 'false' -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("calcWidth",915,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 1, 1, 4, 0, "g - - 0 'false' -", (char*)NULL, (void*) NULL, 1);
   // automatic copy constructor
   G__memfunc_setup("ResonanceHchgchgRight", 2120, G__main92Dct_892_0_5, (int) ('i'), 
G__get_linked_tagnum(&G__main92DctLN_Pythia8cLcLResonanceHchgchgRight), -1, 0, 1, 1, 1, 0, "u 'Pythia8::ResonanceHchgchgRight' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~ResonanceHchgchgRight", 2246, G__main92Dct_892_0_6, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__main92Dct_892_0_7, (int) ('u'), G__get_linked_tagnum(&G__main92DctLN_Pythia8cLcLResonanceHchgchgRight), -1, 1, 1, 1, 1, 0, "u 'Pythia8::ResonanceHchgchgRight' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncPythia8cLcLInBeam(void) {
   /* Pythia8::InBeam */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__main92DctLN_Pythia8cLcLInBeam));
   G__memfunc_setup("InBeam",556,G__main92Dct_930_0_1, 105, G__get_linked_tagnum(&G__main92DctLN_Pythia8cLcLInBeam), -1, 0, 1, 1, 1, 0, "i - - 0 '0' idIn", (char*)NULL, (void*) NULL, 0);
   // automatic copy constructor
   G__memfunc_setup("InBeam", 556, G__main92Dct_930_0_2, (int) ('i'), G__get_linked_tagnum(&G__main92DctLN_Pythia8cLcLInBeam), -1, 0, 1, 1, 1, 0, "u 'Pythia8::InBeam' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~InBeam", 682, G__main92Dct_930_0_3, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__main92Dct_930_0_4, (int) ('u'), G__get_linked_tagnum(&G__main92DctLN_Pythia8cLcLInBeam), -1, 1, 1, 1, 1, 0, "u 'Pythia8::InBeam' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncPythia8cLcLInPair(void) {
   /* Pythia8::InPair */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__main92DctLN_Pythia8cLcLInPair));
   G__memfunc_setup("InPair",579,G__main92Dct_931_0_1, 105, G__get_linked_tagnum(&G__main92DctLN_Pythia8cLcLInPair), -1, 0, 2, 1, 1, 0, 
"i - - 0 '0' idAIn i - - 0 '0' idBIn", (char*)NULL, (void*) NULL, 0);
   // automatic copy constructor
   G__memfunc_setup("InPair", 579, G__main92Dct_931_0_2, (int) ('i'), G__get_linked_tagnum(&G__main92DctLN_Pythia8cLcLInPair), -1, 0, 1, 1, 1, 0, "u 'Pythia8::InPair' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~InPair", 705, G__main92Dct_931_0_3, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__main92Dct_931_0_4, (int) ('u'), G__get_linked_tagnum(&G__main92DctLN_Pythia8cLcLInPair), -1, 1, 1, 1, 1, 0, "u 'Pythia8::InPair' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncPythia8cLcLSigmaProcess(void) {
   /* Pythia8::SigmaProcess */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__main92DctLN_Pythia8cLcLSigmaProcess));
   G__memfunc_setup("init",436,G__main92Dct_932_0_1, 121, -1, -1, 0, 9, 1, 1, 0, 
"U 'Pythia8::Info' - 0 - infoPtrIn U 'Pythia8::Settings' - 0 - settingsPtrIn "
"U 'Pythia8::ParticleData' - 0 - particleDataPtrIn U 'Pythia8::Rndm' - 0 - rndmPtrIn "
"U 'Pythia8::BeamParticle' - 0 - beamAPtrIn U 'Pythia8::BeamParticle' - 0 - beamBPtrIn "
"U 'Pythia8::Couplings' - 0 - couplings U 'Pythia8::SigmaTotal' - 0 '0' sigmaTotPtrIn "
"U 'Pythia8::SLHAinterface' - 0 '0' slhaInterfacePtrIn", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setLHAPtr",855,G__main92Dct_932_0_2, 121, -1, -1, 0, 1, 1, 1, 0, "U 'Pythia8::LHAup' - 0 - lhaUpPtrIn", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("initProc",840,G__main92Dct_932_0_3, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("initFlux",851,G__main92Dct_932_0_4, 103, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("set1Kin",671,G__main92Dct_932_0_5, 121, -1, -1, 0, 3, 1, 1, 0, 
"d - - 0 - - d - - 0 - - "
"d - - 0 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("set2Kin",672,G__main92Dct_932_0_6, 121, -1, -1, 0, 8, 1, 1, 0, 
"d - - 0 - - d - - 0 - - "
"d - - 0 - - d - - 0 - - "
"d - - 0 - - d - - 0 - - "
"d - - 0 - - d - - 0 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("set2KinMPI",902,G__main92Dct_932_0_7, 121, -1, -1, 0, 10, 1, 1, 0, 
"d - - 0 - - d - - 0 - - "
"d - - 0 - - d - - 0 - - "
"d - - 0 - - d - - 0 - - "
"d - - 0 - - g - - 0 - - "
"d - - 0 - - d - - 0 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("set3Kin",673,G__main92Dct_932_0_8, 121, -1, -1, 0, 12, 1, 1, 0, 
"d - - 0 - - d - - 0 - - "
"d - - 0 - - u 'Pythia8::Vec4' - 0 - - "
"u 'Pythia8::Vec4' - 0 - - u 'Pythia8::Vec4' - 0 - - "
"d - - 0 - - d - - 0 - - "
"d - - 0 - - d - - 0 - - "
"d - - 0 - - d - - 0 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("sigmaKin",819,G__main92Dct_932_0_9, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("sigmaHat",814,G__main92Dct_932_0_10, 100, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("sigmaHatWrap",1224,G__main92Dct_932_0_11, 100, -1, -1, 0, 2, 1, 1, 0, 
"i - - 0 '0' id1in i - - 0 '0' id2in", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("sigmaPDF",747,G__main92Dct_932_0_12, 100, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("pickInState",1119,G__main92Dct_932_0_13, 121, -1, -1, 0, 2, 1, 1, 0, 
"i - - 0 '0' id1in i - - 0 '0' id2in", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setIdColAcol",1174,G__main92Dct_932_0_14, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("final2KinMPI",1092,G__main92Dct_932_0_15, 103, -1, -1, 0, 6, 1, 1, 0, 
"i - - 0 '0' - i - - 0 '0' - "
"u 'Pythia8::Vec4' - 0 '0.' - u 'Pythia8::Vec4' - 0 '0.' - "
"d - - 0 '0.' - d - - 0 '0.' -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("weightDecayFlav",1527,G__main92Dct_932_0_16, 100, -1, -1, 0, 1, 1, 1, 0, "u 'Pythia8::Event' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("weightDecay",1134,G__main92Dct_932_0_17, 100, -1, -1, 0, 3, 1, 1, 0, 
"u 'Pythia8::Event' - 1 - - i - - 0 - - "
"i - - 0 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("setScale",820,G__main92Dct_932_0_18, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("name",417,G__main92Dct_932_0_19, 117, G__get_linked_tagnum(&G__main92DctLN_string), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("code",411,G__main92Dct_932_0_20, 105, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("nFinal",600,G__main92Dct_932_0_21, 105, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("inFlux",630,G__main92Dct_932_0_22, 117, G__get_linked_tagnum(&G__main92DctLN_string), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("convert2mb",1026,G__main92Dct_932_0_23, 103, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("convertM2",896,G__main92Dct_932_0_24, 103, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("isLHA",433,G__main92Dct_932_0_25, 103, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("isNonDiff",896,G__main92Dct_932_0_26, 103, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("isResolved",1056,G__main92Dct_932_0_27, 103, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("isDiffA",662,G__main92Dct_932_0_28, 103, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("isDiffB",663,G__main92Dct_932_0_29, 103, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("isDiffC",664,G__main92Dct_932_0_30, 103, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("isSUSY",560,G__main92Dct_932_0_31, 103, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("allowNegativeSigma",1859,G__main92Dct_932_0_32, 103, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("id3Mass",660,G__main92Dct_932_0_33, 105, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("id4Mass",661,G__main92Dct_932_0_34, 105, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("id5Mass",662,G__main92Dct_932_0_35, 105, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("resonanceA",1023,G__main92Dct_932_0_36, 105, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("resonanceB",1024,G__main92Dct_932_0_37, 105, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("isSChannel",1000,G__main92Dct_932_0_38, 103, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("idSChannel",985,G__main92Dct_932_0_39, 105, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("isQCD3body",917,G__main92Dct_932_0_40, 103, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("idTchan1",748,G__main92Dct_932_0_41, 105, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("idTchan2",749,G__main92Dct_932_0_42, 105, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("tChanFracPow1",1233,G__main92Dct_932_0_43, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("tChanFracPow2",1234,G__main92Dct_932_0_44, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("useMirrorWeight",1584,G__main92Dct_932_0_45, 103, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("gmZmode",723,G__main92Dct_932_0_46, 105, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("swappedTU",925,G__main92Dct_932_0_47, 103, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("id",205,G__main92Dct_932_0_48, 105, -1, -1, 0, 1, 1, 1, 8, "i - - 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("col",318,G__main92Dct_932_0_49, 105, -1, -1, 0, 1, 1, 1, 8, "i - - 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("acol",415,G__main92Dct_932_0_50, 105, -1, -1, 0, 1, 1, 1, 8, "i - - 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("m",109,G__main92Dct_932_0_51, 100, -1, -1, 0, 1, 1, 1, 8, "i - - 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getParton",948,G__main92Dct_932_0_52, 117, G__get_linked_tagnum(&G__main92DctLN_Pythia8cLcLParticle), -1, 0, 1, 1, 1, 8, "i - - 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Q2Ren",424,G__main92Dct_932_0_53, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("alphaEMRen",957,G__main92Dct_932_0_54, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("alphaSRen",894,G__main92Dct_932_0_55, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Q2Fac",397,G__main92Dct_932_0_56, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("pdf1",363,G__main92Dct_932_0_57, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("pdf2",364,G__main92Dct_932_0_58, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("thetaMPI",764,G__main92Dct_932_0_59, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("phiMPI",551,G__main92Dct_932_0_60, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("sHBetaMPI",797,G__main92Dct_932_0_61, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("pT2MPI",476,G__main92Dct_932_0_62, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("pTMPIFin",711,G__main92Dct_932_0_63, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("saveKin",721,G__main92Dct_932_0_64, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("loadKin",706,G__main92Dct_932_0_65, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("swapKin",733,G__main92Dct_932_0_66, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SigmaProcess",1232,(G__InterfaceMethod) NULL, 105, G__get_linked_tagnum(&G__main92DctLN_Pythia8cLcLSigmaProcess), -1, 0, 0, 1, 2, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("addBeamA",735,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 1, 1, 2, 0, "i - - 0 - idIn", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("addBeamB",736,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 1, 1, 2, 0, "i - - 0 - idIn", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("sizeBeamA",881,(G__InterfaceMethod) NULL, 105, -1, -1, 0, 0, 1, 2, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("sizeBeamB",882,(G__InterfaceMethod) NULL, 105, -1, -1, 0, 0, 1, 2, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("addPair",693,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 2, 1, 2, 0, 
"i - - 0 - idAIn i - - 0 - idBIn", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("sizePair",839,(G__InterfaceMethod) NULL, 105, -1, -1, 0, 0, 1, 2, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setupForME",1002,(G__InterfaceMethod) NULL, 103, -1, -1, 0, 0, 1, 2, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("setupForMEin",1217,(G__InterfaceMethod) NULL, 103, -1, -1, 0, 0, 1, 2, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setId",505,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 5, 1, 2, 0, 
"i - - 0 '0' id1in i - - 0 '0' id2in "
"i - - 0 '0' id3in i - - 0 '0' id4in "
"i - - 0 '0' id5in", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setColAcol",1001,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 10, 1, 2, 0, 
"i - - 0 '0' col1 i - - 0 '0' acol1 "
"i - - 0 '0' col2 i - - 0 '0' acol2 "
"i - - 0 '0' col3 i - - 0 '0' acol3 "
"i - - 0 '0' col4 i - - 0 '0' acol4 "
"i - - 0 '0' col5 i - - 0 '0' acol5", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("swapColAcol",1112,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 2, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("swapCol1234",931,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 2, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("swapCol12",828,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 2, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("swapCol34",832,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 2, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("weightTopDecay",1441,(G__InterfaceMethod) NULL, 100, -1, -1, 0, 3, 1, 2, 0, 
"u 'Pythia8::Event' - 1 - process i - - 0 - iResBeg "
"i - - 0 - iResEnd", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("weightHiggsDecay",1632,(G__InterfaceMethod) NULL, 100, -1, -1, 0, 3, 1, 2, 0, 
"u 'Pythia8::Event' - 1 - process i - - 0 - iResBeg "
"i - - 0 - iResEnd", (char*)NULL, (void*) NULL, 0);
   // automatic copy constructor
   G__memfunc_setup("SigmaProcess", 1232, G__main92Dct_932_0_84, (int) ('i'), G__get_linked_tagnum(&G__main92DctLN_Pythia8cLcLSigmaProcess), -1, 0, 1, 1, 1, 0, "u 'Pythia8::SigmaProcess' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~SigmaProcess", 1358, G__main92Dct_932_0_85, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__main92Dct_932_0_86, (int) ('u'), G__get_linked_tagnum(&G__main92DctLN_Pythia8cLcLSigmaProcess), -1, 1, 1, 1, 1, 0, "u 'Pythia8::SigmaProcess' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncPythia8cLcLPythia(void) {
   /* Pythia8::Pythia */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__main92DctLN_Pythia8cLcLPythia));
   G__memfunc_setup("Pythia",623,G__main92Dct_1118_0_1, 105, G__get_linked_tagnum(&G__main92DctLN_Pythia8cLcLPythia), -1, 0, 2, 1, 1, 0, 
"u 'string' - 0 '\"../xmldoc\"' xmlDir g - - 0 'true' printBanner", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("readString",1043,G__main92Dct_1118_0_2, 103, -1, -1, 0, 2, 1, 1, 0, 
"u 'string' - 0 - - g - - 0 'true' warn", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("readFile",796,G__main92Dct_1118_0_3, 103, -1, -1, 0, 3, 1, 1, 0, 
"u 'string' - 0 - fileName g - - 0 'true' warn "
"i - - 0 'SUBRUNDEFAULT' subrun", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("readFile",796,G__main92Dct_1118_0_4, 103, -1, -1, 0, 2, 1, 1, 0, 
"u 'string' - 0 - fileName i - - 0 - subrun", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("readFile",796,G__main92Dct_1118_0_5, 103, -1, -1, 0, 3, 1, 1, 0, 
"u 'basic_istream<char,char_traits<char> >' 'istream' 1 'cin' is g - - 0 'true' warn "
"i - - 0 'SUBRUNDEFAULT' subrun", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("readFile",796,G__main92Dct_1118_0_6, 103, -1, -1, 0, 2, 1, 1, 0, 
"u 'basic_istream<char,char_traits<char> >' 'istream' 1 - is i - - 0 - subrun", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setPDFPtr",860,G__main92Dct_1118_0_7, 103, -1, -1, 0, 6, 1, 1, 0, 
"U 'Pythia8::PDF' - 0 - pdfAPtrIn U 'Pythia8::PDF' - 0 - pdfBPtrIn "
"U 'Pythia8::PDF' - 0 '0' pdfHardAPtrIn U 'Pythia8::PDF' - 0 '0' pdfHardBPtrIn "
"U 'Pythia8::PDF' - 0 '0' pdfPomAPtrIn U 'Pythia8::PDF' - 0 '0' pdfPomBPtrIn", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setLHAupPtr",1084,G__main92Dct_1118_0_8, 103, -1, -1, 0, 1, 1, 1, 0, "U 'Pythia8::LHAup' - 0 - lhaUpPtrIn", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setDecayPtr",1128,G__main92Dct_1118_0_9, 103, -1, -1, 0, 2, 1, 1, 0, 
"U 'Pythia8::DecayHandler' - 0 - decayHandlePtrIn u 'vector<int,allocator<int> >' 'vector<int>' 0 - handledParticlesIn", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setRndmEnginePtr",1641,G__main92Dct_1118_0_10, 103, -1, -1, 0, 1, 1, 1, 0, "U 'Pythia8::RndmEngine' - 0 - rndmEnginePtrIn", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setUserHooksPtr",1573,G__main92Dct_1118_0_11, 103, -1, -1, 0, 1, 1, 1, 0, "U 'Pythia8::UserHooks' - 0 - userHooksPtrIn", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setMergingHooksPtr",1871,G__main92Dct_1118_0_12, 103, -1, -1, 0, 1, 1, 1, 0, "U 'Pythia8::MergingHooks' - 0 - mergingHooksPtrIn", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setBeamShapePtr",1512,G__main92Dct_1118_0_13, 103, -1, -1, 0, 1, 1, 1, 0, "U 'Pythia8::BeamShape' - 0 - beamShapePtrIn", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setSigmaPtr",1139,G__main92Dct_1118_0_14, 103, -1, -1, 0, 1, 1, 1, 0, "U 'Pythia8::SigmaProcess' - 0 - sigmaPtrIn", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setResonancePtr",1568,G__main92Dct_1118_0_15, 103, -1, -1, 0, 1, 1, 1, 0, "U 'Pythia8::ResonanceWidths' - 0 - resonancePtrIn", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setShowerPtr",1274,G__main92Dct_1118_0_16, 103, -1, -1, 0, 3, 1, 1, 0, 
"U 'Pythia8::TimeShower' - 0 - timesDecPtrIn U 'Pythia8::TimeShower' - 0 '0' timesPtrIn "
"U 'Pythia8::SpaceShower' - 0 '0' spacePtrIn", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("init",436,G__main92Dct_1118_0_17, 103, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("next",447,G__main92Dct_1118_0_18, 103, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("forceTimeShower",1558,G__main92Dct_1118_0_19, 105, -1, -1, 0, 4, 1, 1, 0, 
"i - - 0 - iBeg i - - 0 - iEnd "
"d - - 0 - pTmax i - - 0 '0' nBranchMax", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("forceHadronLevel",1635,G__main92Dct_1118_0_20, 103, -1, -1, 0, 1, 1, 1, 0, "g - - 0 'true' findJunctions", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("moreDecays",1036,G__main92Dct_1118_0_21, 103, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("forceRHadronDecays",1814,G__main92Dct_1118_0_22, 103, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("LHAeventList",1171,G__main92Dct_1118_0_23, 121, -1, -1, 0, 1, 1, 1, 0, "u 'basic_ostream<char,char_traits<char> >' 'ostream' 1 'cout' os", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("LHAeventSkip",1166,G__main92Dct_1118_0_24, 103, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - nSkip", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("stat",444,G__main92Dct_1118_0_25, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("flag",410,G__main92Dct_1118_0_26, 103, -1, -1, 0, 1, 1, 1, 0, "u 'string' - 0 - key", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("mode",421,G__main92Dct_1118_0_27, 105, -1, -1, 0, 1, 1, 1, 0, "u 'string' - 0 - key", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("parm",432,G__main92Dct_1118_0_28, 100, -1, -1, 0, 1, 1, 1, 0, "u 'string' - 0 - key", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("word",444,G__main92Dct_1118_0_29, 117, G__get_linked_tagnum(&G__main92DctLN_string), -1, 0, 1, 1, 1, 0, "u 'string' - 0 - key", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getPDFPtr",848,G__main92Dct_1118_0_30, 85, G__get_linked_tagnum(&G__main92DctLN_Pythia8cLcLPDF), -1, 0, 3, 1, 1, 0, 
"i - - 0 - idIn i - - 0 '1' sequence "
"u 'string' - 0 '\"\"' beam", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Pythia",623,(G__InterfaceMethod) NULL, 105, G__get_linked_tagnum(&G__main92DctLN_Pythia8cLcLPythia), -1, 0, 1, 1, 4, 0, "u 'Pythia8::Pythia' - 11 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator=",937,(G__InterfaceMethod) NULL, 117, G__get_linked_tagnum(&G__main92DctLN_Pythia8cLcLPythia), -1, 1, 1, 1, 4, 0, "u 'Pythia8::Pythia' - 11 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("banner",630,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 1, 1, 4, 0, "u 'basic_ostream<char,char_traits<char> >' 'ostream' 1 'cout' os", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("readSubrun",1051,(G__InterfaceMethod) NULL, 105, -1, -1, 0, 3, 1, 4, 0, 
"u 'string' - 0 - line g - - 0 'true' warn "
"u 'basic_ostream<char,char_traits<char> >' 'ostream' 1 'cout' os", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("readCommented",1336,(G__InterfaceMethod) NULL, 105, -1, -1, 0, 1, 1, 4, 0, "u 'string' - 0 - line", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("checkSettings",1359,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("checkBeams",998,(G__InterfaceMethod) NULL, 103, -1, -1, 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("initKinematics",1468,(G__InterfaceMethod) NULL, 103, -1, -1, 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("initPDFs",769,(G__InterfaceMethod) NULL, 103, -1, -1, 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("nextKinematics",1479,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("boostAndVertex",1464,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 2, 1, 4, 0, 
"g - - 0 - toLab g - - 0 - setVertex", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("doRHadronDecays",1498,(G__InterfaceMethod) NULL, 103, -1, -1, 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("check",510,(G__InterfaceMethod) NULL, 103, -1, -1, 0, 1, 1, 4, 0, "u 'basic_ostream<char,char_traits<char> >' 'ostream' 1 'cout' os", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("initSLHA",732,(G__InterfaceMethod) NULL, 103, -1, -1, 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~Pythia", 749, G__main92Dct_1118_0_45, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncvectorlEPythia8cLcLResonanceWidthscOallocatorlEPythia8cLcLResonanceWidthsgRsPgR(void) {
   /* vector<Pythia8::ResonanceWidths,allocator<Pythia8::ResonanceWidths> > */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__main92DctLN_vectorlEPythia8cLcLResonanceWidthscOallocatorlEPythia8cLcLResonanceWidthsgRsPgR));
   G__memfunc_setup("at",213,G__main92Dct_1120_0_1, 117, G__get_linked_tagnum(&G__main92DctLN_Pythia8cLcLResonanceWidths), G__defined_typename("vector<Pythia8::ResonanceWidths,allocator<Pythia8::ResonanceWidths> >::reference"), 1, 1, 1, 1, 0, "k - 'vector<Pythia8::ResonanceWidths,allocator<Pythia8::ResonanceWidths> >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("at",213,G__main92Dct_1120_0_2, 117, G__get_linked_tagnum(&G__main92DctLN_Pythia8cLcLResonanceWidths), G__defined_typename("vector<Pythia8::ResonanceWidths,allocator<Pythia8::ResonanceWidths> >::const_reference"), 1, 1, 1, 1, 8, "k - 'vector<Pythia8::ResonanceWidths,allocator<Pythia8::ResonanceWidths> >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("begin",517,G__main92Dct_1120_0_3, 117, G__get_linked_tagnum(&G__main92DctLN_vectorlEPythia8cLcLResonanceWidthscOallocatorlEPythia8cLcLResonanceWidthsgRsPgRcLcLiterator), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("end",311,G__main92Dct_1120_0_4, 117, G__get_linked_tagnum(&G__main92DctLN_vectorlEPythia8cLcLResonanceWidthscOallocatorlEPythia8cLcLResonanceWidthsgRsPgRcLcLiterator), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("rbegin",631,G__main92Dct_1120_0_5, 117, G__get_linked_tagnum(&G__main92DctLN_reverse_iteratorlEvectorlEPythia8cLcLResonanceWidthscOallocatorlEPythia8cLcLResonanceWidthsgRsPgRcLcLiteratorgR), G__defined_typename("vector<Pythia8::ResonanceWidths,allocator<Pythia8::ResonanceWidths> >::reverse_iterator"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("rend",425,G__main92Dct_1120_0_6, 117, G__get_linked_tagnum(&G__main92DctLN_reverse_iteratorlEvectorlEPythia8cLcLResonanceWidthscOallocatorlEPythia8cLcLResonanceWidthsgRsPgRcLcLiteratorgR), G__defined_typename("vector<Pythia8::ResonanceWidths,allocator<Pythia8::ResonanceWidths> >::reverse_iterator"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("size",443,G__main92Dct_1120_0_7, 107, -1, G__defined_typename("vector<Pythia8::ResonanceWidths,allocator<Pythia8::ResonanceWidths> >::size_type"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("max_size",864,G__main92Dct_1120_0_8, 107, -1, G__defined_typename("vector<Pythia8::ResonanceWidths,allocator<Pythia8::ResonanceWidths> >::size_type"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("resize",658,G__main92Dct_1120_0_9, 121, -1, -1, 0, 1, 1, 1, 0, "k - 'vector<Pythia8::ResonanceWidths,allocator<Pythia8::ResonanceWidths> >::size_type' 0 - sz", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("resize",658,G__main92Dct_1120_0_10, 121, -1, -1, 0, 2, 1, 1, 0, 
"k - 'vector<Pythia8::ResonanceWidths,allocator<Pythia8::ResonanceWidths> >::size_type' 0 - sz u 'Pythia8::ResonanceWidths' - 0 - c", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("capacity",846,G__main92Dct_1120_0_11, 107, -1, G__defined_typename("vector<Pythia8::ResonanceWidths,allocator<Pythia8::ResonanceWidths> >::size_type"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("empty",559,G__main92Dct_1120_0_12, 103, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__main92Dct_1120_0_13, 117, G__get_linked_tagnum(&G__main92DctLN_Pythia8cLcLResonanceWidths), G__defined_typename("vector<Pythia8::ResonanceWidths,allocator<Pythia8::ResonanceWidths> >::reference"), 1, 1, 1, 1, 0, "k - 'vector<Pythia8::ResonanceWidths,allocator<Pythia8::ResonanceWidths> >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__main92Dct_1120_0_14, 117, G__get_linked_tagnum(&G__main92DctLN_Pythia8cLcLResonanceWidths), G__defined_typename("vector<Pythia8::ResonanceWidths,allocator<Pythia8::ResonanceWidths> >::const_reference"), 1, 1, 1, 1, 8, "k - 'vector<Pythia8::ResonanceWidths,allocator<Pythia8::ResonanceWidths> >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("vector<Pythia8::ResonanceWidths,allocator<Pythia8::ResonanceWidths> >",6636,G__main92Dct_1120_0_15, 105, G__get_linked_tagnum(&G__main92DctLN_vectorlEPythia8cLcLResonanceWidthscOallocatorlEPythia8cLcLResonanceWidthsgRsPgR), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("vector<Pythia8::ResonanceWidths,allocator<Pythia8::ResonanceWidths> >",6636,G__main92Dct_1120_0_16, 105, G__get_linked_tagnum(&G__main92DctLN_vectorlEPythia8cLcLResonanceWidthscOallocatorlEPythia8cLcLResonanceWidthsgRsPgR), -1, 0, 2, 1, 1, 0, 
"k - 'vector<Pythia8::ResonanceWidths,allocator<Pythia8::ResonanceWidths> >::size_type' 0 - n u 'Pythia8::ResonanceWidths' - 11 'Pythia8::ResonanceWidths()' value", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("vector<Pythia8::ResonanceWidths,allocator<Pythia8::ResonanceWidths> >",6636,G__main92Dct_1120_0_17, 105, G__get_linked_tagnum(&G__main92DctLN_vectorlEPythia8cLcLResonanceWidthscOallocatorlEPythia8cLcLResonanceWidthsgRsPgR), -1, 0, 1, 1, 1, 0, "u 'vector<Pythia8::ResonanceWidths,allocator<Pythia8::ResonanceWidths> >' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("vector<Pythia8::ResonanceWidths,allocator<Pythia8::ResonanceWidths> >",6636,G__main92Dct_1120_0_18, 105, G__get_linked_tagnum(&G__main92DctLN_vectorlEPythia8cLcLResonanceWidthscOallocatorlEPythia8cLcLResonanceWidthsgRsPgR), -1, 0, 2, 1, 1, 0, 
"u 'vector<Pythia8::ResonanceWidths,allocator<Pythia8::ResonanceWidths> >::iterator' 'vector<Pythia8::ResonanceWidths,allocator<Pythia8::ResonanceWidths> >::const_iterator' 10 - first u 'vector<Pythia8::ResonanceWidths,allocator<Pythia8::ResonanceWidths> >::iterator' 'vector<Pythia8::ResonanceWidths,allocator<Pythia8::ResonanceWidths> >::const_iterator' 10 - last", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator=",937,G__main92Dct_1120_0_19, 117, G__get_linked_tagnum(&G__main92DctLN_vectorlEPythia8cLcLResonanceWidthscOallocatorlEPythia8cLcLResonanceWidthsgRsPgR), -1, 1, 1, 1, 1, 0, "u 'vector<Pythia8::ResonanceWidths,allocator<Pythia8::ResonanceWidths> >' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("reserve",764,G__main92Dct_1120_0_20, 121, -1, -1, 0, 1, 1, 1, 0, "k - 'vector<Pythia8::ResonanceWidths,allocator<Pythia8::ResonanceWidths> >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("front",553,G__main92Dct_1120_0_21, 117, G__get_linked_tagnum(&G__main92DctLN_Pythia8cLcLResonanceWidths), -1, 1, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("back",401,G__main92Dct_1120_0_22, 117, G__get_linked_tagnum(&G__main92DctLN_Pythia8cLcLResonanceWidths), -1, 1, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("push_back",944,G__main92Dct_1120_0_23, 121, -1, -1, 0, 1, 1, 1, 0, "u 'Pythia8::ResonanceWidths' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("swap",443,G__main92Dct_1120_0_24, 121, -1, -1, 0, 1, 1, 1, 0, "u 'vector<Pythia8::ResonanceWidths,allocator<Pythia8::ResonanceWidths> >' - 1 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("insert",661,G__main92Dct_1120_0_25, 117, G__get_linked_tagnum(&G__main92DctLN_vectorlEPythia8cLcLResonanceWidthscOallocatorlEPythia8cLcLResonanceWidthsgRsPgRcLcLiterator), -1, 0, 2, 1, 1, 0, 
"u 'vector<Pythia8::ResonanceWidths,allocator<Pythia8::ResonanceWidths> >::iterator' - 0 - position u 'Pythia8::ResonanceWidths' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("insert",661,G__main92Dct_1120_0_26, 121, -1, -1, 0, 3, 1, 1, 0, 
"u 'vector<Pythia8::ResonanceWidths,allocator<Pythia8::ResonanceWidths> >::iterator' - 0 - position u 'vector<Pythia8::ResonanceWidths,allocator<Pythia8::ResonanceWidths> >::iterator' 'vector<Pythia8::ResonanceWidths,allocator<Pythia8::ResonanceWidths> >::const_iterator' 10 - first "
"u 'vector<Pythia8::ResonanceWidths,allocator<Pythia8::ResonanceWidths> >::iterator' 'vector<Pythia8::ResonanceWidths,allocator<Pythia8::ResonanceWidths> >::const_iterator' 10 - last", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("insert",661,G__main92Dct_1120_0_27, 121, -1, -1, 0, 3, 1, 1, 0, 
"u 'vector<Pythia8::ResonanceWidths,allocator<Pythia8::ResonanceWidths> >::iterator' - 0 - position k - 'vector<Pythia8::ResonanceWidths,allocator<Pythia8::ResonanceWidths> >::size_type' 0 - n "
"u 'Pythia8::ResonanceWidths' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("pop_back",831,G__main92Dct_1120_0_28, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("erase",528,G__main92Dct_1120_0_29, 121, -1, -1, 0, 1, 1, 1, 0, "u 'vector<Pythia8::ResonanceWidths,allocator<Pythia8::ResonanceWidths> >::iterator' - 0 - position", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("erase",528,G__main92Dct_1120_0_30, 121, -1, -1, 0, 2, 1, 1, 0, 
"u 'vector<Pythia8::ResonanceWidths,allocator<Pythia8::ResonanceWidths> >::iterator' - 0 - first u 'vector<Pythia8::ResonanceWidths,allocator<Pythia8::ResonanceWidths> >::iterator' - 0 - last", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("clear",519,G__main92Dct_1120_0_31, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~vector<Pythia8::ResonanceWidths,allocator<Pythia8::ResonanceWidths> >", 6762, G__main92Dct_1120_0_32, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}


/*********************************************************
* Member function information setup
*********************************************************/
extern "C" void G__cpp_setup_memfuncmain92Dct() {
}

/*********************************************************
* Global variable information setup for each class
*********************************************************/
static void G__cpp_setup_global0() {

   /* Setting up global variables */
   G__resetplocal();

}

static void G__cpp_setup_global1() {
}

static void G__cpp_setup_global2() {

   G__resetglobalenv();
}
extern "C" void G__cpp_setup_globalmain92Dct() {
  G__cpp_setup_global0();
  G__cpp_setup_global1();
  G__cpp_setup_global2();
}

/*********************************************************
* Global function information setup for each class
*********************************************************/
static void G__cpp_setup_func0() {
   G__lastifuncposition();

}

static void G__cpp_setup_func1() {
}

static void G__cpp_setup_func2() {
}

static void G__cpp_setup_func3() {
}

static void G__cpp_setup_func4() {
}

static void G__cpp_setup_func5() {
}

static void G__cpp_setup_func6() {
}

static void G__cpp_setup_func7() {
}

static void G__cpp_setup_func8() {
}

static void G__cpp_setup_func9() {
}

static void G__cpp_setup_func10() {
}

static void G__cpp_setup_func11() {
}

static void G__cpp_setup_func12() {
}

static void G__cpp_setup_func13() {
}

static void G__cpp_setup_func14() {
}

static void G__cpp_setup_func15() {
}

static void G__cpp_setup_func16() {
}

static void G__cpp_setup_func17() {
}

static void G__cpp_setup_func18() {
}

static void G__cpp_setup_func19() {
}

static void G__cpp_setup_func20() {
}

static void G__cpp_setup_func21() {
}

static void G__cpp_setup_func22() {
}

static void G__cpp_setup_func23() {
}

static void G__cpp_setup_func24() {
}

static void G__cpp_setup_func25() {
}

static void G__cpp_setup_func26() {
}

static void G__cpp_setup_func27() {
}

static void G__cpp_setup_func28() {
}

static void G__cpp_setup_func29() {
}

static void G__cpp_setup_func30() {
}

static void G__cpp_setup_func31() {
}

static void G__cpp_setup_func32() {
}

static void G__cpp_setup_func33() {
}

static void G__cpp_setup_func34() {
}

static void G__cpp_setup_func35() {
}

static void G__cpp_setup_func36() {
}

static void G__cpp_setup_func37() {
}

static void G__cpp_setup_func38() {
}

static void G__cpp_setup_func39() {
}

static void G__cpp_setup_func40() {
}

static void G__cpp_setup_func41() {
}

static void G__cpp_setup_func42() {
}

static void G__cpp_setup_func43() {
}

static void G__cpp_setup_func44() {
}

static void G__cpp_setup_func45() {
}

static void G__cpp_setup_func46() {
}

static void G__cpp_setup_func47() {
}

static void G__cpp_setup_func48() {
}

static void G__cpp_setup_func49() {
}

static void G__cpp_setup_func50() {
}

static void G__cpp_setup_func51() {
}

static void G__cpp_setup_func52() {
}

static void G__cpp_setup_func53() {
}

static void G__cpp_setup_func54() {
}

static void G__cpp_setup_func55() {
}

static void G__cpp_setup_func56() {
}

static void G__cpp_setup_func57() {
}

static void G__cpp_setup_func58() {
}

static void G__cpp_setup_func59() {
}

static void G__cpp_setup_func60() {
}

static void G__cpp_setup_func61() {
}

static void G__cpp_setup_func62() {

   G__resetifuncposition();
}

extern "C" void G__cpp_setup_funcmain92Dct() {
  G__cpp_setup_func0();
  G__cpp_setup_func1();
  G__cpp_setup_func2();
  G__cpp_setup_func3();
  G__cpp_setup_func4();
  G__cpp_setup_func5();
  G__cpp_setup_func6();
  G__cpp_setup_func7();
  G__cpp_setup_func8();
  G__cpp_setup_func9();
  G__cpp_setup_func10();
  G__cpp_setup_func11();
  G__cpp_setup_func12();
  G__cpp_setup_func13();
  G__cpp_setup_func14();
  G__cpp_setup_func15();
  G__cpp_setup_func16();
  G__cpp_setup_func17();
  G__cpp_setup_func18();
  G__cpp_setup_func19();
  G__cpp_setup_func20();
  G__cpp_setup_func21();
  G__cpp_setup_func22();
  G__cpp_setup_func23();
  G__cpp_setup_func24();
  G__cpp_setup_func25();
  G__cpp_setup_func26();
  G__cpp_setup_func27();
  G__cpp_setup_func28();
  G__cpp_setup_func29();
  G__cpp_setup_func30();
  G__cpp_setup_func31();
  G__cpp_setup_func32();
  G__cpp_setup_func33();
  G__cpp_setup_func34();
  G__cpp_setup_func35();
  G__cpp_setup_func36();
  G__cpp_setup_func37();
  G__cpp_setup_func38();
  G__cpp_setup_func39();
  G__cpp_setup_func40();
  G__cpp_setup_func41();
  G__cpp_setup_func42();
  G__cpp_setup_func43();
  G__cpp_setup_func44();
  G__cpp_setup_func45();
  G__cpp_setup_func46();
  G__cpp_setup_func47();
  G__cpp_setup_func48();
  G__cpp_setup_func49();
  G__cpp_setup_func50();
  G__cpp_setup_func51();
  G__cpp_setup_func52();
  G__cpp_setup_func53();
  G__cpp_setup_func54();
  G__cpp_setup_func55();
  G__cpp_setup_func56();
  G__cpp_setup_func57();
  G__cpp_setup_func58();
  G__cpp_setup_func59();
  G__cpp_setup_func60();
  G__cpp_setup_func61();
  G__cpp_setup_func62();
}

/*********************************************************
* Class,struct,union,enum tag information setup
*********************************************************/
/* Setup class/struct taginfo */
G__linked_taginfo G__main92DctLN_vectorlEdoublecOallocatorlEdoublegRsPgR = { "vector<double,allocator<double> >" , 99 , -1 };
G__linked_taginfo G__main92DctLN_vectorlEboolcOallocatorlEboolgRsPgR = { "vector<bool,allocator<bool> >" , 99 , -1 };
G__linked_taginfo G__main92DctLN_basic_istreamlEcharcOchar_traitslEchargRsPgR = { "basic_istream<char,char_traits<char> >" , 99 , -1 };
G__linked_taginfo G__main92DctLN_basic_ostreamlEcharcOchar_traitslEchargRsPgR = { "basic_ostream<char,char_traits<char> >" , 99 , -1 };
G__linked_taginfo G__main92DctLN_string = { "string" , 99 , -1 };
G__linked_taginfo G__main92DctLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR = { "vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >" , 99 , -1 };
G__linked_taginfo G__main92DctLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR = { "reverse_iterator<vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >::iterator>" , 99 , -1 };
G__linked_taginfo G__main92DctLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR = { "vector<TVirtualArray*,allocator<TVirtualArray*> >" , 99 , -1 };
G__linked_taginfo G__main92DctLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<TVirtualArray*,allocator<TVirtualArray*> >::iterator>" , 99 , -1 };
G__linked_taginfo G__main92DctLN_maplEstringcOintcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOintgRsPgRsPgR = { "map<string,int,less<string>,allocator<pair<const string,int> > >" , 99 , -1 };
G__linked_taginfo G__main92DctLN_maplEstringcOdoublecOlesslEstringgRcOallocatorlEpairlEconstsPstringcOdoublegRsPgRsPgR = { "map<string,double,less<string>,allocator<pair<const string,double> > >" , 99 , -1 };
G__linked_taginfo G__main92DctLN_pairlEintcOintgR = { "pair<int,int>" , 115 , -1 };
G__linked_taginfo G__main92DctLN_pairlEdoublecOdoublegR = { "pair<double,double>" , 115 , -1 };
G__linked_taginfo G__main92DctLN_Pythia8 = { "Pythia8" , 110 , -1 };
G__linked_taginfo G__main92DctLN_Pythia8cLcLRndmEngine = { "Pythia8::RndmEngine" , 99 , -1 };
G__linked_taginfo G__main92DctLN_Pythia8cLcLRndm = { "Pythia8::Rndm" , 99 , -1 };
G__linked_taginfo G__main92DctLN_Pythia8cLcLRotBstMatrix = { "Pythia8::RotBstMatrix" , 99 , -1 };
G__linked_taginfo G__main92DctLN_Pythia8cLcLVec4 = { "Pythia8::Vec4" , 99 , -1 };
G__linked_taginfo G__main92DctLN_Pythia8cLcLHist = { "Pythia8::Hist" , 99 , -1 };
G__linked_taginfo G__main92DctLN_maplEstringcOstringcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOstringgRsPgRsPgR = { "map<string,string,less<string>,allocator<pair<const string,string> > >" , 99 , -1 };
G__linked_taginfo G__main92DctLN_vectorlEPythia8cLcLXMLTagmUcOallocatorlEPythia8cLcLXMLTagmUgRsPgR = { "vector<Pythia8::XMLTag*,allocator<Pythia8::XMLTag*> >" , 99 , -1 };
G__linked_taginfo G__main92DctLN_reverse_iteratorlEvectorlEPythia8cLcLXMLTagmUcOallocatorlEPythia8cLcLXMLTagmUgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<Pythia8::XMLTag*,allocator<Pythia8::XMLTag*> >::iterator>" , 99 , -1 };
G__linked_taginfo G__main92DctLN_Pythia8cLcLLHAweights = { "Pythia8::LHAweights" , 115 , -1 };
G__linked_taginfo G__main92DctLN_Pythia8cLcLLHAscales = { "Pythia8::LHAscales" , 115 , -1 };
G__linked_taginfo G__main92DctLN_maplEstringcOPythia8cLcLLHAweightcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOPythia8cLcLLHAweightgRsPgRsPgR = { "map<string,Pythia8::LHAweight,less<string>,allocator<pair<const string,Pythia8::LHAweight> > >" , 99 , -1 };
G__linked_taginfo G__main92DctLN_Pythia8cLcLLHArwgt = { "Pythia8::LHArwgt" , 115 , -1 };
G__linked_taginfo G__main92DctLN_maplEstringcOPythia8cLcLLHAwgtcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOPythia8cLcLLHAwgtgRsPgRsPgR = { "map<string,Pythia8::LHAwgt,less<string>,allocator<pair<const string,Pythia8::LHAwgt> > >" , 99 , -1 };
G__linked_taginfo G__main92DctLN_Pythia8cLcLLHAinitrwgt = { "Pythia8::LHAinitrwgt" , 115 , -1 };
G__linked_taginfo G__main92DctLN_maplEstringcOPythia8cLcLLHAweightgroupcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOPythia8cLcLLHAweightgroupgRsPgRsPgR = { "map<string,Pythia8::LHAweightgroup,less<string>,allocator<pair<const string,Pythia8::LHAweightgroup> > >" , 99 , -1 };
G__linked_taginfo G__main92DctLN_vectorlEintcOallocatorlEintgRsPgR = { "vector<int,allocator<int> >" , 99 , -1 };
G__linked_taginfo G__main92DctLN_reverse_iteratorlEvectorlEintcOallocatorlEintgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<int,allocator<int> >::iterator>" , 99 , -1 };
G__linked_taginfo G__main92DctLN_vectorlEPythia8cLcLLHAgeneratorcOallocatorlEPythia8cLcLLHAgeneratorgRsPgR = { "vector<Pythia8::LHAgenerator,allocator<Pythia8::LHAgenerator> >" , 99 , -1 };
G__linked_taginfo G__main92DctLN_reverse_iteratorlEvectorlEPythia8cLcLLHAgeneratorcOallocatorlEPythia8cLcLLHAgeneratorgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<Pythia8::LHAgenerator,allocator<Pythia8::LHAgenerator> >::iterator>" , 99 , -1 };
G__linked_taginfo G__main92DctLN_vectorlEpairlEintcOintgRcOallocatorlEpairlEintcOintgRsPgRsPgR = { "vector<pair<int,int>,allocator<pair<int,int> > >" , 99 , -1 };
G__linked_taginfo G__main92DctLN_reverse_iteratorlEvectorlEpairlEintcOintgRcOallocatorlEpairlEintcOintgRsPgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<pair<int,int>,allocator<pair<int,int> > >::iterator>" , 99 , -1 };
G__linked_taginfo G__main92DctLN_vectorlEvectorlEdoublecOallocatorlEdoublegRsPgRcOallocatorlEvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgR = { "vector<vector<double,allocator<double> >,allocator<vector<double,allocator<double> > > >" , 99 , -1 };
G__linked_taginfo G__main92DctLN_reverse_iteratorlEvectorlEvectorlEdoublecOallocatorlEdoublegRsPgRcOallocatorlEvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<vector<double,allocator<double> >,allocator<vector<double,allocator<double> > > >::iterator>" , 99 , -1 };
G__linked_taginfo G__main92DctLN_Pythia8cLcLInfo = { "Pythia8::Info" , 99 , -1 };
G__linked_taginfo G__main92DctLN_vectorlEstringcOallocatorlEstringgRsPgR = { "vector<string,allocator<string> >" , 99 , -1 };
G__linked_taginfo G__main92DctLN_reverse_iteratorlEvectorlEstringcOallocatorlEstringgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<string,allocator<string> >::iterator>" , 99 , -1 };
G__linked_taginfo G__main92DctLN_maplEintcOstringcOlesslEintgRcOallocatorlEpairlEconstsPintcOstringgRsPgRsPgR = { "map<int,string,less<int>,allocator<pair<const int,string> > >" , 99 , -1 };
G__linked_taginfo G__main92DctLN_maplEintcOlongcOlesslEintgRcOallocatorlEpairlEconstsPintcOlonggRsPgRsPgR = { "map<int,long,less<int>,allocator<pair<const int,long> > >" , 99 , -1 };
G__linked_taginfo G__main92DctLN_maplEintcOdoublecOlesslEintgRcOallocatorlEpairlEconstsPintcOdoublegRsPgRsPgR = { "map<int,double,less<int>,allocator<pair<const int,double> > >" , 99 , -1 };
G__linked_taginfo G__main92DctLN_maplEstringcOpairlEvoidmUcOintgRcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOpairlEvoidmUcOintgRsPgRsPgRsPgR = { "map<string,pair<void*,int>,less<string>,allocator<pair<const string,pair<void*,int> > > >" , 99 , -1 };
G__linked_taginfo G__main92DctLN_Pythia8cLcLSettings = { "Pythia8::Settings" , 99 , -1 };
G__linked_taginfo G__main92DctLN_maplEstringcOPythia8cLcLFlagcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOPythia8cLcLFlaggRsPgRsPgR = { "map<string,Pythia8::Flag,less<string>,allocator<pair<const string,Pythia8::Flag> > >" , 99 , -1 };
G__linked_taginfo G__main92DctLN_maplEstringcOPythia8cLcLModecOlesslEstringgRcOallocatorlEpairlEconstsPstringcOPythia8cLcLModegRsPgRsPgR = { "map<string,Pythia8::Mode,less<string>,allocator<pair<const string,Pythia8::Mode> > >" , 99 , -1 };
G__linked_taginfo G__main92DctLN_maplEstringcOPythia8cLcLParmcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOPythia8cLcLParmgRsPgRsPgR = { "map<string,Pythia8::Parm,less<string>,allocator<pair<const string,Pythia8::Parm> > >" , 99 , -1 };
G__linked_taginfo G__main92DctLN_maplEstringcOPythia8cLcLWordcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOPythia8cLcLWordgRsPgRsPgR = { "map<string,Pythia8::Word,less<string>,allocator<pair<const string,Pythia8::Word> > >" , 99 , -1 };
G__linked_taginfo G__main92DctLN_maplEstringcOPythia8cLcLFVeccOlesslEstringgRcOallocatorlEpairlEconstsPstringcOPythia8cLcLFVecgRsPgRsPgR = { "map<string,Pythia8::FVec,less<string>,allocator<pair<const string,Pythia8::FVec> > >" , 99 , -1 };
G__linked_taginfo G__main92DctLN_maplEstringcOPythia8cLcLMVeccOlesslEstringgRcOallocatorlEpairlEconstsPstringcOPythia8cLcLMVecgRsPgRsPgR = { "map<string,Pythia8::MVec,less<string>,allocator<pair<const string,Pythia8::MVec> > >" , 99 , -1 };
G__linked_taginfo G__main92DctLN_maplEstringcOPythia8cLcLPVeccOlesslEstringgRcOallocatorlEpairlEconstsPstringcOPythia8cLcLPVecgRsPgRsPgR = { "map<string,Pythia8::PVec,less<string>,allocator<pair<const string,Pythia8::PVec> > >" , 99 , -1 };
G__linked_taginfo G__main92DctLN_Pythia8cLcLAlphaStrong = { "Pythia8::AlphaStrong" , 99 , -1 };
G__linked_taginfo G__main92DctLN_Pythia8cLcLAlphaEM = { "Pythia8::AlphaEM" , 99 , -1 };
G__linked_taginfo G__main92DctLN_Pythia8cLcLCoupSM = { "Pythia8::CoupSM" , 99 , -1 };
G__linked_taginfo G__main92DctLN_Pythia8cLcLCouplings = { "Pythia8::Couplings" , 99 , -1 };
G__linked_taginfo G__main92DctLN_Pythia8cLcLParticleData = { "Pythia8::ParticleData" , 99 , -1 };
G__linked_taginfo G__main92DctLN_Pythia8cLcLResonanceWidths = { "Pythia8::ResonanceWidths" , 99 , -1 };
G__linked_taginfo G__main92DctLN_Pythia8cLcLDecayChannel = { "Pythia8::DecayChannel" , 99 , -1 };
G__linked_taginfo G__main92DctLN_Pythia8cLcLParticleDataEntry = { "Pythia8::ParticleDataEntry" , 99 , -1 };
G__linked_taginfo G__main92DctLN_vectorlEPythia8cLcLDecayChannelcOallocatorlEPythia8cLcLDecayChannelgRsPgR = { "vector<Pythia8::DecayChannel,allocator<Pythia8::DecayChannel> >" , 99 , -1 };
G__linked_taginfo G__main92DctLN_reverse_iteratorlEvectorlEPythia8cLcLDecayChannelcOallocatorlEPythia8cLcLDecayChannelgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<Pythia8::DecayChannel,allocator<Pythia8::DecayChannel> >::iterator>" , 99 , -1 };
G__linked_taginfo G__main92DctLN_vectorlEPythia8cLcLResonanceWidthsmUcOallocatorlEPythia8cLcLResonanceWidthsmUgRsPgR = { "vector<Pythia8::ResonanceWidths*,allocator<Pythia8::ResonanceWidths*> >" , 99 , -1 };
G__linked_taginfo G__main92DctLN_reverse_iteratorlEvectorlEPythia8cLcLResonanceWidthsmUcOallocatorlEPythia8cLcLResonanceWidthsmUgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<Pythia8::ResonanceWidths*,allocator<Pythia8::ResonanceWidths*> >::iterator>" , 99 , -1 };
G__linked_taginfo G__main92DctLN_maplEintcOPythia8cLcLParticleDataEntrycOlesslEintgRcOallocatorlEpairlEconstsPintcOPythia8cLcLParticleDataEntrygRsPgRsPgR = { "map<int,Pythia8::ParticleDataEntry,less<int>,allocator<pair<const int,Pythia8::ParticleDataEntry> > >" , 99 , -1 };
G__linked_taginfo G__main92DctLN_pairlEintcOPythia8cLcLParticleDataEntrygR = { "pair<int,Pythia8::ParticleDataEntry>" , 115 , -1 };
G__linked_taginfo G__main92DctLN_Pythia8cLcLEvent = { "Pythia8::Event" , 99 , -1 };
G__linked_taginfo G__main92DctLN_Pythia8cLcLParticle = { "Pythia8::Particle" , 99 , -1 };
G__linked_taginfo G__main92DctLN_Pythia8cLcLJunction = { "Pythia8::Junction" , 99 , -1 };
G__linked_taginfo G__main92DctLN_vectorlEPythia8cLcLParticlecOallocatorlEPythia8cLcLParticlegRsPgR = { "vector<Pythia8::Particle,allocator<Pythia8::Particle> >" , 99 , -1 };
G__linked_taginfo G__main92DctLN_reverse_iteratorlEvectorlEPythia8cLcLParticlecOallocatorlEPythia8cLcLParticlegRsPgRcLcLiteratorgR = { "reverse_iterator<vector<Pythia8::Particle,allocator<Pythia8::Particle> >::iterator>" , 99 , -1 };
G__linked_taginfo G__main92DctLN_vectorlEPythia8cLcLJunctioncOallocatorlEPythia8cLcLJunctiongRsPgR = { "vector<Pythia8::Junction,allocator<Pythia8::Junction> >" , 99 , -1 };
G__linked_taginfo G__main92DctLN_reverse_iteratorlEvectorlEPythia8cLcLJunctioncOallocatorlEPythia8cLcLJunctiongRsPgRcLcLiteratorgR = { "reverse_iterator<vector<Pythia8::Junction,allocator<Pythia8::Junction> >::iterator>" , 99 , -1 };
G__linked_taginfo G__main92DctLN_Pythia8cLcLSingleClusterJet = { "Pythia8::SingleClusterJet" , 99 , -1 };
G__linked_taginfo G__main92DctLN_vectorlEPythia8cLcLSingleClusterJetcOallocatorlEPythia8cLcLSingleClusterJetgRsPgR = { "vector<Pythia8::SingleClusterJet,allocator<Pythia8::SingleClusterJet> >" , 99 , -1 };
G__linked_taginfo G__main92DctLN_reverse_iteratorlEvectorlEPythia8cLcLSingleClusterJetcOallocatorlEPythia8cLcLSingleClusterJetgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<Pythia8::SingleClusterJet,allocator<Pythia8::SingleClusterJet> >::iterator>" , 99 , -1 };
G__linked_taginfo G__main92DctLN_vectorlEPythia8cLcLSingleCellJetcOallocatorlEPythia8cLcLSingleCellJetgRsPgR = { "vector<Pythia8::SingleCellJet,allocator<Pythia8::SingleCellJet> >" , 99 , -1 };
G__linked_taginfo G__main92DctLN_reverse_iteratorlEvectorlEPythia8cLcLSingleCellJetcOallocatorlEPythia8cLcLSingleCellJetgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<Pythia8::SingleCellJet,allocator<Pythia8::SingleCellJet> >::iterator>" , 99 , -1 };
G__linked_taginfo G__main92DctLN_vectorlEPythia8cLcLSingleSlowJetcOallocatorlEPythia8cLcLSingleSlowJetgRsPgR = { "vector<Pythia8::SingleSlowJet,allocator<Pythia8::SingleSlowJet> >" , 99 , -1 };
G__linked_taginfo G__main92DctLN_reverse_iteratorlEvectorlEPythia8cLcLSingleSlowJetcOallocatorlEPythia8cLcLSingleSlowJetgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<Pythia8::SingleSlowJet,allocator<Pythia8::SingleSlowJet> >::iterator>" , 99 , -1 };
G__linked_taginfo G__main92DctLN_Pythia8cLcLPDF = { "Pythia8::PDF" , 99 , -1 };
G__linked_taginfo G__main92DctLN_Pythia8cLcLBeamParticle = { "Pythia8::BeamParticle" , 99 , -1 };
G__linked_taginfo G__main92DctLN_vectorlEPythia8cLcLResolvedPartoncOallocatorlEPythia8cLcLResolvedPartongRsPgR = { "vector<Pythia8::ResolvedParton,allocator<Pythia8::ResolvedParton> >" , 99 , -1 };
G__linked_taginfo G__main92DctLN_reverse_iteratorlEvectorlEPythia8cLcLResolvedPartoncOallocatorlEPythia8cLcLResolvedPartongRsPgRcLcLiteratorgR = { "reverse_iterator<vector<Pythia8::ResolvedParton,allocator<Pythia8::ResolvedParton> >::iterator>" , 99 , -1 };
G__linked_taginfo G__main92DctLN_Pythia8cLcLBeamShape = { "Pythia8::BeamShape" , 99 , -1 };
G__linked_taginfo G__main92DctLN_vectorlEPythia8cLcLBoseEinsteinHadroncOallocatorlEPythia8cLcLBoseEinsteinHadrongRsPgR = { "vector<Pythia8::BoseEinsteinHadron,allocator<Pythia8::BoseEinsteinHadron> >" , 99 , -1 };
G__linked_taginfo G__main92DctLN_reverse_iteratorlEvectorlEPythia8cLcLBoseEinsteinHadroncOallocatorlEPythia8cLcLBoseEinsteinHadrongRsPgRcLcLiteratorgR = { "reverse_iterator<vector<Pythia8::BoseEinsteinHadron,allocator<Pythia8::BoseEinsteinHadron> >::iterator>" , 99 , -1 };
G__linked_taginfo G__main92DctLN_vectorlEvectorlEintcOallocatorlEintgRsPgRcOallocatorlEvectorlEintcOallocatorlEintgRsPgRsPgRsPgR = { "vector<vector<int,allocator<int> >,allocator<vector<int,allocator<int> > > >" , 99 , -1 };
G__linked_taginfo G__main92DctLN_reverse_iteratorlEvectorlEvectorlEintcOallocatorlEintgRsPgRcOallocatorlEvectorlEintcOallocatorlEintgRsPgRsPgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<vector<int,allocator<int> >,allocator<vector<int,allocator<int> > > >::iterator>" , 99 , -1 };
G__linked_taginfo G__main92DctLN_vectorlEPythia8cLcLColSingletcOallocatorlEPythia8cLcLColSingletgRsPgR = { "vector<Pythia8::ColSinglet,allocator<Pythia8::ColSinglet> >" , 99 , -1 };
G__linked_taginfo G__main92DctLN_reverse_iteratorlEvectorlEPythia8cLcLColSingletcOallocatorlEPythia8cLcLColSingletgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<Pythia8::ColSinglet,allocator<Pythia8::ColSinglet> >::iterator>" , 99 , -1 };
G__linked_taginfo G__main92DctLN_vectorlEPythia8cLcLStringRegioncOallocatorlEPythia8cLcLStringRegiongRsPgR = { "vector<Pythia8::StringRegion,allocator<Pythia8::StringRegion> >" , 99 , -1 };
G__linked_taginfo G__main92DctLN_reverse_iteratorlEvectorlEPythia8cLcLStringRegioncOallocatorlEPythia8cLcLStringRegiongRsPgRcLcLiteratorgR = { "reverse_iterator<vector<Pythia8::StringRegion,allocator<Pythia8::StringRegion> >::iterator>" , 99 , -1 };
G__linked_taginfo G__main92DctLN_complexlEdoublegR = { "complex<double>" , 99 , -1 };
G__linked_taginfo G__main92DctLN_maplEintcOpairlEintcOintgRcOlesslEintgRcOallocatorlEpairlEconstsPintcOpairlEintcOintgRsPgRsPgRsPgR = { "map<int,pair<int,int>,less<int>,allocator<pair<const int,pair<int,int> > > >" , 99 , -1 };
G__linked_taginfo G__main92DctLN_maplEpairlEintcOintgRcOintcOlesslEpairlEintcOintgRsPgRcOallocatorlEpairlEconstsPpairlEintcOintgRcOintgRsPgRsPgR = { "map<pair<int,int>,int,less<pair<int,int> >,allocator<pair<const pair<int,int>,int> > >" , 99 , -1 };
G__linked_taginfo G__main92DctLN_maplEintcOmaplEintcOdoublecOlesslEintgRcOallocatorlEpairlEconstsPintcOdoublegRsPgRsPgRcOlesslEintgRcOallocatorlEpairlEconstsPintcOmaplEintcOdoublecOlesslEintgRcOallocatorlEpairlEconstsPintcOdoublegRsPgRsPgRsPgRsPgRsPgR = { "map<int,map<int,double,less<int>,allocator<pair<const int,double> > >,less<int>,allocator<pair<const int,map<int,double,less<int>,allocator<pair<const int,double> > > > > >" , 99 , -1 };
G__linked_taginfo G__main92DctLN_maplEdoublecOcomplexlEdoublegRcOlesslEdoublegRcOallocatorlEpairlEconstsPdoublecOcomplexlEdoublegRsPgRsPgRsPgR = { "map<double,complex<double>,less<double>,allocator<pair<const double,complex<double> > > >" , 99 , -1 };
G__linked_taginfo G__main92DctLN_maplEintcOmaplEdoublecOcomplexlEdoublegRcOlesslEdoublegRcOallocatorlEpairlEconstsPdoublecOcomplexlEdoublegRsPgRsPgRsPgRcOlesslEintgRcOallocatorlEpairlEconstsPintcOmaplEdoublecOcomplexlEdoublegRcOlesslEdoublegRcOallocatorlEpairlEconstsPdoublecOcomplexlEdoublegRsPgRsPgRsPgRsPgRsPgRsPgR = { "map<int,map<double,complex<double>,less<double>,allocator<pair<const double,complex<double> > > >,less<int>,allocator<pair<const int,map<double,complex<double>,less<double>,allocator<pair<const double,complex<double> > > > > > >" , 99 , -1 };
G__linked_taginfo G__main92DctLN_vectorlEvectorlEvectorlEdoublecOallocatorlEdoublegRsPgRcOallocatorlEvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgRcOallocatorlEvectorlEvectorlEdoublecOallocatorlEdoublegRsPgRcOallocatorlEvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgRsPgRsPgR = { "vector<vector<vector<double,allocator<double> >,allocator<vector<double,allocator<double> > > >,allocator<vector<vector<double,allocator<double> >,allocator<vector<double,allocator<double> > > > > >" , 99 , -1 };
G__linked_taginfo G__main92DctLN_reverse_iteratorlEvectorlEvectorlEvectorlEdoublecOallocatorlEdoublegRsPgRcOallocatorlEvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgRcOallocatorlEvectorlEvectorlEdoublecOallocatorlEdoublegRsPgRcOallocatorlEvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgRsPgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<vector<vector<double,allocator<double> >,allocator<vector<double,allocator<double> > > >,allocator<vector<vector<double,allocator<double> >,allocator<vector<double,allocator<double> > > > > >::iterator>" , 99 , -1 };
G__linked_taginfo G__main92DctLN_vectorlEsetlEpairlEintcOintgRcOlesslEpairlEintcOintgRsPgRcOallocatorlEpairlEintcOintgRsPgRsPgRcOallocatorlEsetlEpairlEintcOintgRcOlesslEpairlEintcOintgRsPgRcOallocatorlEpairlEintcOintgRsPgRsPgRsPgRsPgR = { "vector<set<pair<int,int>,less<pair<int,int> >,allocator<pair<int,int> > >,allocator<set<pair<int,int>,less<pair<int,int> >,allocator<pair<int,int> > > > >" , 99 , -1 };
G__linked_taginfo G__main92DctLN_reverse_iteratorlEvectorlEsetlEpairlEintcOintgRcOlesslEpairlEintcOintgRsPgRcOallocatorlEpairlEintcOintgRsPgRsPgRcOallocatorlEsetlEpairlEintcOintgRcOlesslEpairlEintcOintgRsPgRcOallocatorlEpairlEintcOintgRsPgRsPgRsPgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<set<pair<int,int>,less<pair<int,int> >,allocator<pair<int,int> > >,allocator<set<pair<int,int>,less<pair<int,int> >,allocator<pair<int,int> > > > >::iterator>" , 99 , -1 };
G__linked_taginfo G__main92DctLN_vectorlEvectorlEsetlEpairlEintcOintgRcOlesslEpairlEintcOintgRsPgRcOallocatorlEpairlEintcOintgRsPgRsPgRcOallocatorlEsetlEpairlEintcOintgRcOlesslEpairlEintcOintgRsPgRcOallocatorlEpairlEintcOintgRsPgRsPgRsPgRsPgRcOallocatorlEvectorlEsetlEpairlEintcOintgRcOlesslEpairlEintcOintgRsPgRcOallocatorlEpairlEintcOintgRsPgRsPgRcOallocatorlEsetlEpairlEintcOintgRcOlesslEpairlEintcOintgRsPgRcOallocatorlEpairlEintcOintgRsPgRsPgRsPgRsPgRsPgRsPgR = { "vector<vector<set<pair<int,int>,less<pair<int,int> >,allocator<pair<int,int> > >,allocator<set<pair<int,int>,less<pair<int,int> >,allocator<pair<int,int> > > > >,allocator<vector<set<pair<int,int>,less<pair<int,int> >,allocator<pair<int,int> > >,allocator<set<pair<int,int>,less<pair<int,int> >,allocator<pair<int,int> > > > > > >" , 99 , -1 };
G__linked_taginfo G__main92DctLN_reverse_iteratorlEvectorlEvectorlEsetlEpairlEintcOintgRcOlesslEpairlEintcOintgRsPgRcOallocatorlEpairlEintcOintgRsPgRsPgRcOallocatorlEsetlEpairlEintcOintgRcOlesslEpairlEintcOintgRsPgRcOallocatorlEpairlEintcOintgRsPgRsPgRsPgRsPgRcOallocatorlEvectorlEsetlEpairlEintcOintgRcOlesslEpairlEintcOintgRsPgRcOallocatorlEpairlEintcOintgRsPgRsPgRcOallocatorlEsetlEpairlEintcOintgRcOlesslEpairlEintcOintgRsPgRcOallocatorlEpairlEintcOintgRsPgRsPgRsPgRsPgRsPgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<vector<set<pair<int,int>,less<pair<int,int> >,allocator<pair<int,int> > >,allocator<set<pair<int,int>,less<pair<int,int> >,allocator<pair<int,int> > > > >,allocator<vector<set<pair<int,int>,less<pair<int,int> >,allocator<pair<int,int> > >,allocator<set<pair<int,int>,less<pair<int,int> >,allocator<pair<int,int> > > > > > >::iterator>" , 99 , -1 };
G__linked_taginfo G__main92DctLN_vectorlEPythia8cLcLHadronScatterPaircOallocatorlEPythia8cLcLHadronScatterPairgRsPgR = { "vector<Pythia8::HadronScatterPair,allocator<Pythia8::HadronScatterPair> >" , 99 , -1 };
G__linked_taginfo G__main92DctLN_reverse_iteratorlEvectorlEPythia8cLcLHadronScatterPaircOallocatorlEPythia8cLcLHadronScatterPairgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<Pythia8::HadronScatterPair,allocator<Pythia8::HadronScatterPair> >::iterator>" , 99 , -1 };
G__linked_taginfo G__main92DctLN_Pythia8cLcLPartonSystems = { "Pythia8::PartonSystems" , 99 , -1 };
G__linked_taginfo G__main92DctLN_vectorlEPythia8cLcLPartonSystemcOallocatorlEPythia8cLcLPartonSystemgRsPgR = { "vector<Pythia8::PartonSystem,allocator<Pythia8::PartonSystem> >" , 99 , -1 };
G__linked_taginfo G__main92DctLN_reverse_iteratorlEvectorlEPythia8cLcLPartonSystemcOallocatorlEPythia8cLcLPartonSystemgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<Pythia8::PartonSystem,allocator<Pythia8::PartonSystem> >::iterator>" , 99 , -1 };
G__linked_taginfo G__main92DctLN_Pythia8cLcLLHAup = { "Pythia8::LHAup" , 99 , -1 };
G__linked_taginfo G__main92DctLN_vectorlEPythia8cLcLLHAParticlecOallocatorlEPythia8cLcLLHAParticlegRsPgR = { "vector<Pythia8::LHAParticle,allocator<Pythia8::LHAParticle> >" , 99 , -1 };
G__linked_taginfo G__main92DctLN_reverse_iteratorlEvectorlEPythia8cLcLLHAParticlecOallocatorlEPythia8cLcLLHAParticlegRsPgRcLcLiteratorgR = { "reverse_iterator<vector<Pythia8::LHAParticle,allocator<Pythia8::LHAParticle> >::iterator>" , 99 , -1 };
G__linked_taginfo G__main92DctLN_vectorlEPythia8cLcLLHAProcesscOallocatorlEPythia8cLcLLHAProcessgRsPgR = { "vector<Pythia8::LHAProcess,allocator<Pythia8::LHAProcess> >" , 99 , -1 };
G__linked_taginfo G__main92DctLN_reverse_iteratorlEvectorlEPythia8cLcLLHAProcesscOallocatorlEPythia8cLcLLHAProcessgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<Pythia8::LHAProcess,allocator<Pythia8::LHAProcess> >::iterator>" , 99 , -1 };
G__linked_taginfo G__main92DctLN_Pythia8cLcLResonanceGeneric = { "Pythia8::ResonanceGeneric" , 99 , -1 };
G__linked_taginfo G__main92DctLN_Pythia8cLcLResonanceGmZ = { "Pythia8::ResonanceGmZ" , 99 , -1 };
G__linked_taginfo G__main92DctLN_Pythia8cLcLResonanceW = { "Pythia8::ResonanceW" , 99 , -1 };
G__linked_taginfo G__main92DctLN_Pythia8cLcLResonanceTop = { "Pythia8::ResonanceTop" , 99 , -1 };
G__linked_taginfo G__main92DctLN_Pythia8cLcLResonanceFour = { "Pythia8::ResonanceFour" , 99 , -1 };
G__linked_taginfo G__main92DctLN_Pythia8cLcLResonanceH = { "Pythia8::ResonanceH" , 99 , -1 };
G__linked_taginfo G__main92DctLN_Pythia8cLcLResonanceHchg = { "Pythia8::ResonanceHchg" , 99 , -1 };
G__linked_taginfo G__main92DctLN_Pythia8cLcLResonanceZprime = { "Pythia8::ResonanceZprime" , 99 , -1 };
G__linked_taginfo G__main92DctLN_Pythia8cLcLResonanceWprime = { "Pythia8::ResonanceWprime" , 99 , -1 };
G__linked_taginfo G__main92DctLN_Pythia8cLcLResonanceRhorizontal = { "Pythia8::ResonanceRhorizontal" , 99 , -1 };
G__linked_taginfo G__main92DctLN_Pythia8cLcLResonanceExcited = { "Pythia8::ResonanceExcited" , 99 , -1 };
G__linked_taginfo G__main92DctLN_Pythia8cLcLResonanceGraviton = { "Pythia8::ResonanceGraviton" , 99 , -1 };
G__linked_taginfo G__main92DctLN_Pythia8cLcLResonanceLeptoquark = { "Pythia8::ResonanceLeptoquark" , 99 , -1 };
G__linked_taginfo G__main92DctLN_Pythia8cLcLResonanceNuRight = { "Pythia8::ResonanceNuRight" , 99 , -1 };
G__linked_taginfo G__main92DctLN_Pythia8cLcLResonanceZRight = { "Pythia8::ResonanceZRight" , 99 , -1 };
G__linked_taginfo G__main92DctLN_Pythia8cLcLResonanceWRight = { "Pythia8::ResonanceWRight" , 99 , -1 };
G__linked_taginfo G__main92DctLN_Pythia8cLcLResonanceHchgchgLeft = { "Pythia8::ResonanceHchgchgLeft" , 99 , -1 };
G__linked_taginfo G__main92DctLN_Pythia8cLcLResonanceHchgchgRight = { "Pythia8::ResonanceHchgchgRight" , 99 , -1 };
G__linked_taginfo G__main92DctLN_Pythia8cLcLSigmaTotal = { "Pythia8::SigmaTotal" , 99 , -1 };
G__linked_taginfo G__main92DctLN_vectorlEPythia8cLcLLHdecayChannelcOallocatorlEPythia8cLcLLHdecayChannelgRsPgR = { "vector<Pythia8::LHdecayChannel,allocator<Pythia8::LHdecayChannel> >" , 99 , -1 };
G__linked_taginfo G__main92DctLN_reverse_iteratorlEvectorlEPythia8cLcLLHdecayChannelcOallocatorlEPythia8cLcLLHdecayChannelgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<Pythia8::LHdecayChannel,allocator<Pythia8::LHdecayChannel> >::iterator>" , 99 , -1 };
G__linked_taginfo G__main92DctLN_Pythia8cLcLSusyLesHouches = { "Pythia8::SusyLesHouches" , 99 , -1 };
G__linked_taginfo G__main92DctLN_vectorlEPythia8cLcLLHdecayTablecOallocatorlEPythia8cLcLLHdecayTablegRsPgR = { "vector<Pythia8::LHdecayTable,allocator<Pythia8::LHdecayTable> >" , 99 , -1 };
G__linked_taginfo G__main92DctLN_reverse_iteratorlEvectorlEPythia8cLcLLHdecayTablecOallocatorlEPythia8cLcLLHdecayTablegRsPgRcLcLiteratorgR = { "reverse_iterator<vector<Pythia8::LHdecayTable,allocator<Pythia8::LHdecayTable> >::iterator>" , 99 , -1 };
G__linked_taginfo G__main92DctLN_vectorlEPythia8cLcLLHblocklEintgRcOallocatorlEPythia8cLcLLHblocklEintgRsPgRsPgR = { "vector<Pythia8::LHblock<int>,allocator<Pythia8::LHblock<int> > >" , 99 , -1 };
G__linked_taginfo G__main92DctLN_reverse_iteratorlEvectorlEPythia8cLcLLHblocklEintgRcOallocatorlEPythia8cLcLLHblocklEintgRsPgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<Pythia8::LHblock<int>,allocator<Pythia8::LHblock<int> > >::iterator>" , 99 , -1 };
G__linked_taginfo G__main92DctLN_maplEstringcOPythia8cLcLLHgenericBlockcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOPythia8cLcLLHgenericBlockgRsPgRsPgR = { "map<string,Pythia8::LHgenericBlock,less<string>,allocator<pair<const string,Pythia8::LHgenericBlock> > >" , 99 , -1 };
G__linked_taginfo G__main92DctLN_Pythia8cLcLSLHAinterface = { "Pythia8::SLHAinterface" , 99 , -1 };
G__linked_taginfo G__main92DctLN_Pythia8cLcLInBeam = { "Pythia8::InBeam" , 99 , -1 };
G__linked_taginfo G__main92DctLN_Pythia8cLcLInPair = { "Pythia8::InPair" , 99 , -1 };
G__linked_taginfo G__main92DctLN_Pythia8cLcLSigmaProcess = { "Pythia8::SigmaProcess" , 99 , -1 };
G__linked_taginfo G__main92DctLN_vectorlEPythia8cLcLInBeamcOallocatorlEPythia8cLcLInBeamgRsPgR = { "vector<Pythia8::InBeam,allocator<Pythia8::InBeam> >" , 99 , -1 };
G__linked_taginfo G__main92DctLN_reverse_iteratorlEvectorlEPythia8cLcLInBeamcOallocatorlEPythia8cLcLInBeamgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<Pythia8::InBeam,allocator<Pythia8::InBeam> >::iterator>" , 99 , -1 };
G__linked_taginfo G__main92DctLN_vectorlEPythia8cLcLInPaircOallocatorlEPythia8cLcLInPairgRsPgR = { "vector<Pythia8::InPair,allocator<Pythia8::InPair> >" , 99 , -1 };
G__linked_taginfo G__main92DctLN_reverse_iteratorlEvectorlEPythia8cLcLInPaircOallocatorlEPythia8cLcLInPairgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<Pythia8::InPair,allocator<Pythia8::InPair> >::iterator>" , 99 , -1 };
G__linked_taginfo G__main92DctLN_Pythia8cLcLUserHooks = { "Pythia8::UserHooks" , 99 , -1 };
G__linked_taginfo G__main92DctLN_Pythia8cLcLMergingHooks = { "Pythia8::MergingHooks" , 99 , -1 };
G__linked_taginfo G__main92DctLN_Pythia8cLcLTimeShower = { "Pythia8::TimeShower" , 99 , -1 };
G__linked_taginfo G__main92DctLN_vectorlEPythia8cLcLTimeDipoleEndcOallocatorlEPythia8cLcLTimeDipoleEndgRsPgR = { "vector<Pythia8::TimeDipoleEnd,allocator<Pythia8::TimeDipoleEnd> >" , 99 , -1 };
G__linked_taginfo G__main92DctLN_reverse_iteratorlEvectorlEPythia8cLcLTimeDipoleEndcOallocatorlEPythia8cLcLTimeDipoleEndgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<Pythia8::TimeDipoleEnd,allocator<Pythia8::TimeDipoleEnd> >::iterator>" , 99 , -1 };
G__linked_taginfo G__main92DctLN_Pythia8cLcLWave4 = { "Pythia8::Wave4" , 99 , -1 };
G__linked_taginfo G__main92DctLN_Pythia8cLcLGammaMatrix = { "Pythia8::GammaMatrix" , 99 , -1 };
G__linked_taginfo G__main92DctLN_vectorlEcomplexlEdoublegRcOallocatorlEcomplexlEdoublegRsPgRsPgR = { "vector<complex<double>,allocator<complex<double> > >" , 99 , -1 };
G__linked_taginfo G__main92DctLN_reverse_iteratorlEvectorlEcomplexlEdoublegRcOallocatorlEcomplexlEdoublegRsPgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<complex<double>,allocator<complex<double> > >::iterator>" , 99 , -1 };
G__linked_taginfo G__main92DctLN_vectorlEvectorlEcomplexlEdoublegRcOallocatorlEcomplexlEdoublegRsPgRsPgRcOallocatorlEvectorlEcomplexlEdoublegRcOallocatorlEcomplexlEdoublegRsPgRsPgRsPgRsPgR = { "vector<vector<complex<double>,allocator<complex<double> > >,allocator<vector<complex<double>,allocator<complex<double> > > > >" , 99 , -1 };
G__linked_taginfo G__main92DctLN_reverse_iteratorlEvectorlEvectorlEcomplexlEdoublegRcOallocatorlEcomplexlEdoublegRsPgRsPgRcOallocatorlEvectorlEcomplexlEdoublegRcOallocatorlEcomplexlEdoublegRsPgRsPgRsPgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<vector<complex<double>,allocator<complex<double> > >,allocator<vector<complex<double>,allocator<complex<double> > > > >::iterator>" , 99 , -1 };
G__linked_taginfo G__main92DctLN_vectorlEPythia8cLcLHelicityParticlecOallocatorlEPythia8cLcLHelicityParticlegRsPgR = { "vector<Pythia8::HelicityParticle,allocator<Pythia8::HelicityParticle> >" , 99 , -1 };
G__linked_taginfo G__main92DctLN_reverse_iteratorlEvectorlEPythia8cLcLHelicityParticlecOallocatorlEPythia8cLcLHelicityParticlegRsPgRcLcLiteratorgR = { "reverse_iterator<vector<Pythia8::HelicityParticle,allocator<Pythia8::HelicityParticle> >::iterator>" , 99 , -1 };
G__linked_taginfo G__main92DctLN_vectorlEPythia8cLcLGammaMatrixcOallocatorlEPythia8cLcLGammaMatrixgRsPgR = { "vector<Pythia8::GammaMatrix,allocator<Pythia8::GammaMatrix> >" , 99 , -1 };
G__linked_taginfo G__main92DctLN_reverse_iteratorlEvectorlEPythia8cLcLGammaMatrixcOallocatorlEPythia8cLcLGammaMatrixgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<Pythia8::GammaMatrix,allocator<Pythia8::GammaMatrix> >::iterator>" , 99 , -1 };
G__linked_taginfo G__main92DctLN_vectorlEPythia8cLcLWave4cOallocatorlEPythia8cLcLWave4gRsPgR = { "vector<Pythia8::Wave4,allocator<Pythia8::Wave4> >" , 99 , -1 };
G__linked_taginfo G__main92DctLN_reverse_iteratorlEvectorlEPythia8cLcLWave4cOallocatorlEPythia8cLcLWave4gRsPgRcLcLiteratorgR = { "reverse_iterator<vector<Pythia8::Wave4,allocator<Pythia8::Wave4> >::iterator>" , 99 , -1 };
G__linked_taginfo G__main92DctLN_vectorlEvectorlEPythia8cLcLWave4cOallocatorlEPythia8cLcLWave4gRsPgRcOallocatorlEvectorlEPythia8cLcLWave4cOallocatorlEPythia8cLcLWave4gRsPgRsPgRsPgR = { "vector<vector<Pythia8::Wave4,allocator<Pythia8::Wave4> >,allocator<vector<Pythia8::Wave4,allocator<Pythia8::Wave4> > > >" , 99 , -1 };
G__linked_taginfo G__main92DctLN_reverse_iteratorlEvectorlEvectorlEPythia8cLcLWave4cOallocatorlEPythia8cLcLWave4gRsPgRcOallocatorlEvectorlEPythia8cLcLWave4cOallocatorlEPythia8cLcLWave4gRsPgRsPgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<vector<Pythia8::Wave4,allocator<Pythia8::Wave4> >,allocator<vector<Pythia8::Wave4,allocator<Pythia8::Wave4> > > >::iterator>" , 99 , -1 };
G__linked_taginfo G__main92DctLN_Pythia8cLcLDecayHandler = { "Pythia8::DecayHandler" , 99 , -1 };
G__linked_taginfo G__main92DctLN_vectorlEPythia8cLcLVec4cOallocatorlEPythia8cLcLVec4gRsPgR = { "vector<Pythia8::Vec4,allocator<Pythia8::Vec4> >" , 99 , -1 };
G__linked_taginfo G__main92DctLN_reverse_iteratorlEvectorlEPythia8cLcLVec4cOallocatorlEPythia8cLcLVec4gRsPgRcLcLiteratorgR = { "reverse_iterator<vector<Pythia8::Vec4,allocator<Pythia8::Vec4> >::iterator>" , 99 , -1 };
G__linked_taginfo G__main92DctLN_vectorlEPythia8cLcLFlavContainercOallocatorlEPythia8cLcLFlavContainergRsPgR = { "vector<Pythia8::FlavContainer,allocator<Pythia8::FlavContainer> >" , 99 , -1 };
G__linked_taginfo G__main92DctLN_reverse_iteratorlEvectorlEPythia8cLcLFlavContainercOallocatorlEPythia8cLcLFlavContainergRsPgRcLcLiteratorgR = { "reverse_iterator<vector<Pythia8::FlavContainer,allocator<Pythia8::FlavContainer> >::iterator>" , 99 , -1 };
G__linked_taginfo G__main92DctLN_Pythia8cLcLRHadrons = { "Pythia8::RHadrons" , 99 , -1 };
G__linked_taginfo G__main92DctLN_Pythia8cLcLHadronLevel = { "Pythia8::HadronLevel" , 99 , -1 };
G__linked_taginfo G__main92DctLN_vectorlEPythia8cLcLColourDipolemUcOallocatorlEPythia8cLcLColourDipolemUgRsPgR = { "vector<Pythia8::ColourDipole*,allocator<Pythia8::ColourDipole*> >" , 99 , -1 };
G__linked_taginfo G__main92DctLN_reverse_iteratorlEvectorlEPythia8cLcLColourDipolemUcOallocatorlEPythia8cLcLColourDipolemUgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<Pythia8::ColourDipole*,allocator<Pythia8::ColourDipole*> >::iterator>" , 99 , -1 };
G__linked_taginfo G__main92DctLN_vectorlEvectorlEPythia8cLcLColourDipolemUcOallocatorlEPythia8cLcLColourDipolemUgRsPgRcOallocatorlEvectorlEPythia8cLcLColourDipolemUcOallocatorlEPythia8cLcLColourDipolemUgRsPgRsPgRsPgR = { "vector<vector<Pythia8::ColourDipole*,allocator<Pythia8::ColourDipole*> >,allocator<vector<Pythia8::ColourDipole*,allocator<Pythia8::ColourDipole*> > > >" , 99 , -1 };
G__linked_taginfo G__main92DctLN_reverse_iteratorlEvectorlEvectorlEPythia8cLcLColourDipolemUcOallocatorlEPythia8cLcLColourDipolemUgRsPgRcOallocatorlEvectorlEPythia8cLcLColourDipolemUcOallocatorlEPythia8cLcLColourDipolemUgRsPgRsPgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<vector<Pythia8::ColourDipole*,allocator<Pythia8::ColourDipole*> >,allocator<vector<Pythia8::ColourDipole*,allocator<Pythia8::ColourDipole*> > > >::iterator>" , 99 , -1 };
G__linked_taginfo G__main92DctLN_vectorlEPythia8cLcLColourJunctioncOallocatorlEPythia8cLcLColourJunctiongRsPgR = { "vector<Pythia8::ColourJunction,allocator<Pythia8::ColourJunction> >" , 99 , -1 };
G__linked_taginfo G__main92DctLN_reverse_iteratorlEvectorlEPythia8cLcLColourJunctioncOallocatorlEPythia8cLcLColourJunctiongRsPgRcLcLiteratorgR = { "reverse_iterator<vector<Pythia8::ColourJunction,allocator<Pythia8::ColourJunction> >::iterator>" , 99 , -1 };
G__linked_taginfo G__main92DctLN_vectorlEPythia8cLcLColourParticlecOallocatorlEPythia8cLcLColourParticlegRsPgR = { "vector<Pythia8::ColourParticle,allocator<Pythia8::ColourParticle> >" , 99 , -1 };
G__linked_taginfo G__main92DctLN_reverse_iteratorlEvectorlEPythia8cLcLColourParticlecOallocatorlEPythia8cLcLColourParticlegRsPgRcLcLiteratorgR = { "reverse_iterator<vector<Pythia8::ColourParticle,allocator<Pythia8::ColourParticle> >::iterator>" , 99 , -1 };
G__linked_taginfo G__main92DctLN_vectorlEPythia8cLcLTrialReconnectioncOallocatorlEPythia8cLcLTrialReconnectiongRsPgR = { "vector<Pythia8::TrialReconnection,allocator<Pythia8::TrialReconnection> >" , 99 , -1 };
G__linked_taginfo G__main92DctLN_reverse_iteratorlEvectorlEPythia8cLcLTrialReconnectioncOallocatorlEPythia8cLcLTrialReconnectiongRsPgRcLcLiteratorgR = { "reverse_iterator<vector<Pythia8::TrialReconnection,allocator<Pythia8::TrialReconnection> >::iterator>" , 99 , -1 };
G__linked_taginfo G__main92DctLN_vectorlEPythia8cLcLSigmaProcessmUcOallocatorlEPythia8cLcLSigmaProcessmUgRsPgR = { "vector<Pythia8::SigmaProcess*,allocator<Pythia8::SigmaProcess*> >" , 99 , -1 };
G__linked_taginfo G__main92DctLN_reverse_iteratorlEvectorlEPythia8cLcLSigmaProcessmUcOallocatorlEPythia8cLcLSigmaProcessmUgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<Pythia8::SigmaProcess*,allocator<Pythia8::SigmaProcess*> >::iterator>" , 99 , -1 };
G__linked_taginfo G__main92DctLN_Pythia8cLcLSpaceShower = { "Pythia8::SpaceShower" , 99 , -1 };
G__linked_taginfo G__main92DctLN_vectorlEPythia8cLcLSpaceDipoleEndcOallocatorlEPythia8cLcLSpaceDipoleEndgRsPgR = { "vector<Pythia8::SpaceDipoleEnd,allocator<Pythia8::SpaceDipoleEnd> >" , 99 , -1 };
G__linked_taginfo G__main92DctLN_reverse_iteratorlEvectorlEPythia8cLcLSpaceDipoleEndcOallocatorlEPythia8cLcLSpaceDipoleEndgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<Pythia8::SpaceDipoleEnd,allocator<Pythia8::SpaceDipoleEnd> >::iterator>" , 99 , -1 };
G__linked_taginfo G__main92DctLN_Pythia8cLcLPartonLevel = { "Pythia8::PartonLevel" , 99 , -1 };
G__linked_taginfo G__main92DctLN_vectorlEPythia8cLcLClusteringcOallocatorlEPythia8cLcLClusteringgRsPgR = { "vector<Pythia8::Clustering,allocator<Pythia8::Clustering> >" , 99 , -1 };
G__linked_taginfo G__main92DctLN_reverse_iteratorlEvectorlEPythia8cLcLClusteringcOallocatorlEPythia8cLcLClusteringgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<Pythia8::Clustering,allocator<Pythia8::Clustering> >::iterator>" , 99 , -1 };
G__linked_taginfo G__main92DctLN_vectorlEPythia8cLcLHistorymUcOallocatorlEPythia8cLcLHistorymUgRsPgR = { "vector<Pythia8::History*,allocator<Pythia8::History*> >" , 99 , -1 };
G__linked_taginfo G__main92DctLN_reverse_iteratorlEvectorlEPythia8cLcLHistorymUcOallocatorlEPythia8cLcLHistorymUgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<Pythia8::History*,allocator<Pythia8::History*> >::iterator>" , 99 , -1 };
G__linked_taginfo G__main92DctLN_maplEdoublecOPythia8cLcLHistorymUcOlesslEdoublegRcOallocatorlEpairlEconstsPdoublecOPythia8cLcLHistorymUgRsPgRsPgR = { "map<double,Pythia8::History*,less<double>,allocator<pair<const double,Pythia8::History*> > >" , 99 , -1 };
G__linked_taginfo G__main92DctLN_vectorlEvectorlEboolcOallocatorlEboolgRsPgRcOallocatorlEvectorlEboolcOallocatorlEboolgRsPgRsPgRsPgR = { "vector<vector<bool,allocator<bool> >,allocator<vector<bool,allocator<bool> > > >" , 99 , -1 };
G__linked_taginfo G__main92DctLN_reverse_iteratorlEvectorlEvectorlEboolcOallocatorlEboolgRsPgRcOallocatorlEvectorlEboolcOallocatorlEboolgRsPgRsPgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<vector<bool,allocator<bool> >,allocator<vector<bool,allocator<bool> > > >::iterator>" , 99 , -1 };
G__linked_taginfo G__main92DctLN_vectorlEPythia8cLcLProcessContainermUcOallocatorlEPythia8cLcLProcessContainermUgRsPgR = { "vector<Pythia8::ProcessContainer*,allocator<Pythia8::ProcessContainer*> >" , 99 , -1 };
G__linked_taginfo G__main92DctLN_reverse_iteratorlEvectorlEPythia8cLcLProcessContainermUcOallocatorlEPythia8cLcLProcessContainermUgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<Pythia8::ProcessContainer*,allocator<Pythia8::ProcessContainer*> >::iterator>" , 99 , -1 };
G__linked_taginfo G__main92DctLN_Pythia8cLcLProcessLevel = { "Pythia8::ProcessLevel" , 99 , -1 };
G__linked_taginfo G__main92DctLN_Pythia8cLcLMerging = { "Pythia8::Merging" , 99 , -1 };
G__linked_taginfo G__main92DctLN_Pythia8cLcLPythia = { "Pythia8::Pythia" , 99 , -1 };
G__linked_taginfo G__main92DctLN_vectorlEPythia8cLcLResonanceWidthscOallocatorlEPythia8cLcLResonanceWidthsgRsPgR = { "vector<Pythia8::ResonanceWidths,allocator<Pythia8::ResonanceWidths> >" , 99 , -1 };
G__linked_taginfo G__main92DctLN_vectorlEPythia8cLcLResonanceWidthscOallocatorlEPythia8cLcLResonanceWidthsgRsPgRcLcLiterator = { "vector<Pythia8::ResonanceWidths,allocator<Pythia8::ResonanceWidths> >::iterator" , 99 , -1 };
G__linked_taginfo G__main92DctLN_reverse_iteratorlEvectorlEPythia8cLcLResonanceWidthscOallocatorlEPythia8cLcLResonanceWidthsgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<Pythia8::ResonanceWidths,allocator<Pythia8::ResonanceWidths> >::iterator>" , 99 , -1 };

/* Reset class/struct taginfo */
extern "C" void G__cpp_reset_tagtablemain92Dct() {
  G__main92DctLN_vectorlEdoublecOallocatorlEdoublegRsPgR.tagnum = -1 ;
  G__main92DctLN_vectorlEboolcOallocatorlEboolgRsPgR.tagnum = -1 ;
  G__main92DctLN_basic_istreamlEcharcOchar_traitslEchargRsPgR.tagnum = -1 ;
  G__main92DctLN_basic_ostreamlEcharcOchar_traitslEchargRsPgR.tagnum = -1 ;
  G__main92DctLN_string.tagnum = -1 ;
  G__main92DctLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR.tagnum = -1 ;
  G__main92DctLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__main92DctLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR.tagnum = -1 ;
  G__main92DctLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__main92DctLN_maplEstringcOintcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOintgRsPgRsPgR.tagnum = -1 ;
  G__main92DctLN_maplEstringcOdoublecOlesslEstringgRcOallocatorlEpairlEconstsPstringcOdoublegRsPgRsPgR.tagnum = -1 ;
  G__main92DctLN_pairlEintcOintgR.tagnum = -1 ;
  G__main92DctLN_pairlEdoublecOdoublegR.tagnum = -1 ;
  G__main92DctLN_Pythia8.tagnum = -1 ;
  G__main92DctLN_Pythia8cLcLRndmEngine.tagnum = -1 ;
  G__main92DctLN_Pythia8cLcLRndm.tagnum = -1 ;
  G__main92DctLN_Pythia8cLcLRotBstMatrix.tagnum = -1 ;
  G__main92DctLN_Pythia8cLcLVec4.tagnum = -1 ;
  G__main92DctLN_Pythia8cLcLHist.tagnum = -1 ;
  G__main92DctLN_maplEstringcOstringcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOstringgRsPgRsPgR.tagnum = -1 ;
  G__main92DctLN_vectorlEPythia8cLcLXMLTagmUcOallocatorlEPythia8cLcLXMLTagmUgRsPgR.tagnum = -1 ;
  G__main92DctLN_reverse_iteratorlEvectorlEPythia8cLcLXMLTagmUcOallocatorlEPythia8cLcLXMLTagmUgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__main92DctLN_Pythia8cLcLLHAweights.tagnum = -1 ;
  G__main92DctLN_Pythia8cLcLLHAscales.tagnum = -1 ;
  G__main92DctLN_maplEstringcOPythia8cLcLLHAweightcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOPythia8cLcLLHAweightgRsPgRsPgR.tagnum = -1 ;
  G__main92DctLN_Pythia8cLcLLHArwgt.tagnum = -1 ;
  G__main92DctLN_maplEstringcOPythia8cLcLLHAwgtcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOPythia8cLcLLHAwgtgRsPgRsPgR.tagnum = -1 ;
  G__main92DctLN_Pythia8cLcLLHAinitrwgt.tagnum = -1 ;
  G__main92DctLN_maplEstringcOPythia8cLcLLHAweightgroupcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOPythia8cLcLLHAweightgroupgRsPgRsPgR.tagnum = -1 ;
  G__main92DctLN_vectorlEintcOallocatorlEintgRsPgR.tagnum = -1 ;
  G__main92DctLN_reverse_iteratorlEvectorlEintcOallocatorlEintgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__main92DctLN_vectorlEPythia8cLcLLHAgeneratorcOallocatorlEPythia8cLcLLHAgeneratorgRsPgR.tagnum = -1 ;
  G__main92DctLN_reverse_iteratorlEvectorlEPythia8cLcLLHAgeneratorcOallocatorlEPythia8cLcLLHAgeneratorgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__main92DctLN_vectorlEpairlEintcOintgRcOallocatorlEpairlEintcOintgRsPgRsPgR.tagnum = -1 ;
  G__main92DctLN_reverse_iteratorlEvectorlEpairlEintcOintgRcOallocatorlEpairlEintcOintgRsPgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__main92DctLN_vectorlEvectorlEdoublecOallocatorlEdoublegRsPgRcOallocatorlEvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgR.tagnum = -1 ;
  G__main92DctLN_reverse_iteratorlEvectorlEvectorlEdoublecOallocatorlEdoublegRsPgRcOallocatorlEvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__main92DctLN_Pythia8cLcLInfo.tagnum = -1 ;
  G__main92DctLN_vectorlEstringcOallocatorlEstringgRsPgR.tagnum = -1 ;
  G__main92DctLN_reverse_iteratorlEvectorlEstringcOallocatorlEstringgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__main92DctLN_maplEintcOstringcOlesslEintgRcOallocatorlEpairlEconstsPintcOstringgRsPgRsPgR.tagnum = -1 ;
  G__main92DctLN_maplEintcOlongcOlesslEintgRcOallocatorlEpairlEconstsPintcOlonggRsPgRsPgR.tagnum = -1 ;
  G__main92DctLN_maplEintcOdoublecOlesslEintgRcOallocatorlEpairlEconstsPintcOdoublegRsPgRsPgR.tagnum = -1 ;
  G__main92DctLN_maplEstringcOpairlEvoidmUcOintgRcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOpairlEvoidmUcOintgRsPgRsPgRsPgR.tagnum = -1 ;
  G__main92DctLN_Pythia8cLcLSettings.tagnum = -1 ;
  G__main92DctLN_maplEstringcOPythia8cLcLFlagcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOPythia8cLcLFlaggRsPgRsPgR.tagnum = -1 ;
  G__main92DctLN_maplEstringcOPythia8cLcLModecOlesslEstringgRcOallocatorlEpairlEconstsPstringcOPythia8cLcLModegRsPgRsPgR.tagnum = -1 ;
  G__main92DctLN_maplEstringcOPythia8cLcLParmcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOPythia8cLcLParmgRsPgRsPgR.tagnum = -1 ;
  G__main92DctLN_maplEstringcOPythia8cLcLWordcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOPythia8cLcLWordgRsPgRsPgR.tagnum = -1 ;
  G__main92DctLN_maplEstringcOPythia8cLcLFVeccOlesslEstringgRcOallocatorlEpairlEconstsPstringcOPythia8cLcLFVecgRsPgRsPgR.tagnum = -1 ;
  G__main92DctLN_maplEstringcOPythia8cLcLMVeccOlesslEstringgRcOallocatorlEpairlEconstsPstringcOPythia8cLcLMVecgRsPgRsPgR.tagnum = -1 ;
  G__main92DctLN_maplEstringcOPythia8cLcLPVeccOlesslEstringgRcOallocatorlEpairlEconstsPstringcOPythia8cLcLPVecgRsPgRsPgR.tagnum = -1 ;
  G__main92DctLN_Pythia8cLcLAlphaStrong.tagnum = -1 ;
  G__main92DctLN_Pythia8cLcLAlphaEM.tagnum = -1 ;
  G__main92DctLN_Pythia8cLcLCoupSM.tagnum = -1 ;
  G__main92DctLN_Pythia8cLcLCouplings.tagnum = -1 ;
  G__main92DctLN_Pythia8cLcLParticleData.tagnum = -1 ;
  G__main92DctLN_Pythia8cLcLResonanceWidths.tagnum = -1 ;
  G__main92DctLN_Pythia8cLcLDecayChannel.tagnum = -1 ;
  G__main92DctLN_Pythia8cLcLParticleDataEntry.tagnum = -1 ;
  G__main92DctLN_vectorlEPythia8cLcLDecayChannelcOallocatorlEPythia8cLcLDecayChannelgRsPgR.tagnum = -1 ;
  G__main92DctLN_reverse_iteratorlEvectorlEPythia8cLcLDecayChannelcOallocatorlEPythia8cLcLDecayChannelgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__main92DctLN_vectorlEPythia8cLcLResonanceWidthsmUcOallocatorlEPythia8cLcLResonanceWidthsmUgRsPgR.tagnum = -1 ;
  G__main92DctLN_reverse_iteratorlEvectorlEPythia8cLcLResonanceWidthsmUcOallocatorlEPythia8cLcLResonanceWidthsmUgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__main92DctLN_maplEintcOPythia8cLcLParticleDataEntrycOlesslEintgRcOallocatorlEpairlEconstsPintcOPythia8cLcLParticleDataEntrygRsPgRsPgR.tagnum = -1 ;
  G__main92DctLN_pairlEintcOPythia8cLcLParticleDataEntrygR.tagnum = -1 ;
  G__main92DctLN_Pythia8cLcLEvent.tagnum = -1 ;
  G__main92DctLN_Pythia8cLcLParticle.tagnum = -1 ;
  G__main92DctLN_Pythia8cLcLJunction.tagnum = -1 ;
  G__main92DctLN_vectorlEPythia8cLcLParticlecOallocatorlEPythia8cLcLParticlegRsPgR.tagnum = -1 ;
  G__main92DctLN_reverse_iteratorlEvectorlEPythia8cLcLParticlecOallocatorlEPythia8cLcLParticlegRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__main92DctLN_vectorlEPythia8cLcLJunctioncOallocatorlEPythia8cLcLJunctiongRsPgR.tagnum = -1 ;
  G__main92DctLN_reverse_iteratorlEvectorlEPythia8cLcLJunctioncOallocatorlEPythia8cLcLJunctiongRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__main92DctLN_Pythia8cLcLSingleClusterJet.tagnum = -1 ;
  G__main92DctLN_vectorlEPythia8cLcLSingleClusterJetcOallocatorlEPythia8cLcLSingleClusterJetgRsPgR.tagnum = -1 ;
  G__main92DctLN_reverse_iteratorlEvectorlEPythia8cLcLSingleClusterJetcOallocatorlEPythia8cLcLSingleClusterJetgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__main92DctLN_vectorlEPythia8cLcLSingleCellJetcOallocatorlEPythia8cLcLSingleCellJetgRsPgR.tagnum = -1 ;
  G__main92DctLN_reverse_iteratorlEvectorlEPythia8cLcLSingleCellJetcOallocatorlEPythia8cLcLSingleCellJetgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__main92DctLN_vectorlEPythia8cLcLSingleSlowJetcOallocatorlEPythia8cLcLSingleSlowJetgRsPgR.tagnum = -1 ;
  G__main92DctLN_reverse_iteratorlEvectorlEPythia8cLcLSingleSlowJetcOallocatorlEPythia8cLcLSingleSlowJetgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__main92DctLN_Pythia8cLcLPDF.tagnum = -1 ;
  G__main92DctLN_Pythia8cLcLBeamParticle.tagnum = -1 ;
  G__main92DctLN_vectorlEPythia8cLcLResolvedPartoncOallocatorlEPythia8cLcLResolvedPartongRsPgR.tagnum = -1 ;
  G__main92DctLN_reverse_iteratorlEvectorlEPythia8cLcLResolvedPartoncOallocatorlEPythia8cLcLResolvedPartongRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__main92DctLN_Pythia8cLcLBeamShape.tagnum = -1 ;
  G__main92DctLN_vectorlEPythia8cLcLBoseEinsteinHadroncOallocatorlEPythia8cLcLBoseEinsteinHadrongRsPgR.tagnum = -1 ;
  G__main92DctLN_reverse_iteratorlEvectorlEPythia8cLcLBoseEinsteinHadroncOallocatorlEPythia8cLcLBoseEinsteinHadrongRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__main92DctLN_vectorlEvectorlEintcOallocatorlEintgRsPgRcOallocatorlEvectorlEintcOallocatorlEintgRsPgRsPgRsPgR.tagnum = -1 ;
  G__main92DctLN_reverse_iteratorlEvectorlEvectorlEintcOallocatorlEintgRsPgRcOallocatorlEvectorlEintcOallocatorlEintgRsPgRsPgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__main92DctLN_vectorlEPythia8cLcLColSingletcOallocatorlEPythia8cLcLColSingletgRsPgR.tagnum = -1 ;
  G__main92DctLN_reverse_iteratorlEvectorlEPythia8cLcLColSingletcOallocatorlEPythia8cLcLColSingletgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__main92DctLN_vectorlEPythia8cLcLStringRegioncOallocatorlEPythia8cLcLStringRegiongRsPgR.tagnum = -1 ;
  G__main92DctLN_reverse_iteratorlEvectorlEPythia8cLcLStringRegioncOallocatorlEPythia8cLcLStringRegiongRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__main92DctLN_complexlEdoublegR.tagnum = -1 ;
  G__main92DctLN_maplEintcOpairlEintcOintgRcOlesslEintgRcOallocatorlEpairlEconstsPintcOpairlEintcOintgRsPgRsPgRsPgR.tagnum = -1 ;
  G__main92DctLN_maplEpairlEintcOintgRcOintcOlesslEpairlEintcOintgRsPgRcOallocatorlEpairlEconstsPpairlEintcOintgRcOintgRsPgRsPgR.tagnum = -1 ;
  G__main92DctLN_maplEintcOmaplEintcOdoublecOlesslEintgRcOallocatorlEpairlEconstsPintcOdoublegRsPgRsPgRcOlesslEintgRcOallocatorlEpairlEconstsPintcOmaplEintcOdoublecOlesslEintgRcOallocatorlEpairlEconstsPintcOdoublegRsPgRsPgRsPgRsPgRsPgR.tagnum = -1 ;
  G__main92DctLN_maplEdoublecOcomplexlEdoublegRcOlesslEdoublegRcOallocatorlEpairlEconstsPdoublecOcomplexlEdoublegRsPgRsPgRsPgR.tagnum = -1 ;
  G__main92DctLN_maplEintcOmaplEdoublecOcomplexlEdoublegRcOlesslEdoublegRcOallocatorlEpairlEconstsPdoublecOcomplexlEdoublegRsPgRsPgRsPgRcOlesslEintgRcOallocatorlEpairlEconstsPintcOmaplEdoublecOcomplexlEdoublegRcOlesslEdoublegRcOallocatorlEpairlEconstsPdoublecOcomplexlEdoublegRsPgRsPgRsPgRsPgRsPgRsPgR.tagnum = -1 ;
  G__main92DctLN_vectorlEvectorlEvectorlEdoublecOallocatorlEdoublegRsPgRcOallocatorlEvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgRcOallocatorlEvectorlEvectorlEdoublecOallocatorlEdoublegRsPgRcOallocatorlEvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgRsPgRsPgR.tagnum = -1 ;
  G__main92DctLN_reverse_iteratorlEvectorlEvectorlEvectorlEdoublecOallocatorlEdoublegRsPgRcOallocatorlEvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgRcOallocatorlEvectorlEvectorlEdoublecOallocatorlEdoublegRsPgRcOallocatorlEvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgRsPgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__main92DctLN_vectorlEsetlEpairlEintcOintgRcOlesslEpairlEintcOintgRsPgRcOallocatorlEpairlEintcOintgRsPgRsPgRcOallocatorlEsetlEpairlEintcOintgRcOlesslEpairlEintcOintgRsPgRcOallocatorlEpairlEintcOintgRsPgRsPgRsPgRsPgR.tagnum = -1 ;
  G__main92DctLN_reverse_iteratorlEvectorlEsetlEpairlEintcOintgRcOlesslEpairlEintcOintgRsPgRcOallocatorlEpairlEintcOintgRsPgRsPgRcOallocatorlEsetlEpairlEintcOintgRcOlesslEpairlEintcOintgRsPgRcOallocatorlEpairlEintcOintgRsPgRsPgRsPgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__main92DctLN_vectorlEvectorlEsetlEpairlEintcOintgRcOlesslEpairlEintcOintgRsPgRcOallocatorlEpairlEintcOintgRsPgRsPgRcOallocatorlEsetlEpairlEintcOintgRcOlesslEpairlEintcOintgRsPgRcOallocatorlEpairlEintcOintgRsPgRsPgRsPgRsPgRcOallocatorlEvectorlEsetlEpairlEintcOintgRcOlesslEpairlEintcOintgRsPgRcOallocatorlEpairlEintcOintgRsPgRsPgRcOallocatorlEsetlEpairlEintcOintgRcOlesslEpairlEintcOintgRsPgRcOallocatorlEpairlEintcOintgRsPgRsPgRsPgRsPgRsPgRsPgR.tagnum = -1 ;
  G__main92DctLN_reverse_iteratorlEvectorlEvectorlEsetlEpairlEintcOintgRcOlesslEpairlEintcOintgRsPgRcOallocatorlEpairlEintcOintgRsPgRsPgRcOallocatorlEsetlEpairlEintcOintgRcOlesslEpairlEintcOintgRsPgRcOallocatorlEpairlEintcOintgRsPgRsPgRsPgRsPgRcOallocatorlEvectorlEsetlEpairlEintcOintgRcOlesslEpairlEintcOintgRsPgRcOallocatorlEpairlEintcOintgRsPgRsPgRcOallocatorlEsetlEpairlEintcOintgRcOlesslEpairlEintcOintgRsPgRcOallocatorlEpairlEintcOintgRsPgRsPgRsPgRsPgRsPgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__main92DctLN_vectorlEPythia8cLcLHadronScatterPaircOallocatorlEPythia8cLcLHadronScatterPairgRsPgR.tagnum = -1 ;
  G__main92DctLN_reverse_iteratorlEvectorlEPythia8cLcLHadronScatterPaircOallocatorlEPythia8cLcLHadronScatterPairgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__main92DctLN_Pythia8cLcLPartonSystems.tagnum = -1 ;
  G__main92DctLN_vectorlEPythia8cLcLPartonSystemcOallocatorlEPythia8cLcLPartonSystemgRsPgR.tagnum = -1 ;
  G__main92DctLN_reverse_iteratorlEvectorlEPythia8cLcLPartonSystemcOallocatorlEPythia8cLcLPartonSystemgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__main92DctLN_Pythia8cLcLLHAup.tagnum = -1 ;
  G__main92DctLN_vectorlEPythia8cLcLLHAParticlecOallocatorlEPythia8cLcLLHAParticlegRsPgR.tagnum = -1 ;
  G__main92DctLN_reverse_iteratorlEvectorlEPythia8cLcLLHAParticlecOallocatorlEPythia8cLcLLHAParticlegRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__main92DctLN_vectorlEPythia8cLcLLHAProcesscOallocatorlEPythia8cLcLLHAProcessgRsPgR.tagnum = -1 ;
  G__main92DctLN_reverse_iteratorlEvectorlEPythia8cLcLLHAProcesscOallocatorlEPythia8cLcLLHAProcessgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__main92DctLN_Pythia8cLcLResonanceGeneric.tagnum = -1 ;
  G__main92DctLN_Pythia8cLcLResonanceGmZ.tagnum = -1 ;
  G__main92DctLN_Pythia8cLcLResonanceW.tagnum = -1 ;
  G__main92DctLN_Pythia8cLcLResonanceTop.tagnum = -1 ;
  G__main92DctLN_Pythia8cLcLResonanceFour.tagnum = -1 ;
  G__main92DctLN_Pythia8cLcLResonanceH.tagnum = -1 ;
  G__main92DctLN_Pythia8cLcLResonanceHchg.tagnum = -1 ;
  G__main92DctLN_Pythia8cLcLResonanceZprime.tagnum = -1 ;
  G__main92DctLN_Pythia8cLcLResonanceWprime.tagnum = -1 ;
  G__main92DctLN_Pythia8cLcLResonanceRhorizontal.tagnum = -1 ;
  G__main92DctLN_Pythia8cLcLResonanceExcited.tagnum = -1 ;
  G__main92DctLN_Pythia8cLcLResonanceGraviton.tagnum = -1 ;
  G__main92DctLN_Pythia8cLcLResonanceLeptoquark.tagnum = -1 ;
  G__main92DctLN_Pythia8cLcLResonanceNuRight.tagnum = -1 ;
  G__main92DctLN_Pythia8cLcLResonanceZRight.tagnum = -1 ;
  G__main92DctLN_Pythia8cLcLResonanceWRight.tagnum = -1 ;
  G__main92DctLN_Pythia8cLcLResonanceHchgchgLeft.tagnum = -1 ;
  G__main92DctLN_Pythia8cLcLResonanceHchgchgRight.tagnum = -1 ;
  G__main92DctLN_Pythia8cLcLSigmaTotal.tagnum = -1 ;
  G__main92DctLN_vectorlEPythia8cLcLLHdecayChannelcOallocatorlEPythia8cLcLLHdecayChannelgRsPgR.tagnum = -1 ;
  G__main92DctLN_reverse_iteratorlEvectorlEPythia8cLcLLHdecayChannelcOallocatorlEPythia8cLcLLHdecayChannelgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__main92DctLN_Pythia8cLcLSusyLesHouches.tagnum = -1 ;
  G__main92DctLN_vectorlEPythia8cLcLLHdecayTablecOallocatorlEPythia8cLcLLHdecayTablegRsPgR.tagnum = -1 ;
  G__main92DctLN_reverse_iteratorlEvectorlEPythia8cLcLLHdecayTablecOallocatorlEPythia8cLcLLHdecayTablegRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__main92DctLN_vectorlEPythia8cLcLLHblocklEintgRcOallocatorlEPythia8cLcLLHblocklEintgRsPgRsPgR.tagnum = -1 ;
  G__main92DctLN_reverse_iteratorlEvectorlEPythia8cLcLLHblocklEintgRcOallocatorlEPythia8cLcLLHblocklEintgRsPgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__main92DctLN_maplEstringcOPythia8cLcLLHgenericBlockcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOPythia8cLcLLHgenericBlockgRsPgRsPgR.tagnum = -1 ;
  G__main92DctLN_Pythia8cLcLSLHAinterface.tagnum = -1 ;
  G__main92DctLN_Pythia8cLcLInBeam.tagnum = -1 ;
  G__main92DctLN_Pythia8cLcLInPair.tagnum = -1 ;
  G__main92DctLN_Pythia8cLcLSigmaProcess.tagnum = -1 ;
  G__main92DctLN_vectorlEPythia8cLcLInBeamcOallocatorlEPythia8cLcLInBeamgRsPgR.tagnum = -1 ;
  G__main92DctLN_reverse_iteratorlEvectorlEPythia8cLcLInBeamcOallocatorlEPythia8cLcLInBeamgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__main92DctLN_vectorlEPythia8cLcLInPaircOallocatorlEPythia8cLcLInPairgRsPgR.tagnum = -1 ;
  G__main92DctLN_reverse_iteratorlEvectorlEPythia8cLcLInPaircOallocatorlEPythia8cLcLInPairgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__main92DctLN_Pythia8cLcLUserHooks.tagnum = -1 ;
  G__main92DctLN_Pythia8cLcLMergingHooks.tagnum = -1 ;
  G__main92DctLN_Pythia8cLcLTimeShower.tagnum = -1 ;
  G__main92DctLN_vectorlEPythia8cLcLTimeDipoleEndcOallocatorlEPythia8cLcLTimeDipoleEndgRsPgR.tagnum = -1 ;
  G__main92DctLN_reverse_iteratorlEvectorlEPythia8cLcLTimeDipoleEndcOallocatorlEPythia8cLcLTimeDipoleEndgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__main92DctLN_Pythia8cLcLWave4.tagnum = -1 ;
  G__main92DctLN_Pythia8cLcLGammaMatrix.tagnum = -1 ;
  G__main92DctLN_vectorlEcomplexlEdoublegRcOallocatorlEcomplexlEdoublegRsPgRsPgR.tagnum = -1 ;
  G__main92DctLN_reverse_iteratorlEvectorlEcomplexlEdoublegRcOallocatorlEcomplexlEdoublegRsPgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__main92DctLN_vectorlEvectorlEcomplexlEdoublegRcOallocatorlEcomplexlEdoublegRsPgRsPgRcOallocatorlEvectorlEcomplexlEdoublegRcOallocatorlEcomplexlEdoublegRsPgRsPgRsPgRsPgR.tagnum = -1 ;
  G__main92DctLN_reverse_iteratorlEvectorlEvectorlEcomplexlEdoublegRcOallocatorlEcomplexlEdoublegRsPgRsPgRcOallocatorlEvectorlEcomplexlEdoublegRcOallocatorlEcomplexlEdoublegRsPgRsPgRsPgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__main92DctLN_vectorlEPythia8cLcLHelicityParticlecOallocatorlEPythia8cLcLHelicityParticlegRsPgR.tagnum = -1 ;
  G__main92DctLN_reverse_iteratorlEvectorlEPythia8cLcLHelicityParticlecOallocatorlEPythia8cLcLHelicityParticlegRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__main92DctLN_vectorlEPythia8cLcLGammaMatrixcOallocatorlEPythia8cLcLGammaMatrixgRsPgR.tagnum = -1 ;
  G__main92DctLN_reverse_iteratorlEvectorlEPythia8cLcLGammaMatrixcOallocatorlEPythia8cLcLGammaMatrixgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__main92DctLN_vectorlEPythia8cLcLWave4cOallocatorlEPythia8cLcLWave4gRsPgR.tagnum = -1 ;
  G__main92DctLN_reverse_iteratorlEvectorlEPythia8cLcLWave4cOallocatorlEPythia8cLcLWave4gRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__main92DctLN_vectorlEvectorlEPythia8cLcLWave4cOallocatorlEPythia8cLcLWave4gRsPgRcOallocatorlEvectorlEPythia8cLcLWave4cOallocatorlEPythia8cLcLWave4gRsPgRsPgRsPgR.tagnum = -1 ;
  G__main92DctLN_reverse_iteratorlEvectorlEvectorlEPythia8cLcLWave4cOallocatorlEPythia8cLcLWave4gRsPgRcOallocatorlEvectorlEPythia8cLcLWave4cOallocatorlEPythia8cLcLWave4gRsPgRsPgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__main92DctLN_Pythia8cLcLDecayHandler.tagnum = -1 ;
  G__main92DctLN_vectorlEPythia8cLcLVec4cOallocatorlEPythia8cLcLVec4gRsPgR.tagnum = -1 ;
  G__main92DctLN_reverse_iteratorlEvectorlEPythia8cLcLVec4cOallocatorlEPythia8cLcLVec4gRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__main92DctLN_vectorlEPythia8cLcLFlavContainercOallocatorlEPythia8cLcLFlavContainergRsPgR.tagnum = -1 ;
  G__main92DctLN_reverse_iteratorlEvectorlEPythia8cLcLFlavContainercOallocatorlEPythia8cLcLFlavContainergRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__main92DctLN_Pythia8cLcLRHadrons.tagnum = -1 ;
  G__main92DctLN_Pythia8cLcLHadronLevel.tagnum = -1 ;
  G__main92DctLN_vectorlEPythia8cLcLColourDipolemUcOallocatorlEPythia8cLcLColourDipolemUgRsPgR.tagnum = -1 ;
  G__main92DctLN_reverse_iteratorlEvectorlEPythia8cLcLColourDipolemUcOallocatorlEPythia8cLcLColourDipolemUgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__main92DctLN_vectorlEvectorlEPythia8cLcLColourDipolemUcOallocatorlEPythia8cLcLColourDipolemUgRsPgRcOallocatorlEvectorlEPythia8cLcLColourDipolemUcOallocatorlEPythia8cLcLColourDipolemUgRsPgRsPgRsPgR.tagnum = -1 ;
  G__main92DctLN_reverse_iteratorlEvectorlEvectorlEPythia8cLcLColourDipolemUcOallocatorlEPythia8cLcLColourDipolemUgRsPgRcOallocatorlEvectorlEPythia8cLcLColourDipolemUcOallocatorlEPythia8cLcLColourDipolemUgRsPgRsPgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__main92DctLN_vectorlEPythia8cLcLColourJunctioncOallocatorlEPythia8cLcLColourJunctiongRsPgR.tagnum = -1 ;
  G__main92DctLN_reverse_iteratorlEvectorlEPythia8cLcLColourJunctioncOallocatorlEPythia8cLcLColourJunctiongRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__main92DctLN_vectorlEPythia8cLcLColourParticlecOallocatorlEPythia8cLcLColourParticlegRsPgR.tagnum = -1 ;
  G__main92DctLN_reverse_iteratorlEvectorlEPythia8cLcLColourParticlecOallocatorlEPythia8cLcLColourParticlegRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__main92DctLN_vectorlEPythia8cLcLTrialReconnectioncOallocatorlEPythia8cLcLTrialReconnectiongRsPgR.tagnum = -1 ;
  G__main92DctLN_reverse_iteratorlEvectorlEPythia8cLcLTrialReconnectioncOallocatorlEPythia8cLcLTrialReconnectiongRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__main92DctLN_vectorlEPythia8cLcLSigmaProcessmUcOallocatorlEPythia8cLcLSigmaProcessmUgRsPgR.tagnum = -1 ;
  G__main92DctLN_reverse_iteratorlEvectorlEPythia8cLcLSigmaProcessmUcOallocatorlEPythia8cLcLSigmaProcessmUgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__main92DctLN_Pythia8cLcLSpaceShower.tagnum = -1 ;
  G__main92DctLN_vectorlEPythia8cLcLSpaceDipoleEndcOallocatorlEPythia8cLcLSpaceDipoleEndgRsPgR.tagnum = -1 ;
  G__main92DctLN_reverse_iteratorlEvectorlEPythia8cLcLSpaceDipoleEndcOallocatorlEPythia8cLcLSpaceDipoleEndgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__main92DctLN_Pythia8cLcLPartonLevel.tagnum = -1 ;
  G__main92DctLN_vectorlEPythia8cLcLClusteringcOallocatorlEPythia8cLcLClusteringgRsPgR.tagnum = -1 ;
  G__main92DctLN_reverse_iteratorlEvectorlEPythia8cLcLClusteringcOallocatorlEPythia8cLcLClusteringgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__main92DctLN_vectorlEPythia8cLcLHistorymUcOallocatorlEPythia8cLcLHistorymUgRsPgR.tagnum = -1 ;
  G__main92DctLN_reverse_iteratorlEvectorlEPythia8cLcLHistorymUcOallocatorlEPythia8cLcLHistorymUgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__main92DctLN_maplEdoublecOPythia8cLcLHistorymUcOlesslEdoublegRcOallocatorlEpairlEconstsPdoublecOPythia8cLcLHistorymUgRsPgRsPgR.tagnum = -1 ;
  G__main92DctLN_vectorlEvectorlEboolcOallocatorlEboolgRsPgRcOallocatorlEvectorlEboolcOallocatorlEboolgRsPgRsPgRsPgR.tagnum = -1 ;
  G__main92DctLN_reverse_iteratorlEvectorlEvectorlEboolcOallocatorlEboolgRsPgRcOallocatorlEvectorlEboolcOallocatorlEboolgRsPgRsPgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__main92DctLN_vectorlEPythia8cLcLProcessContainermUcOallocatorlEPythia8cLcLProcessContainermUgRsPgR.tagnum = -1 ;
  G__main92DctLN_reverse_iteratorlEvectorlEPythia8cLcLProcessContainermUcOallocatorlEPythia8cLcLProcessContainermUgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__main92DctLN_Pythia8cLcLProcessLevel.tagnum = -1 ;
  G__main92DctLN_Pythia8cLcLMerging.tagnum = -1 ;
  G__main92DctLN_Pythia8cLcLPythia.tagnum = -1 ;
  G__main92DctLN_vectorlEPythia8cLcLResonanceWidthscOallocatorlEPythia8cLcLResonanceWidthsgRsPgR.tagnum = -1 ;
  G__main92DctLN_vectorlEPythia8cLcLResonanceWidthscOallocatorlEPythia8cLcLResonanceWidthsgRsPgRcLcLiterator.tagnum = -1 ;
  G__main92DctLN_reverse_iteratorlEvectorlEPythia8cLcLResonanceWidthscOallocatorlEPythia8cLcLResonanceWidthsgRsPgRcLcLiteratorgR.tagnum = -1 ;
}


extern "C" void G__cpp_setup_tagtablemain92Dct() {

   /* Setting up class,struct,union tag entry */
   G__get_linked_tagnum_fwd(&G__main92DctLN_vectorlEdoublecOallocatorlEdoublegRsPgR);
   G__get_linked_tagnum_fwd(&G__main92DctLN_vectorlEboolcOallocatorlEboolgRsPgR);
   G__get_linked_tagnum_fwd(&G__main92DctLN_basic_istreamlEcharcOchar_traitslEchargRsPgR);
   G__get_linked_tagnum_fwd(&G__main92DctLN_basic_ostreamlEcharcOchar_traitslEchargRsPgR);
   G__get_linked_tagnum_fwd(&G__main92DctLN_string);
   G__get_linked_tagnum_fwd(&G__main92DctLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR);
   G__get_linked_tagnum_fwd(&G__main92DctLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__main92DctLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR);
   G__get_linked_tagnum_fwd(&G__main92DctLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__main92DctLN_maplEstringcOintcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOintgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__main92DctLN_maplEstringcOdoublecOlesslEstringgRcOallocatorlEpairlEconstsPstringcOdoublegRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__main92DctLN_pairlEintcOintgR);
   G__get_linked_tagnum_fwd(&G__main92DctLN_pairlEdoublecOdoublegR);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__main92DctLN_Pythia8),0,-1,0,(char*)NULL,G__setup_memvarPythia8,G__setup_memfuncPythia8);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__main92DctLN_Pythia8cLcLRndmEngine),sizeof(Pythia8::RndmEngine),-1,263169,(char*)NULL,G__setup_memvarPythia8cLcLRndmEngine,G__setup_memfuncPythia8cLcLRndmEngine);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__main92DctLN_Pythia8cLcLRndm),sizeof(Pythia8::Rndm),-1,295168,(char*)NULL,G__setup_memvarPythia8cLcLRndm,G__setup_memfuncPythia8cLcLRndm);
   G__get_linked_tagnum_fwd(&G__main92DctLN_Pythia8cLcLRotBstMatrix);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__main92DctLN_Pythia8cLcLVec4),sizeof(Pythia8::Vec4),-1,264960,(char*)NULL,G__setup_memvarPythia8cLcLVec4,G__setup_memfuncPythia8cLcLVec4);
   G__get_linked_tagnum_fwd(&G__main92DctLN_Pythia8cLcLHist);
   G__get_linked_tagnum_fwd(&G__main92DctLN_maplEstringcOstringcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOstringgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__main92DctLN_vectorlEPythia8cLcLXMLTagmUcOallocatorlEPythia8cLcLXMLTagmUgRsPgR);
   G__get_linked_tagnum_fwd(&G__main92DctLN_reverse_iteratorlEvectorlEPythia8cLcLXMLTagmUcOallocatorlEPythia8cLcLXMLTagmUgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__main92DctLN_Pythia8cLcLLHAweights);
   G__get_linked_tagnum_fwd(&G__main92DctLN_Pythia8cLcLLHAscales);
   G__get_linked_tagnum_fwd(&G__main92DctLN_maplEstringcOPythia8cLcLLHAweightcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOPythia8cLcLLHAweightgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__main92DctLN_Pythia8cLcLLHArwgt);
   G__get_linked_tagnum_fwd(&G__main92DctLN_maplEstringcOPythia8cLcLLHAwgtcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOPythia8cLcLLHAwgtgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__main92DctLN_Pythia8cLcLLHAinitrwgt);
   G__get_linked_tagnum_fwd(&G__main92DctLN_maplEstringcOPythia8cLcLLHAweightgroupcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOPythia8cLcLLHAweightgroupgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__main92DctLN_vectorlEintcOallocatorlEintgRsPgR);
   G__get_linked_tagnum_fwd(&G__main92DctLN_reverse_iteratorlEvectorlEintcOallocatorlEintgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__main92DctLN_vectorlEPythia8cLcLLHAgeneratorcOallocatorlEPythia8cLcLLHAgeneratorgRsPgR);
   G__get_linked_tagnum_fwd(&G__main92DctLN_reverse_iteratorlEvectorlEPythia8cLcLLHAgeneratorcOallocatorlEPythia8cLcLLHAgeneratorgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__main92DctLN_vectorlEpairlEintcOintgRcOallocatorlEpairlEintcOintgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__main92DctLN_reverse_iteratorlEvectorlEpairlEintcOintgRcOallocatorlEpairlEintcOintgRsPgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__main92DctLN_vectorlEvectorlEdoublecOallocatorlEdoublegRsPgRcOallocatorlEvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__main92DctLN_reverse_iteratorlEvectorlEvectorlEdoublecOallocatorlEdoublegRsPgRcOallocatorlEvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgRcLcLiteratorgR);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__main92DctLN_Pythia8cLcLInfo),sizeof(Pythia8::Info),-1,262400,(char*)NULL,G__setup_memvarPythia8cLcLInfo,G__setup_memfuncPythia8cLcLInfo);
   G__get_linked_tagnum_fwd(&G__main92DctLN_vectorlEstringcOallocatorlEstringgRsPgR);
   G__get_linked_tagnum_fwd(&G__main92DctLN_reverse_iteratorlEvectorlEstringcOallocatorlEstringgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__main92DctLN_maplEintcOstringcOlesslEintgRcOallocatorlEpairlEconstsPintcOstringgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__main92DctLN_maplEintcOlongcOlesslEintgRcOallocatorlEpairlEconstsPintcOlonggRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__main92DctLN_maplEintcOdoublecOlesslEintgRcOallocatorlEpairlEconstsPintcOdoublegRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__main92DctLN_maplEstringcOpairlEvoidmUcOintgRcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOpairlEvoidmUcOintgRsPgRsPgRsPgR);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__main92DctLN_Pythia8cLcLSettings),sizeof(Pythia8::Settings),-1,262400,(char*)NULL,G__setup_memvarPythia8cLcLSettings,G__setup_memfuncPythia8cLcLSettings);
   G__get_linked_tagnum_fwd(&G__main92DctLN_maplEstringcOPythia8cLcLFlagcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOPythia8cLcLFlaggRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__main92DctLN_maplEstringcOPythia8cLcLModecOlesslEstringgRcOallocatorlEpairlEconstsPstringcOPythia8cLcLModegRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__main92DctLN_maplEstringcOPythia8cLcLParmcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOPythia8cLcLParmgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__main92DctLN_maplEstringcOPythia8cLcLWordcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOPythia8cLcLWordgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__main92DctLN_maplEstringcOPythia8cLcLFVeccOlesslEstringgRcOallocatorlEpairlEconstsPstringcOPythia8cLcLFVecgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__main92DctLN_maplEstringcOPythia8cLcLMVeccOlesslEstringgRcOallocatorlEpairlEconstsPstringcOPythia8cLcLMVecgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__main92DctLN_maplEstringcOPythia8cLcLPVeccOlesslEstringgRcOallocatorlEpairlEconstsPstringcOPythia8cLcLPVecgRsPgRsPgR);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__main92DctLN_Pythia8cLcLAlphaStrong),sizeof(Pythia8::AlphaStrong),-1,296192,(char*)NULL,G__setup_memvarPythia8cLcLAlphaStrong,G__setup_memfuncPythia8cLcLAlphaStrong);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__main92DctLN_Pythia8cLcLAlphaEM),sizeof(Pythia8::AlphaEM),-1,262400,(char*)NULL,G__setup_memvarPythia8cLcLAlphaEM,G__setup_memfuncPythia8cLcLAlphaEM);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__main92DctLN_Pythia8cLcLCoupSM),sizeof(Pythia8::CoupSM),-1,262400,(char*)NULL,G__setup_memvarPythia8cLcLCoupSM,G__setup_memfuncPythia8cLcLCoupSM);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__main92DctLN_Pythia8cLcLCouplings),sizeof(Pythia8::Couplings),-1,262400,(char*)NULL,G__setup_memvarPythia8cLcLCouplings,G__setup_memfuncPythia8cLcLCouplings);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__main92DctLN_Pythia8cLcLParticleData),sizeof(Pythia8::ParticleData),-1,262400,(char*)NULL,G__setup_memvarPythia8cLcLParticleData,G__setup_memfuncPythia8cLcLParticleData);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__main92DctLN_Pythia8cLcLResonanceWidths),sizeof(Pythia8::ResonanceWidths),-1,263424,(char*)NULL,G__setup_memvarPythia8cLcLResonanceWidths,G__setup_memfuncPythia8cLcLResonanceWidths);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__main92DctLN_Pythia8cLcLDecayChannel),sizeof(Pythia8::DecayChannel),-1,262400,(char*)NULL,G__setup_memvarPythia8cLcLDecayChannel,G__setup_memfuncPythia8cLcLDecayChannel);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__main92DctLN_Pythia8cLcLParticleDataEntry),sizeof(Pythia8::ParticleDataEntry),-1,296192,(char*)NULL,G__setup_memvarPythia8cLcLParticleDataEntry,G__setup_memfuncPythia8cLcLParticleDataEntry);
   G__get_linked_tagnum_fwd(&G__main92DctLN_vectorlEPythia8cLcLDecayChannelcOallocatorlEPythia8cLcLDecayChannelgRsPgR);
   G__get_linked_tagnum_fwd(&G__main92DctLN_reverse_iteratorlEvectorlEPythia8cLcLDecayChannelcOallocatorlEPythia8cLcLDecayChannelgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__main92DctLN_vectorlEPythia8cLcLResonanceWidthsmUcOallocatorlEPythia8cLcLResonanceWidthsmUgRsPgR);
   G__get_linked_tagnum_fwd(&G__main92DctLN_reverse_iteratorlEvectorlEPythia8cLcLResonanceWidthsmUcOallocatorlEPythia8cLcLResonanceWidthsmUgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__main92DctLN_maplEintcOPythia8cLcLParticleDataEntrycOlesslEintgRcOallocatorlEpairlEconstsPintcOPythia8cLcLParticleDataEntrygRsPgRsPgR);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__main92DctLN_pairlEintcOPythia8cLcLParticleDataEntrygR),sizeof(pair<int,Pythia8::ParticleDataEntry>),-1,297216,(char*)NULL,G__setup_memvarpairlEintcOPythia8cLcLParticleDataEntrygR,G__setup_memfuncpairlEintcOPythia8cLcLParticleDataEntrygR);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__main92DctLN_Pythia8cLcLEvent),sizeof(Pythia8::Event),-1,264960,(char*)NULL,G__setup_memvarPythia8cLcLEvent,G__setup_memfuncPythia8cLcLEvent);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__main92DctLN_Pythia8cLcLParticle),sizeof(Pythia8::Particle),-1,297728,(char*)NULL,G__setup_memvarPythia8cLcLParticle,G__setup_memfuncPythia8cLcLParticle);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__main92DctLN_Pythia8cLcLJunction),sizeof(Pythia8::Junction),-1,297728,(char*)NULL,G__setup_memvarPythia8cLcLJunction,G__setup_memfuncPythia8cLcLJunction);
   G__get_linked_tagnum_fwd(&G__main92DctLN_vectorlEPythia8cLcLParticlecOallocatorlEPythia8cLcLParticlegRsPgR);
   G__get_linked_tagnum_fwd(&G__main92DctLN_reverse_iteratorlEvectorlEPythia8cLcLParticlecOallocatorlEPythia8cLcLParticlegRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__main92DctLN_vectorlEPythia8cLcLJunctioncOallocatorlEPythia8cLcLJunctiongRsPgR);
   G__get_linked_tagnum_fwd(&G__main92DctLN_reverse_iteratorlEvectorlEPythia8cLcLJunctioncOallocatorlEPythia8cLcLJunctiongRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__main92DctLN_Pythia8cLcLSingleClusterJet);
   G__get_linked_tagnum_fwd(&G__main92DctLN_vectorlEPythia8cLcLSingleClusterJetcOallocatorlEPythia8cLcLSingleClusterJetgRsPgR);
   G__get_linked_tagnum_fwd(&G__main92DctLN_reverse_iteratorlEvectorlEPythia8cLcLSingleClusterJetcOallocatorlEPythia8cLcLSingleClusterJetgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__main92DctLN_vectorlEPythia8cLcLSingleCellJetcOallocatorlEPythia8cLcLSingleCellJetgRsPgR);
   G__get_linked_tagnum_fwd(&G__main92DctLN_reverse_iteratorlEvectorlEPythia8cLcLSingleCellJetcOallocatorlEPythia8cLcLSingleCellJetgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__main92DctLN_vectorlEPythia8cLcLSingleSlowJetcOallocatorlEPythia8cLcLSingleSlowJetgRsPgR);
   G__get_linked_tagnum_fwd(&G__main92DctLN_reverse_iteratorlEvectorlEPythia8cLcLSingleSlowJetcOallocatorlEPythia8cLcLSingleSlowJetgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__main92DctLN_Pythia8cLcLPDF);
   G__get_linked_tagnum_fwd(&G__main92DctLN_Pythia8cLcLBeamParticle);
   G__get_linked_tagnum_fwd(&G__main92DctLN_vectorlEPythia8cLcLResolvedPartoncOallocatorlEPythia8cLcLResolvedPartongRsPgR);
   G__get_linked_tagnum_fwd(&G__main92DctLN_reverse_iteratorlEvectorlEPythia8cLcLResolvedPartoncOallocatorlEPythia8cLcLResolvedPartongRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__main92DctLN_Pythia8cLcLBeamShape);
   G__get_linked_tagnum_fwd(&G__main92DctLN_vectorlEPythia8cLcLBoseEinsteinHadroncOallocatorlEPythia8cLcLBoseEinsteinHadrongRsPgR);
   G__get_linked_tagnum_fwd(&G__main92DctLN_reverse_iteratorlEvectorlEPythia8cLcLBoseEinsteinHadroncOallocatorlEPythia8cLcLBoseEinsteinHadrongRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__main92DctLN_vectorlEvectorlEintcOallocatorlEintgRsPgRcOallocatorlEvectorlEintcOallocatorlEintgRsPgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__main92DctLN_reverse_iteratorlEvectorlEvectorlEintcOallocatorlEintgRsPgRcOallocatorlEvectorlEintcOallocatorlEintgRsPgRsPgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__main92DctLN_vectorlEPythia8cLcLColSingletcOallocatorlEPythia8cLcLColSingletgRsPgR);
   G__get_linked_tagnum_fwd(&G__main92DctLN_reverse_iteratorlEvectorlEPythia8cLcLColSingletcOallocatorlEPythia8cLcLColSingletgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__main92DctLN_vectorlEPythia8cLcLStringRegioncOallocatorlEPythia8cLcLStringRegiongRsPgR);
   G__get_linked_tagnum_fwd(&G__main92DctLN_reverse_iteratorlEvectorlEPythia8cLcLStringRegioncOallocatorlEPythia8cLcLStringRegiongRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__main92DctLN_complexlEdoublegR);
   G__get_linked_tagnum_fwd(&G__main92DctLN_maplEintcOpairlEintcOintgRcOlesslEintgRcOallocatorlEpairlEconstsPintcOpairlEintcOintgRsPgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__main92DctLN_maplEpairlEintcOintgRcOintcOlesslEpairlEintcOintgRsPgRcOallocatorlEpairlEconstsPpairlEintcOintgRcOintgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__main92DctLN_maplEintcOmaplEintcOdoublecOlesslEintgRcOallocatorlEpairlEconstsPintcOdoublegRsPgRsPgRcOlesslEintgRcOallocatorlEpairlEconstsPintcOmaplEintcOdoublecOlesslEintgRcOallocatorlEpairlEconstsPintcOdoublegRsPgRsPgRsPgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__main92DctLN_maplEdoublecOcomplexlEdoublegRcOlesslEdoublegRcOallocatorlEpairlEconstsPdoublecOcomplexlEdoublegRsPgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__main92DctLN_maplEintcOmaplEdoublecOcomplexlEdoublegRcOlesslEdoublegRcOallocatorlEpairlEconstsPdoublecOcomplexlEdoublegRsPgRsPgRsPgRcOlesslEintgRcOallocatorlEpairlEconstsPintcOmaplEdoublecOcomplexlEdoublegRcOlesslEdoublegRcOallocatorlEpairlEconstsPdoublecOcomplexlEdoublegRsPgRsPgRsPgRsPgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__main92DctLN_vectorlEvectorlEvectorlEdoublecOallocatorlEdoublegRsPgRcOallocatorlEvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgRcOallocatorlEvectorlEvectorlEdoublecOallocatorlEdoublegRsPgRcOallocatorlEvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__main92DctLN_reverse_iteratorlEvectorlEvectorlEvectorlEdoublecOallocatorlEdoublegRsPgRcOallocatorlEvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgRcOallocatorlEvectorlEvectorlEdoublecOallocatorlEdoublegRsPgRcOallocatorlEvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgRsPgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__main92DctLN_vectorlEsetlEpairlEintcOintgRcOlesslEpairlEintcOintgRsPgRcOallocatorlEpairlEintcOintgRsPgRsPgRcOallocatorlEsetlEpairlEintcOintgRcOlesslEpairlEintcOintgRsPgRcOallocatorlEpairlEintcOintgRsPgRsPgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__main92DctLN_reverse_iteratorlEvectorlEsetlEpairlEintcOintgRcOlesslEpairlEintcOintgRsPgRcOallocatorlEpairlEintcOintgRsPgRsPgRcOallocatorlEsetlEpairlEintcOintgRcOlesslEpairlEintcOintgRsPgRcOallocatorlEpairlEintcOintgRsPgRsPgRsPgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__main92DctLN_vectorlEvectorlEsetlEpairlEintcOintgRcOlesslEpairlEintcOintgRsPgRcOallocatorlEpairlEintcOintgRsPgRsPgRcOallocatorlEsetlEpairlEintcOintgRcOlesslEpairlEintcOintgRsPgRcOallocatorlEpairlEintcOintgRsPgRsPgRsPgRsPgRcOallocatorlEvectorlEsetlEpairlEintcOintgRcOlesslEpairlEintcOintgRsPgRcOallocatorlEpairlEintcOintgRsPgRsPgRcOallocatorlEsetlEpairlEintcOintgRcOlesslEpairlEintcOintgRsPgRcOallocatorlEpairlEintcOintgRsPgRsPgRsPgRsPgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__main92DctLN_reverse_iteratorlEvectorlEvectorlEsetlEpairlEintcOintgRcOlesslEpairlEintcOintgRsPgRcOallocatorlEpairlEintcOintgRsPgRsPgRcOallocatorlEsetlEpairlEintcOintgRcOlesslEpairlEintcOintgRsPgRcOallocatorlEpairlEintcOintgRsPgRsPgRsPgRsPgRcOallocatorlEvectorlEsetlEpairlEintcOintgRcOlesslEpairlEintcOintgRsPgRcOallocatorlEpairlEintcOintgRsPgRsPgRcOallocatorlEsetlEpairlEintcOintgRcOlesslEpairlEintcOintgRsPgRcOallocatorlEpairlEintcOintgRsPgRsPgRsPgRsPgRsPgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__main92DctLN_vectorlEPythia8cLcLHadronScatterPaircOallocatorlEPythia8cLcLHadronScatterPairgRsPgR);
   G__get_linked_tagnum_fwd(&G__main92DctLN_reverse_iteratorlEvectorlEPythia8cLcLHadronScatterPaircOallocatorlEPythia8cLcLHadronScatterPairgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__main92DctLN_Pythia8cLcLPartonSystems);
   G__get_linked_tagnum_fwd(&G__main92DctLN_vectorlEPythia8cLcLPartonSystemcOallocatorlEPythia8cLcLPartonSystemgRsPgR);
   G__get_linked_tagnum_fwd(&G__main92DctLN_reverse_iteratorlEvectorlEPythia8cLcLPartonSystemcOallocatorlEPythia8cLcLPartonSystemgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__main92DctLN_Pythia8cLcLLHAup);
   G__get_linked_tagnum_fwd(&G__main92DctLN_vectorlEPythia8cLcLLHAParticlecOallocatorlEPythia8cLcLLHAParticlegRsPgR);
   G__get_linked_tagnum_fwd(&G__main92DctLN_reverse_iteratorlEvectorlEPythia8cLcLLHAParticlecOallocatorlEPythia8cLcLLHAParticlegRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__main92DctLN_vectorlEPythia8cLcLLHAProcesscOallocatorlEPythia8cLcLLHAProcessgRsPgR);
   G__get_linked_tagnum_fwd(&G__main92DctLN_reverse_iteratorlEvectorlEPythia8cLcLLHAProcesscOallocatorlEPythia8cLcLLHAProcessgRsPgRcLcLiteratorgR);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__main92DctLN_Pythia8cLcLResonanceGeneric),sizeof(Pythia8::ResonanceGeneric),-1,294912,(char*)NULL,G__setup_memvarPythia8cLcLResonanceGeneric,G__setup_memfuncPythia8cLcLResonanceGeneric);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__main92DctLN_Pythia8cLcLResonanceGmZ),sizeof(Pythia8::ResonanceGmZ),-1,294912,(char*)NULL,G__setup_memvarPythia8cLcLResonanceGmZ,G__setup_memfuncPythia8cLcLResonanceGmZ);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__main92DctLN_Pythia8cLcLResonanceW),sizeof(Pythia8::ResonanceW),-1,294912,(char*)NULL,G__setup_memvarPythia8cLcLResonanceW,G__setup_memfuncPythia8cLcLResonanceW);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__main92DctLN_Pythia8cLcLResonanceTop),sizeof(Pythia8::ResonanceTop),-1,294912,(char*)NULL,G__setup_memvarPythia8cLcLResonanceTop,G__setup_memfuncPythia8cLcLResonanceTop);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__main92DctLN_Pythia8cLcLResonanceFour),sizeof(Pythia8::ResonanceFour),-1,294912,(char*)NULL,G__setup_memvarPythia8cLcLResonanceFour,G__setup_memfuncPythia8cLcLResonanceFour);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__main92DctLN_Pythia8cLcLResonanceH),sizeof(Pythia8::ResonanceH),-1,294912,(char*)NULL,G__setup_memvarPythia8cLcLResonanceH,G__setup_memfuncPythia8cLcLResonanceH);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__main92DctLN_Pythia8cLcLResonanceHchg),sizeof(Pythia8::ResonanceHchg),-1,294912,(char*)NULL,G__setup_memvarPythia8cLcLResonanceHchg,G__setup_memfuncPythia8cLcLResonanceHchg);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__main92DctLN_Pythia8cLcLResonanceZprime),sizeof(Pythia8::ResonanceZprime),-1,294912,(char*)NULL,G__setup_memvarPythia8cLcLResonanceZprime,G__setup_memfuncPythia8cLcLResonanceZprime);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__main92DctLN_Pythia8cLcLResonanceWprime),sizeof(Pythia8::ResonanceWprime),-1,294912,(char*)NULL,G__setup_memvarPythia8cLcLResonanceWprime,G__setup_memfuncPythia8cLcLResonanceWprime);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__main92DctLN_Pythia8cLcLResonanceRhorizontal),sizeof(Pythia8::ResonanceRhorizontal),-1,294912,(char*)NULL,G__setup_memvarPythia8cLcLResonanceRhorizontal,G__setup_memfuncPythia8cLcLResonanceRhorizontal);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__main92DctLN_Pythia8cLcLResonanceExcited),sizeof(Pythia8::ResonanceExcited),-1,294912,(char*)NULL,G__setup_memvarPythia8cLcLResonanceExcited,G__setup_memfuncPythia8cLcLResonanceExcited);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__main92DctLN_Pythia8cLcLResonanceGraviton),sizeof(Pythia8::ResonanceGraviton),-1,294912,(char*)NULL,G__setup_memvarPythia8cLcLResonanceGraviton,G__setup_memfuncPythia8cLcLResonanceGraviton);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__main92DctLN_Pythia8cLcLResonanceLeptoquark),sizeof(Pythia8::ResonanceLeptoquark),-1,294912,(char*)NULL,G__setup_memvarPythia8cLcLResonanceLeptoquark,G__setup_memfuncPythia8cLcLResonanceLeptoquark);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__main92DctLN_Pythia8cLcLResonanceNuRight),sizeof(Pythia8::ResonanceNuRight),-1,294912,(char*)NULL,G__setup_memvarPythia8cLcLResonanceNuRight,G__setup_memfuncPythia8cLcLResonanceNuRight);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__main92DctLN_Pythia8cLcLResonanceZRight),sizeof(Pythia8::ResonanceZRight),-1,294912,(char*)NULL,G__setup_memvarPythia8cLcLResonanceZRight,G__setup_memfuncPythia8cLcLResonanceZRight);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__main92DctLN_Pythia8cLcLResonanceWRight),sizeof(Pythia8::ResonanceWRight),-1,294912,(char*)NULL,G__setup_memvarPythia8cLcLResonanceWRight,G__setup_memfuncPythia8cLcLResonanceWRight);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__main92DctLN_Pythia8cLcLResonanceHchgchgLeft),sizeof(Pythia8::ResonanceHchgchgLeft),-1,294912,(char*)NULL,G__setup_memvarPythia8cLcLResonanceHchgchgLeft,G__setup_memfuncPythia8cLcLResonanceHchgchgLeft);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__main92DctLN_Pythia8cLcLResonanceHchgchgRight),sizeof(Pythia8::ResonanceHchgchgRight),-1,294912,(char*)NULL,G__setup_memvarPythia8cLcLResonanceHchgchgRight,G__setup_memfuncPythia8cLcLResonanceHchgchgRight);
   G__get_linked_tagnum_fwd(&G__main92DctLN_Pythia8cLcLSigmaTotal);
   G__get_linked_tagnum_fwd(&G__main92DctLN_vectorlEPythia8cLcLLHdecayChannelcOallocatorlEPythia8cLcLLHdecayChannelgRsPgR);
   G__get_linked_tagnum_fwd(&G__main92DctLN_reverse_iteratorlEvectorlEPythia8cLcLLHdecayChannelcOallocatorlEPythia8cLcLLHdecayChannelgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__main92DctLN_Pythia8cLcLSusyLesHouches);
   G__get_linked_tagnum_fwd(&G__main92DctLN_vectorlEPythia8cLcLLHdecayTablecOallocatorlEPythia8cLcLLHdecayTablegRsPgR);
   G__get_linked_tagnum_fwd(&G__main92DctLN_reverse_iteratorlEvectorlEPythia8cLcLLHdecayTablecOallocatorlEPythia8cLcLLHdecayTablegRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__main92DctLN_vectorlEPythia8cLcLLHblocklEintgRcOallocatorlEPythia8cLcLLHblocklEintgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__main92DctLN_reverse_iteratorlEvectorlEPythia8cLcLLHblocklEintgRcOallocatorlEPythia8cLcLLHblocklEintgRsPgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__main92DctLN_maplEstringcOPythia8cLcLLHgenericBlockcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOPythia8cLcLLHgenericBlockgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__main92DctLN_Pythia8cLcLSLHAinterface);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__main92DctLN_Pythia8cLcLInBeam),sizeof(Pythia8::InBeam),-1,262400,(char*)NULL,G__setup_memvarPythia8cLcLInBeam,G__setup_memfuncPythia8cLcLInBeam);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__main92DctLN_Pythia8cLcLInPair),sizeof(Pythia8::InPair),-1,262400,(char*)NULL,G__setup_memvarPythia8cLcLInPair,G__setup_memfuncPythia8cLcLInPair);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__main92DctLN_Pythia8cLcLSigmaProcess),sizeof(Pythia8::SigmaProcess),-1,263424,(char*)NULL,G__setup_memvarPythia8cLcLSigmaProcess,G__setup_memfuncPythia8cLcLSigmaProcess);
   G__get_linked_tagnum_fwd(&G__main92DctLN_vectorlEPythia8cLcLInBeamcOallocatorlEPythia8cLcLInBeamgRsPgR);
   G__get_linked_tagnum_fwd(&G__main92DctLN_reverse_iteratorlEvectorlEPythia8cLcLInBeamcOallocatorlEPythia8cLcLInBeamgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__main92DctLN_vectorlEPythia8cLcLInPaircOallocatorlEPythia8cLcLInPairgRsPgR);
   G__get_linked_tagnum_fwd(&G__main92DctLN_reverse_iteratorlEvectorlEPythia8cLcLInPaircOallocatorlEPythia8cLcLInPairgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__main92DctLN_Pythia8cLcLUserHooks);
   G__get_linked_tagnum_fwd(&G__main92DctLN_Pythia8cLcLMergingHooks);
   G__get_linked_tagnum_fwd(&G__main92DctLN_Pythia8cLcLTimeShower);
   G__get_linked_tagnum_fwd(&G__main92DctLN_vectorlEPythia8cLcLTimeDipoleEndcOallocatorlEPythia8cLcLTimeDipoleEndgRsPgR);
   G__get_linked_tagnum_fwd(&G__main92DctLN_reverse_iteratorlEvectorlEPythia8cLcLTimeDipoleEndcOallocatorlEPythia8cLcLTimeDipoleEndgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__main92DctLN_Pythia8cLcLWave4);
   G__get_linked_tagnum_fwd(&G__main92DctLN_Pythia8cLcLGammaMatrix);
   G__get_linked_tagnum_fwd(&G__main92DctLN_vectorlEcomplexlEdoublegRcOallocatorlEcomplexlEdoublegRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__main92DctLN_reverse_iteratorlEvectorlEcomplexlEdoublegRcOallocatorlEcomplexlEdoublegRsPgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__main92DctLN_vectorlEvectorlEcomplexlEdoublegRcOallocatorlEcomplexlEdoublegRsPgRsPgRcOallocatorlEvectorlEcomplexlEdoublegRcOallocatorlEcomplexlEdoublegRsPgRsPgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__main92DctLN_reverse_iteratorlEvectorlEvectorlEcomplexlEdoublegRcOallocatorlEcomplexlEdoublegRsPgRsPgRcOallocatorlEvectorlEcomplexlEdoublegRcOallocatorlEcomplexlEdoublegRsPgRsPgRsPgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__main92DctLN_vectorlEPythia8cLcLHelicityParticlecOallocatorlEPythia8cLcLHelicityParticlegRsPgR);
   G__get_linked_tagnum_fwd(&G__main92DctLN_reverse_iteratorlEvectorlEPythia8cLcLHelicityParticlecOallocatorlEPythia8cLcLHelicityParticlegRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__main92DctLN_vectorlEPythia8cLcLGammaMatrixcOallocatorlEPythia8cLcLGammaMatrixgRsPgR);
   G__get_linked_tagnum_fwd(&G__main92DctLN_reverse_iteratorlEvectorlEPythia8cLcLGammaMatrixcOallocatorlEPythia8cLcLGammaMatrixgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__main92DctLN_vectorlEPythia8cLcLWave4cOallocatorlEPythia8cLcLWave4gRsPgR);
   G__get_linked_tagnum_fwd(&G__main92DctLN_reverse_iteratorlEvectorlEPythia8cLcLWave4cOallocatorlEPythia8cLcLWave4gRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__main92DctLN_vectorlEvectorlEPythia8cLcLWave4cOallocatorlEPythia8cLcLWave4gRsPgRcOallocatorlEvectorlEPythia8cLcLWave4cOallocatorlEPythia8cLcLWave4gRsPgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__main92DctLN_reverse_iteratorlEvectorlEvectorlEPythia8cLcLWave4cOallocatorlEPythia8cLcLWave4gRsPgRcOallocatorlEvectorlEPythia8cLcLWave4cOallocatorlEPythia8cLcLWave4gRsPgRsPgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__main92DctLN_Pythia8cLcLDecayHandler);
   G__get_linked_tagnum_fwd(&G__main92DctLN_vectorlEPythia8cLcLVec4cOallocatorlEPythia8cLcLVec4gRsPgR);
   G__get_linked_tagnum_fwd(&G__main92DctLN_reverse_iteratorlEvectorlEPythia8cLcLVec4cOallocatorlEPythia8cLcLVec4gRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__main92DctLN_vectorlEPythia8cLcLFlavContainercOallocatorlEPythia8cLcLFlavContainergRsPgR);
   G__get_linked_tagnum_fwd(&G__main92DctLN_reverse_iteratorlEvectorlEPythia8cLcLFlavContainercOallocatorlEPythia8cLcLFlavContainergRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__main92DctLN_Pythia8cLcLRHadrons);
   G__get_linked_tagnum_fwd(&G__main92DctLN_Pythia8cLcLHadronLevel);
   G__get_linked_tagnum_fwd(&G__main92DctLN_vectorlEPythia8cLcLColourDipolemUcOallocatorlEPythia8cLcLColourDipolemUgRsPgR);
   G__get_linked_tagnum_fwd(&G__main92DctLN_reverse_iteratorlEvectorlEPythia8cLcLColourDipolemUcOallocatorlEPythia8cLcLColourDipolemUgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__main92DctLN_vectorlEvectorlEPythia8cLcLColourDipolemUcOallocatorlEPythia8cLcLColourDipolemUgRsPgRcOallocatorlEvectorlEPythia8cLcLColourDipolemUcOallocatorlEPythia8cLcLColourDipolemUgRsPgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__main92DctLN_reverse_iteratorlEvectorlEvectorlEPythia8cLcLColourDipolemUcOallocatorlEPythia8cLcLColourDipolemUgRsPgRcOallocatorlEvectorlEPythia8cLcLColourDipolemUcOallocatorlEPythia8cLcLColourDipolemUgRsPgRsPgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__main92DctLN_vectorlEPythia8cLcLColourJunctioncOallocatorlEPythia8cLcLColourJunctiongRsPgR);
   G__get_linked_tagnum_fwd(&G__main92DctLN_reverse_iteratorlEvectorlEPythia8cLcLColourJunctioncOallocatorlEPythia8cLcLColourJunctiongRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__main92DctLN_vectorlEPythia8cLcLColourParticlecOallocatorlEPythia8cLcLColourParticlegRsPgR);
   G__get_linked_tagnum_fwd(&G__main92DctLN_reverse_iteratorlEvectorlEPythia8cLcLColourParticlecOallocatorlEPythia8cLcLColourParticlegRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__main92DctLN_vectorlEPythia8cLcLTrialReconnectioncOallocatorlEPythia8cLcLTrialReconnectiongRsPgR);
   G__get_linked_tagnum_fwd(&G__main92DctLN_reverse_iteratorlEvectorlEPythia8cLcLTrialReconnectioncOallocatorlEPythia8cLcLTrialReconnectiongRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__main92DctLN_vectorlEPythia8cLcLSigmaProcessmUcOallocatorlEPythia8cLcLSigmaProcessmUgRsPgR);
   G__get_linked_tagnum_fwd(&G__main92DctLN_reverse_iteratorlEvectorlEPythia8cLcLSigmaProcessmUcOallocatorlEPythia8cLcLSigmaProcessmUgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__main92DctLN_Pythia8cLcLSpaceShower);
   G__get_linked_tagnum_fwd(&G__main92DctLN_vectorlEPythia8cLcLSpaceDipoleEndcOallocatorlEPythia8cLcLSpaceDipoleEndgRsPgR);
   G__get_linked_tagnum_fwd(&G__main92DctLN_reverse_iteratorlEvectorlEPythia8cLcLSpaceDipoleEndcOallocatorlEPythia8cLcLSpaceDipoleEndgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__main92DctLN_Pythia8cLcLPartonLevel);
   G__get_linked_tagnum_fwd(&G__main92DctLN_vectorlEPythia8cLcLClusteringcOallocatorlEPythia8cLcLClusteringgRsPgR);
   G__get_linked_tagnum_fwd(&G__main92DctLN_reverse_iteratorlEvectorlEPythia8cLcLClusteringcOallocatorlEPythia8cLcLClusteringgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__main92DctLN_vectorlEPythia8cLcLHistorymUcOallocatorlEPythia8cLcLHistorymUgRsPgR);
   G__get_linked_tagnum_fwd(&G__main92DctLN_reverse_iteratorlEvectorlEPythia8cLcLHistorymUcOallocatorlEPythia8cLcLHistorymUgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__main92DctLN_maplEdoublecOPythia8cLcLHistorymUcOlesslEdoublegRcOallocatorlEpairlEconstsPdoublecOPythia8cLcLHistorymUgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__main92DctLN_vectorlEvectorlEboolcOallocatorlEboolgRsPgRcOallocatorlEvectorlEboolcOallocatorlEboolgRsPgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__main92DctLN_reverse_iteratorlEvectorlEvectorlEboolcOallocatorlEboolgRsPgRcOallocatorlEvectorlEboolcOallocatorlEboolgRsPgRsPgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__main92DctLN_vectorlEPythia8cLcLProcessContainermUcOallocatorlEPythia8cLcLProcessContainermUgRsPgR);
   G__get_linked_tagnum_fwd(&G__main92DctLN_reverse_iteratorlEvectorlEPythia8cLcLProcessContainermUcOallocatorlEPythia8cLcLProcessContainermUgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__main92DctLN_Pythia8cLcLProcessLevel);
   G__get_linked_tagnum_fwd(&G__main92DctLN_Pythia8cLcLMerging);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__main92DctLN_Pythia8cLcLPythia),sizeof(Pythia8::Pythia),-1,265984,(char*)NULL,G__setup_memvarPythia8cLcLPythia,G__setup_memfuncPythia8cLcLPythia);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__main92DctLN_vectorlEPythia8cLcLResonanceWidthscOallocatorlEPythia8cLcLResonanceWidthsgRsPgR),sizeof(vector<Pythia8::ResonanceWidths,allocator<Pythia8::ResonanceWidths> >),-1,298752,(char*)NULL,G__setup_memvarvectorlEPythia8cLcLResonanceWidthscOallocatorlEPythia8cLcLResonanceWidthsgRsPgR,G__setup_memfuncvectorlEPythia8cLcLResonanceWidthscOallocatorlEPythia8cLcLResonanceWidthsgRsPgR);
   G__get_linked_tagnum_fwd(&G__main92DctLN_vectorlEPythia8cLcLResonanceWidthscOallocatorlEPythia8cLcLResonanceWidthsgRsPgRcLcLiterator);
   G__get_linked_tagnum_fwd(&G__main92DctLN_reverse_iteratorlEvectorlEPythia8cLcLResonanceWidthscOallocatorlEPythia8cLcLResonanceWidthsgRsPgRcLcLiteratorgR);
}
extern "C" void G__cpp_setupmain92Dct(void) {
  G__check_setup_version(30051515,"G__cpp_setupmain92Dct()");
  G__set_cpp_environmentmain92Dct();
  G__cpp_setup_tagtablemain92Dct();

  G__cpp_setup_inheritancemain92Dct();

  G__cpp_setup_typetablemain92Dct();

  G__cpp_setup_memvarmain92Dct();

  G__cpp_setup_memfuncmain92Dct();
  G__cpp_setup_globalmain92Dct();
  G__cpp_setup_funcmain92Dct();

   if(0==G__getsizep2memfunc()) G__get_sizep2memfuncmain92Dct();
  return;
}
class G__cpp_setup_initmain92Dct {
  public:
    G__cpp_setup_initmain92Dct() { G__add_setup_func("main92Dct",(G__incsetup)(&G__cpp_setupmain92Dct)); G__call_setup_funcs(); }
   ~G__cpp_setup_initmain92Dct() { G__remove_setup_func("main92Dct"); }
};
G__cpp_setup_initmain92Dct G__cpp_setup_initializermain92Dct;

